{
  "openapi": "3.0.0",
  "info": {
    "title": "VTEX Headless CMS",
    "description": "\nThe VTEX Headless CMS is a no-code management system for storefront content. \nThat means you can store your content as structured data in a layer decoupled from the frontend and \nuse the VTEX Headless CMS to access and deliver your content to your storefront project.\n\nNotice that the VTEX Headless CMS typically works with **FastStore** projects only. In this case, you can use this API\nto fetch data using SSR (NextJS and Gatsby v4+) or SSG (NextJS).\n\n**Servers**\n- `https://{account}.myvtex.com/`\n- `https://{workspace}--{account}.myvtex.com/`\n\n**Server variables**\n- `accountName`: Name of your VTEX account.\n- `workspace`: Name of your VTEX workspace.\n",
    "contact": {},
    "version": "0.31.2"
  },
  "servers": [
    {
      "url": "https://{account}.myvtex.com",
      "variables": {
        "account": {
          "default": "storeframework",
          "description": "Name of the VTEX account. Used as part of the URL."
        }
      }
    },
    {
      "url": "https://{workspace}--{account}.myvtex.com",
      "variables": {
        "account": {
          "default": "storeframework",
          "description": "Name of the VTEX account. Used as part of the URL."
        },
        "workspace": {
          "default": "test",
          "description": "Name of the VTEX workspace. Used as part of the URL."
        }
      }
    }
  ],
  "paths": {
    "/_v/cms/api/{builderId}/": {
      "get": {
        "summary": "Get all CMS pages",
        "description": "Gets all data from all CMS pages.",
        "operationId": "GetallCMSpages",
        "parameters": [
          {
            "name": "builderId",
            "in": "path",
            "description": "Builder ID specified in the settings of the CMS app.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "faststore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/_v/cms/api/{builderId}/{content-type}/{document-id}/": {
      "get": {
        "summary": "Get CMS page",
        "description": "Gets all data from a given page or Content Type.\n\n**Usage**\n\nCheck the following suggestions on how to use this endpoint:\n\n- Get data by document ID: `/_v/cms/api/:builderId/:content-type/:document-id`\n  - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n- Get an specific version of the document: `/_v/cms/api/:builderId/:content-type/:document-id?versionId=:version-id`\n  - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908?versionId=e7263fc8-bc68-4052-9e25-dd5a2572d3bb](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n- Get the content of a release: `/_v/cms/api/:builderId/:content-type/:document-id?releaseId=:release-id`\n  - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908?releaseId=6196c277c6dce15f9709a2a7](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n\nUse filters on the URL to get only what you need.\n- Filter by props on the first level of the document: `/_v/cms/api/faststore/plp?filters[status]=published`\n- Filter results by nested props\n  - SEO Slug: `/_v/cms/api/faststore/plp?filters[parameters.collection.seo.slug]=/summer`\n  - SEO Title: `/_v/cms/api/faststore/plp?filters[parameters.collection.seo.title]=Summer%20Deals`\n  - Category ID: `/_v/cms/api/faststore/plp?filters[parameters.collection.categoryId]=25`\n- Filter by multiple fields: `/_v/cms/api/faststore/plp?filters[parameters.collection.clusterId]=1970&filters[name]=Summer`\n",
        "operationId": "GetCMSpage",
        "parameters": [
          {
            "name": "builderId",
            "in": "path",
            "description": "Builder ID specified in the settings of the CMS app.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "faststore"
            }
          },
          {
            "name": "content-type",
            "in": "path",
            "description": "Content Type ID defined in the FastStore project.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "plp"
            }
          },
          {
            "name": "document-id",
            "in": "path",
            "description": "Document ID presented in the URL path of a CMS preview.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "5af643b5-9a6d-48f2-9b34-919dd762c908"
            }
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "Version ID presented in the URL path of a CMS preview.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "e7263fc8-bc68-4052-9e25-dd5a2572d3bb"
            }
          },
          {
            "name": "releaseId",
            "in": "query",
            "description": "Release ID presented in the URL path of a CMS preview.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "6196c277c6dce15f9709a2a7"
            }
          },
          {
            "name": "filters[status]",
            "in": "query",
            "description": "Filter by the status of the page.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": [
                "draft",
                "published",
                "publishing",
                "unpublishing"
              ]
            }
          },
          {
            "name": "filters[parameters.collection.seo.slug]",
            "in": "query",
            "description": "Filter by the SEO slug of a collection.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Summer%20Deals"
            }
          },
          {
            "name": "filters[parameters.collection.seo.title]",
            "in": "query",
            "description": "Filter by the SEO title of a collection.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Summer%20Deals"
            }
          },
          {
            "name": "filters[parameters.collection.categoryId]",
            "in": "query",
            "description": "Filter by the category ID of a collection.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "25"
            }
          },
          {
            "name": "filters[name]",
            "in": "query",
            "description": "Filter by the page name.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Summer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "GetAllResponse": {
        "title": "",
        "type": "object",
        "properties": {
          "contentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentType"
            },
            "description": "An array containing the data from all CMS pages."
          }
        }
      },
      "ContentType": {
        "title": "ContentType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Content Type ID defined in the FastStore project.",
            "example": "plp"
          },
          "name": {
            "type": "string",
            "description": "Name of the Content Type defined in the FastStore project.",
            "example": "PLP"
          },
          "configurationSchemaSets": {
            "$ref": "#/components/schemas/ConfigurationSchemaSets"
          }
        }
      },
      "ConfigurationSchemaSets": {
        "title": "ConfigurationSchemaSets",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Parameters"
          },
          "configurations": {
            "$ref": "#/components/schemas/Configurations"
          }
        },
        "description": "The schema varies according to the Content Type definition."
      },
      "Configurations": {
        "title": "Configurations",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Collection"
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          }
        }
      },
      "Schema": {
        "title": "Schema",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Collection"
          },
          "description": {
            "type": "string",
            "example": "Definition of a Collection for the CMS"
          },
          "oneOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneOf"
            },
            "description": ""
          }
        }
      },
      "OneOf": {
        "title": "OneOf",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Category"
          },
          "description": {
            "type": "string",
            "example": "Configure a Category"
          },
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "items": {},
            "description": "",
            "example": [
              "categoryId",
              "sort"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          }
        }
      },
      "Properties": {
        "title": "Properties",
        "type": "object",
        "properties": {
          "categoryId": {
            "$ref": "#/components/schemas/CategoryId"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        }
      },
      "CategoryId": {
        "title": "CategoryId",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Category ID"
          },
          "type": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "Sort": {
        "title": "Sort",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Default ordering"
          },
          "type": {
            "type": "string",
            "example": "string"
          },
          "default": {
            "type": "string",
            "example": "\"\""
          },
          "enum": {
            "type": "array",
            "items": {},
            "description": "",
            "example": [
              "\"\"",
              "discount:desc",
              "release:desc",
              "name:asc",
              "name:desc",
              "orders:desc",
              "price:asc",
              "price:desc"
            ]
          },
          "enumNames": {
            "type": "array",
            "items": {},
            "description": "",
            "example": [
              "Relevance",
              "Discount",
              "Release date",
              "Name, ascending",
              "Name, descending",
              "Sales",
              "Price: Low to High",
              "Price: High to Low"
            ]
          }
        }
      },
      "GetPageResponse": {
        "title": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Document ID.",
            "example": "7db1406b-f5fd-486c-b549-25cda55b308c"
          },
          "name": {
            "type": "string",
            "description": "Name of the page created in the CMS app.",
            "example": "Home Page"
          },
          "type": {
            "type": "string",
            "description": "Content Type.",
            "example": "home"
          },
          "status": {
            "type": "string",
            "description": "Current status of the page.",
            "example": "published"
          },
          "versionId": {
            "type": "string",
            "description": "Version ID.",
            "example": "4e840369-505a-49ab-98aa-dc0c27f53e1e"
          },
          "versionStatus": {
            "type": "string",
            "description": "Version status.",
            "example": "published"
          },
          "sections": {
            "$ref": "#/components/schemas/Sections"
          }
        }
      },
      "Sections": {
        "title": "Sections",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Section ID.",
            "example": "1641388937280"
          },
          "name": {
            "type": "string",
            "description": "Section name.",
            "example": "Hero"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "description": "Sections that compose the page."
      },
      "Data": {
        "title": "Data",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New Products Available"
          },
          "subtitle": {
            "type": "string",
            "example": "Lorem ipsum dolor amet, consectetur adipiscing elit. Lorem ipsum."
          },
          "linkText": {
            "type": "string",
            "example": "See all"
          },
          "link": {
            "type": "string",
            "example": "/"
          },
          "imageSrc": {
            "type": "string",
            "example": "https://storeframework.vtexassets.com/assets/faststore/images/banner-1___7aca7661f2b2996afaf4ccfc8096b102.jpg"
          },
          "imageAlt": {
            "type": "string",
            "example": "Gadgets"
          }
        },
        "description": "Content of the Section. Varies depending on the Section schema defined in the FastStore project."
      }
    }
  },
  "tags": []
}
