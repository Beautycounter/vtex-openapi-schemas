{
	"openapi": "3.0.0",
	"info": {
		"title": "Payment Provider Protocol",
		"description": "The Payment Provider Protocol is a set of definitions to help you integrate your payment processing API into VTEX platform, including sub-acquirers, acquirers, gateways and custom payment services. To achieve this, you need to implement a web API (REST) following the specifications from this documentation.\n\n##### MORE INFORMATION\n\n---\n\n> *VTEX Help Center - Payment Provider Protocol*\n> \n> *https://help.vtex.com/en/tutorial/payment-provider-protocol*\n\n\n##### ENDPOINT REQUIREMENTS\n\n---\n\n> &rsaquo; Must use a standard subdomain/domain name, and not a IP address.<br />\n> &rsaquo; Must be served over HTTPS on port 443 with TLS 1.2 support.<br />\n> &rsaquo; Must respond in less than 5 seconds when running the tests.<br />\n> &rsaquo; Must respond in less than 20 seconds when in production.<br />\n> &rsaquo; Must be PCI-DSS compliant to accept branded cards like Visa, Mastercard, Amex, etc.\n\n\n##### TESTING\n\n---\n\n> *VTEX - Payment Provider Test Suite*\n> \n> *https://apps.vtex.com/vtex-payment-provider-test-suite/p*\n>\n> *An extra header* `X-VTEX-API-Is-TestSuite` = `true` *will be sent for every test suite request, to help you easily identify it and mock any required scenarios.*\n\n\n##### COMMON PARAMETERS IN THE DOCUMENTATION\n\n---\n\n<table>\n  <tr>\n    <td><code>{{providerApiEndpoint}}</code></td>\n    <td>Provider's endpoint for the implementation</td>\n  </tr>\n  <tr>\n    <td><code>{{X-VTEX-API-AppKey}}</code></td>\n    <td>The AppKey configured by the merchant</td>\n  </tr>\n  <tr>\n    <td><code>{{X-VTEX-API-AppToken}}</code></td>\n    <td>The AppToken configured by the merchant</td>\n  </tr>\n</table>",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "https://{providerApiEndpoint}",
			"description": "VTEX server url"
		}
	],
	"paths": {
		"/payment-methods": {
			"get": {
				"tags": [
					"Payment Flow"
				],
				"summary": "List Payment Methods",
				"description": "Return all payment methods that your provider can handle. Please make sure you are returning only supported payment methods as listed above.",
				"operationId": "PaymentMethods",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Success"
								},
								"examples": {
									"response": {
										"value": {
											"paymentMethods": [
												"Visa",
												"Mastercard",
												"Pix",
												"American Express",
												"BankInvoice",
												"Privatelabels",
												"Promissories"
											]
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/manifest": {
			"get": {
				"tags": [
					"Payment Flow"
				],
				"summary": "List Payment Provider Manifest",
				"description": "Exposes provider manifest, a range of metadata settings, like payment methods, split configuration and custom fields.",
				"operationId": "Manifest",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string",
							"default": "insert URL here"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Success"
								},
								"examples": {
									"response": {
										"value": {
											"paymentMethods": [
												{
													"name": "Visa",
													"allowsSplit": "onCapture"
												},
												{
													"name": "Pix",
													"allowsSplit": "disabled"
												},
												{
													"name": "Mastercard",
													"allowsSplit": "onCapture"
												},
												{
													"name": "American Express",
													"allowsSplit": "onCapture"
												},
												{
													"name": "BankInvoice",
													"allowsSplit": "onAuthorize"
												},
												{
													"name": "Privatelabels",
													"allowsSplit": "disabled"
												},
												{
													"name": "Promissories",
													"allowsSplit": "disabled"
												}
											],
											"customFields": [
												{
													"name": "Merchant's custom field",
													"type": "text"
												},
												{
													"name": "Merchant's custom select field",
													"type": "select",
													"options": [
														{
															"text": "Field option 1",
															"value": "1"
														},
														{
															"text": "Field option 2",
															"value": "2"
														},
														{
															"text": "Field option 3",
															"value": "3"
														}
													]
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Create Payment",
				"description": "Creates a new payment and/or initiates the payment flow.",
				"operationId": "CreatePayment",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "X-VTEX-API-AppKey",
						"in": "header",
						"description": "The AppKey configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppKey}}"
						}
					},
					{
						"name": "X-VTEX-API-AppToken",
						"in": "header",
						"description": "The AppToken configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppToken}}"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"title": "The Root  ",
								"required": [
									"reference",
									"orderId",
									"shopperInteraction",
									"transactionId",
									"paymentId",
									"paymentMethod",
									"paymentMethodCustomCode",
									"merchantName",
									"value",
									"currency",
									"installments",
									"installmentsInterestRate",
									"installmentsValue",
									"deviceFingerprint",
									"ipAddress",
									"card",
									"miniCart",
									"url",
									"callbackUrl",
									"returnUrl"
								],
								"properties": {
									"reference": {
										"type": "string",
										"title": "reference",
										"description": "Merchant's order reference provided by VTEX Checkout",
										"default": "",
										"pattern": "^(.*)$"
									},
									"orderId": {
										"type": "string",
										"title": "orderId",
										"description": "Merchant's order identifier provided by VTEX Checkout (also called order group)",
										"default": "",
										"pattern": "^(.*)$"
									},
									"shopperInteraction": {
										"type": "string",
										"title": "shopperInteraction",
										"description": "Indicates which system the buyer interacted with (examples: e-commerce, instore, subscription)",
										"default": "",
										"pattern": "^(.*)$"
									},
									"verificationOnly": {
										"type": "boolean",
										"title": "verificationOnly",
										"description": "Indicates whether this payment is just to validate the buyer's payment method information (for instance, validate the credit card information)",
										"default": "",
										"pattern": "^(.*)$"
									},
									"transactionId": {
										"type": "string",
										"title": "transactionId",
										"description": "VTEX transaction ID related to this payment",
										"default": "",
										"pattern": "^(.*)$"
									},
									"paymentId": {
										"type": "string",
										"title": "paymentId",
										"description": "VTEX payment ID that can be used as unique identifier",
										"default": "",
										"pattern": "^(.*)$"
									},
									"paymentMethod": {
										"type": "string",
										"title": "paymentMethod",
										"description": "One of the available payment methods listed above",
										"default": "",
										"pattern": "^(.*)$"
									},
									"paymentMethodCustomCode": {
										"type": "string",
										"title": "paymentMethodCustomcode",
										"description": "Configurable for Cobranded and Privatelabels payment methods",
										"default": "",
										"pattern": "^(.*)$"
									},
									"merchantName": {
										"type": "string",
										"title": "merchantName",
										"description": "VTEX merchant name that will receive the payment",
										"default": "",
										"pattern": "^(.*)$"
									},
									"value": {
										"type": "number",
										"title": "value",
										"description": "Value amount of the payment",
										"default": "",
										"pattern": "^(.*)$"
									},
									"currency": {
										"type": "string",
										"title": "currency",
										"description": "Currency code (ISO 4217 alpha-3)",
										"default": "",
										"pattern": "^(.*)$"
									},
									"installments": {
										"type": "number",
										"title": "installments",
										"description": "Number of installments",
										"default": "",
										"pattern": "^(.*)$"
									},
									"installmentsInterestRate": {
										"type": "number",
										"title": "intallmentsInterestRate",
										"description": "The interest rate"
									},
									"installmentsValue": {
										"type": "number",
										"title": "installmentsValue",
										"description": "The value of each installment"
									},
									"deviceFingerprint": {
										"type": "string",
										"title": "deviceFingerprint",
										"description": "A hash that represents the device used to initiate the payment",
										"default": "",
										"pattern": "^(.*)$"
									},
									"ipAddress": {
										"type": "string",
										"title": "ipAddress",
										"description": "The IP Address of the buyer"
									},
									"card": {
										"type": "object",
										"title": "Card",
										"required": [
											"holder",
											"number",
											"csc",
											"expiration"
										],
										"properties": {
											"holder": {
												"type": "string",
												"title": "holder",
												"description": "Card holder name",
												"default": "",
												"pattern": "^(.*)$"
											},
											"number": {
												"type": "string",
												"title": "number",
												"description": "Card number",
												"default": "",
												"pattern": "^(.*)$"
											},
											"csc": {
												"type": "string",
												"title": "csc",
												"description": "Card security code",
												"default": "",
												"pattern": "^(.*)$"
											},
											"bin": {
												"type": "string",
												"title": "bin",
												"description": "First 6 digits of the card number (this field is absent in case the provider does not use the Secure Proxy)"
											},
											"numberToken": {
												"type": "string",
												"title": "numberToken",
												"description": "A token representing the card number (this field is absent in case the provider does not use the Secure Proxy)"
											},
											"numberLenght": {
												"type": "number",
												"title": "numberLenght",
												"description": "The number of characters in the Card Security Code (this field is absent in case the provider does not use the Secure Proxy)"
											},
											"cscToken": {
												"type": "string",
												"title": "cscToken",
												"description": "A token representing the card security code (this field is absent in case the provider does not use the Secure Proxy)"
											},
											"cscLenght": {
												"type": "number",
												"title": "cscLenght",
												"description": "The number of characters in the Card Security Code (this field is absent in case the provider does not use the Secure Proxy)"
											},
											"expiration": {
												"type": "object",
												"title": "expiration",
												"required": [
													"month",
													"year",
													"document"
												],
												"properties": {
													"month": {
														"type": "string",
														"title": "month",
														"description": "Card expiration month (2-digits)",
														"default": "",
														"pattern": "^(.*)$"
													},
													"year": {
														"type": "string",
														"title": "year",
														"default": "",
														"description": "Card expiration year (4-digits)",
														"pattern": "^(.*)$"
													},
													"document": {
														"type": "string",
														"title": "document",
														"description": "Card holder's document"
													}
												}
											}
										}
									},
									"miniCart": {
										"type": "object",
										"title": "Minicart",
										"required": [
											"shippingValue",
											"taxValue",
											"buyer",
											"shippingAddress",
											"billingAddress",
											"items"
										],
										"properties": {
											"shippingValue": {
												"type": "number",
												"title": "shippingValue",
												"description": "Total shipping value",
												"default": 0
											},
											"taxValue": {
												"type": "number",
												"title": "taxValue",
												"description": "Total tax value",
												"default": 0
											},
											"buyer": {
												"type": "object",
												"title": "buyer",
												"required": [
													"firstName",
													"lastName",
													"document",
													"documentType",
													"email",
													"phone",
													"isCorporate"
												],
												"properties": {
													"id": {
														"type": "string",
														"title": "id",
														"description": "Buyer's unique identifier",
														"default": "",
														"pattern": "^(.*)$"
													},
													"firstName": {
														"type": "string",
														"title": "firstName",
														"description": "Buyer's first name",
														"default": "",
														"pattern": "^(.*)$"
													},
													"lastName": {
														"type": "string",
														"title": "lastName",
														"description": "Buyer's last name",
														"default": "",
														"pattern": "^(.*)$"
													},
													"document": {
														"type": "string",
														"title": "document",
														"description": "Buyer's document number",
														"default": "",
														"pattern": "^(.*)$"
													},
													"documentType": {
														"type": "string",
														"title": "documentType",
														"description": "Buyer's document type",
														"default": "",
														"pattern": "^(.*)$"
													},
													"email": {
														"type": "string",
														"title": "email",
														"description": "Buyer's email",
														"default": "",
														"pattern": "^(.*)$"
													},
													"phone": {
														"type": "string",
														"title": "phone",
														"description": "Buyer's phone number",
														"default": "",
														"pattern": "^(.*)$"
													},
													"isCorporate": {
														"type": "boolean",
														"title": "isCorporate",
														"description": "Indicates whether or not the buyer is corporate",
														"default": "true",
														"pattern": "^(.*)$"
													},
													"corporateName": {
														"type": "string",
														"title": "corporateName",
														"description": "Buyer's corporate name",
														"default": "",
														"pattern": "^(.*)$"
													},
													"tradeName": {
														"type": "string",
														"title": "tradeName",
														"description": "Buyer's trade name",
														"default": "",
														"pattern": "^(.*)$"
													},
													"corporateDocument": {
														"type": "string",
														"title": "corporateDocument",
														"description": "Buyer's corporate document number",
														"default": "",
														"pattern": "^(.*)$"
													},
													"createdDate": {
														"type": "string",
														"title": "createdDate",
														"description": "Buyer's create datetime in format yyyy-MM-ddTHH:mm:ss",
														"default": "",
														"pattern": "^(.*)$"
													}
												}
											},
											"shippingAddress": {
												"type": "object",
												"title": "shippingAddress",
												"required": [
													"country",
													"street",
													"number",
													"complement",
													"neighborhood",
													"postalCode",
													"city",
													"state"
												],
												"properties": {
													"country": {
														"type": "string",
														"title": "country",
														"description": "Shipping address: country code (ISO 3166 alpha-3)",
														"default": "",
														"pattern": "^(.*)$"
													},
													"street": {
														"type": "string",
														"title": "street",
														"description": "Shipping address: street",
														"default": "",
														"pattern": "^(.*)$"
													},
													"number": {
														"type": "string",
														"title": "number  ",
														"default": "",
														"pattern": "^(.*)$"
													},
													"complement": {
														"type": "string",
														"title": "complement",
														"description": "Shipping address: complement",
														"default": "",
														"pattern": "^(.*)$"
													},
													"neighborhood": {
														"type": "string",
														"title": "neighborhood ",
														"description": "Shipping address: neighborhood",
														"default": "",
														"pattern": "^(.*)$"
													},
													"postalCode": {
														"type": "string",
														"title": "postalcode",
														"description": "Shipping address: postal code",
														"default": "",
														"pattern": "^(.*)$"
													},
													"city": {
														"type": "string",
														"title": "city ",
														"description": "Shipping address: city",
														"default": "",
														"pattern": "^(.*)$"
													},
													"state": {
														"type": "string",
														"title": "state",
														"description": "Shipping address: state/province",
														"default": "",
														"pattern": "^(.*)$"
													}
												}
											},
											"billingAddress": {
												"type": "object",
												"title": "billingAddress  ",
												"required": [
													"country",
													"street",
													"number",
													"complement",
													"neighborhood",
													"postalCode",
													"city",
													"state"
												],
												"properties": {
													"country": {
														"type": "string",
														"title": "country  ",
														"description": "Billing address: country code (ISO 3166 alpha-3)",
														"default": "",
														"pattern": "^(.*)$"
													},
													"street": {
														"type": "string",
														"title": "street  ",
														"description": "Billing address: street",
														"default": "",
														"pattern": "^(.*)$"
													},
													"number": {
														"type": "string",
														"title": "number  ",
														"description": "Billing address: number",
														"default": "",
														"pattern": "^(.*)$"
													},
													"complement": {
														"type": "string",
														"title": "complement",
														"description": "Billing address: complement",
														"default": "",
														"pattern": "^(.*)$"
													},
													"neighborhood": {
														"type": "string",
														"title": "neighborhood",
														"description": "Billing address: neighborhood",
														"default": "",
														"pattern": "^(.*)$"
													},
													"postalCode": {
														"type": "string",
														"title": "postalCode",
														"description": "Billing address: postal code",
														"default": "",
														"pattern": "^(.*)$"
													},
													"city": {
														"type": "string",
														"title": "city",
														"description": "Billing address: city",
														"default": "",
														"pattern": "^(.*)$"
													},
													"state": {
														"type": "string",
														"title": "state",
														"description": "Billing address: state/province",
														"default": "",
														"pattern": "^(.*)$"
													}
												}
											},
											"items": {
												"type": "array",
												"title": "items  ",
												"items": {
													"type": "object",
													"title": "items  ",
													"required": [
														"name",
														"price",
														"quantity",
														"discount",
														"categoryId",
														"deliveryType",
														"sellerId"
													],
													"properties": {
														"id": {
															"type": "string",
															"title": "id",
															"description": "Item identifier",
															"default": "",
															"pattern": "^(.*)$"
														},
														"name": {
															"type": "string",
															"title": "name",
															"description": "Item name",
															"default": "",
															"pattern": "^(.*)$"
														},
														"price": {
															"type": "number",
															"title": "price",
															"description": "Item price per unity",
															"default": 0
														},
														"quantity": {
															"type": "integer",
															"title": "quantity",
															"description": "Item quantity",
															"default": 0
														},
														"discount": {
															"type": "integer",
															"title": "discount",
															"description": "Discount received for the item",
															"default": 0
														},
														"deliveryType": {
															"type": "string",
															"title": "deliveryType",
															"description": "The delivery SLA selected for this item. Possible values in Brazil, for instance, are PAC, SEDEX, for example"
														},
														"categoryId": {
															"type": "string",
															"title": "categoryId",
															"description": "The item category Id"
														},
														"sellerId": {
															"type": "string",
															"title": "sellerId",
															"description": "In case of a marketplace transaction, this is the Id of the seller for this specific item. Otherwise, this is filled with a '1'"
														},
														"taxRate": {
															"type": "number",
															"description": "Value of the sum of all Taxes applied to each item. Rates are in percentage, so 5% is represented as 0.05.",
															"example": 0.05
														},
														"taxValue": {
															"type": "number",
															"description": "Total Tax value of the item (taxRate times value).",
															"example": 40.00
														}
													}
												}
											}
										}
									},
									"recipients": {
										"type": "object",
										"title": "recipients",
										"required": [
											"id",
											"name",
											"documentType",
											"document",
											"role",
											"amount"
										],
										"properties": {
											"id": {
												"type": "string",
												"title": "id",
												"description": "Recipient identifier"
											},
											"name": {
												"type": "string",
												"title": "name",
												"description": "Recipient name"
											},
											"documentType": {
												"type": "string",
												"description": "Recipient document type",
												"title": "documentType"
											},
											"document": {
												"type": "string",
												"title": "document",
												"description": "Recipient document number"
											},
											"role": {
												"type": "string",
												"description": "Indicates if the recipient is the seller or the marketplace",
												"title": "role"
											},
											"amount": {
												"type": "number",
												"description": "Amount due to this recipient",
												"title": "amount"
											},
											"chargeProcessingFee": {
												"type": "boolean",
												"title": "chargeProcessingFee",
												"description": "Indicates whether or not this recipient is charged for processing fees"
											},
											"chargebackLiable": {
												"type": "boolean",
												"title": "chargebackLiable",
												"description": "Indicates whether or not this recipient is liable to chargebacks"
											}
										}
									},
									"merchantSettings": {
										"type": "object",
										"title": "merchantSettings",
										"required": [
											"name",
											"value"
										],
										"properties": {
											"name": {
												"type": "string",
												"title": "name",
												"description": "The custom field name"
											},
											"value": {
												"type": "string",
												"title": "value",
												"description": "The custom field value"
											}
										}
									},
									"url": {
										"type": "string",
										"title": "url",
										"description": "The order URL from merchant's backoffice",
										"default": "",
										"pattern": "^(.*)$"
									},
									"inboundRequestUrl": {
										"type": "string",
										"title": "inboundRequestUrl",
										"description": "The URL to call for the Inbound Request (BETA)"
									},
									"secureProxyUrl": {
										"type": "string",
										"title": "secureProxyUrl",
										"description": "The URL for the Secure Proxy to authorize the Payment (this field is absent in case the provider does not use the Secure Proxy)"
									},
									"sandBoxMode": {
										"type": "boolean",
										"title": "sandBoxMode",
										"description": "Indicates whether or not this request is being sent from a sandbox environment"
									},
									"totalCartValue": {
										"type": "number",
										"description": "Total amount of the shopping cart that this payment is part of. It can be used together with the value to calculate the percentage that this payment represents of the total.",
										"example": 1234.00
									},
									"callbackUrl": {
										"type": "string",
										"title": "callbackUrl",
										"description": "The URL you need to call to send the callbacks/notifications of payment status changes",
										"default": "",
										"pattern": "^(.*)$"
									},
									"returnUrl": {
										"type": "string",
										"title": "returnUrl",
										"description": "The URL you need to redirect the end user back to merchant's store when using the redirect flow",
										"default": "",
										"pattern": "^(.*)$"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "250"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 18 Dec 2017 17:48:04 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d1584732-1e85-4e80-94d7-7db826241865"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success-Approved"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"status": "approved",
											"authorizationId": "AUT123567",
											"nsu": "NSU987432",
											"tid": "TID1578324421",
											"acquirer": "FooBarPayments",
											"delayToAutoSettle": 432000,
											"delayToAutoSettleAfterAntifraud": 120,
											"delayToCancel": 600
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-BadRequest"
								},
								"examples": {
									"response": {
										"value": {
											"status": "error",
											"code": "ERR123",
											"message": "The currency ABC is not supported"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-BadRequest"
								},
								"examples": {
									"response": {
										"value": {
											"status": "error",
											"code": "ERR123",
											"message": "Authorization has failed due to an internal error"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/cancellations": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Cancel Payment",
				"description": "Cancels a payment that was not yet approved.",
				"operationId": "CancelPayment",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "X-VTEX-API-AppKey",
						"in": "header",
						"description": "The AppKey configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppKey}}"
						}
					},
					{
						"name": "X-VTEX-API-AppToken",
						"in": "header",
						"description": "The AppToken configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppToken}}"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CancelPaymentRequest"
							},
							"example": {
								"paymentId": "{{paymentId}}",
								"requestId": "{{requestId}}"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "195"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:24:56 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "a356f861-1a30-4260-82ae-938476b30fbf"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success1"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"cancellationId": "1231323234234",
											"code": null,
											"message": "Sucessfully cancelled",
											"requestId": "D12D9B80972C462980F5067A3A126837"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError1"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"cancellationId": null,
											"code": "ERR123",
											"message": "Cancellation has failed due to an internal error",
											"requestId": "D12D9B80972C462980F5067A3A126837"
										}
									}
								}
							}
						}
					},
					"501": {
						"description": "Not Implemented",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError1"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"cancellationId": null,
											"code": "cancel-manually",
											"message": "This payment needs to be manually cancelled",
											"requestId": "D12D9B80972C462980F5067A3A126837"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/settlements": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Capture Payment",
				"description": "Captures (settle) a payment that was previously approved.",
				"operationId": "CapturePayment",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "X-VTEX-API-AppKey",
						"in": "header",
						"description": "The AppKey configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppKey}}"
						}
					},
					{
						"name": "X-VTEX-API-AppToken",
						"in": "header",
						"description": "The AppToken configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppToken}}"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"$ref": "#/components/schemas/CapturePayment"
							},
							"example":{

							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "86"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:28:24 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "33189b5d-daa0-4974-8989-47a408752bb8"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success2"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
											"value": 57,
											"code": null,
											"message": "Sucessfully settled",
											"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError2"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"settleId": null,
											"value": 0,
											"code": "ERR123",
											"message": "Settlement has failed due to an internal error",
											"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/refunds": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Refund Payment",
				"description": "Refunds a payment that was previously captured (settled). You can expect partial refunds.",
				"operationId": "RefundPayment",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "X-VTEX-API-AppKey",
						"in": "header",
						"description": "The AppKey configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppKey}}"
						}
					},
					{
						"name": "X-VTEX-API-AppToken",
						"in": "header",
						"description": "The AppToken configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppToken}}"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"$ref": "#/components/schemas/RefundPayment"
							},
							"example":{

							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "86"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:34:57 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d91fb3a7-b233-4d7a-b3d2-75263856d29a"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success3"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
											"value": 57,
											"code": null,
											"message": "Sucessfully refunded",
											"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError3"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"refundId": null,
											"value": 0,
											"code": "ERR123",
											"message": "Refund has failed due to an internal error",
											"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
										}
									}
								}
							}
						}
					},
					"501": {
						"description": "Not Implemented",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError3"
								},
								"examples": {
									"response": {
										"value": {
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"refundId": null,
											"value": 0,
											"code": "refund-manually",
											"message": "This payment needs to be manually refunded",
											"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/inbound-request/{action}": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Inbound Request (BETA)",
				"description": "Forwards a request back to your endpoint using the inboundRequestsUrl provided in the POST /payments payload.",
				"operationId": "InboundRequest(BETA)",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "action",
						"in": "path",
						"description": "Will be the same you have used to call the `inboundRequestsUrl`",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "{{action}}"
						}
					},
					{
						"name": "X-VTEX-API-AppKey",
						"in": "header",
						"description": "The AppKey configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppKey}}"
						}
					},
					{
						"name": "X-VTEX-API-AppToken",
						"in": "header",
						"description": "The AppToken configured by the merchant (optional configuration)",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "{{X-VTEX-API-AppToken}}"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "paymentId",
						"in": "path",
						"description": "VTEX payment identifier",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InboundRequest_BETA_Request"
							},
							"example": {
								"requestId": "{{requestId}}",
								"transactionId": "{{transactionId}}",
								"paymentId": "{{paymentId}}",
								"authorizationId": "{{authorizationId}}",
								"tid": "{{tid}}",
								"requestData": {
									"body": "{{originalRequestBody}}"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Success4"
								},
								"examples": {
									"response": {
										"value": {
											"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
											"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
											"responseData": {
												"statusCode": 200,
												"contentType": "application/json",
												"content": "{\"myAttribute\":\"anyValue\"}"
											}
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/token": {
			"post": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Create Authorization Token",
				"description": "Create token that will be used to identify the same context  when we redirect the merchant to your application.",
				"operationId": "CreateAuthorizationToken",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAuthorizationTokenRequest"
							},
							"example": {
								"applicationId": "vtex",
								"returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "71"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 16 Jul 2018 15:10:44 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d8f17ed2-ba9f-4f6d-8f8c-52bd425d7a52"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success5"
								},
								"examples": {
									"response": {
										"value": {
											"applicationId": "vtex",
											"token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/redirect": {
			"get": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Provider Authentication",
				"description": "Use the application of provider for merchant's authentication.",
				"operationId": "ProviderAuthentication",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "applicationId",
						"in": "query",
						"description": "VTEX application identifier",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "vtex"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "token",
						"in": "query",
						"description": "You must generate a token that will be used to identify the same context when we redirect the merchant to your application.",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "{{token}}"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/credentials": {
			"get": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Get Credentials",
				"description": "Get the credentials of merchant.",
				"operationId": "GetCredentials",
				"parameters": [
					{
						"name": "providerApiEndpoint",
						"in": "path",
						"required": true,
						"description": "The endpoint URL",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "applicationId",
						"in": "query",
						"description": "VTEX application identifier",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "vtex"
						}
					},
					{
						"name": "authorizationCode",
						"in": "query",
						"description": "Code generate by affiliation that will be used to identify the merchant authorization",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "{{authorizationCode}}"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "122"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 16 Jul 2018 14:22:51 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "187e390e-8cf8-4f42-a376-242f5ef4f740"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success6"
								},
								"examples": {
									"response": {
										"value": {
											"applicationId": "vtex",
											"appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
											"appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
										}
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		}
	},
	"components": {
		"schemas": {
			"Success": {
				"title": "Success",
				"required": [
					"paymentMethods"
				],
				"type": "object",
				"properties": {
					"paymentMethods": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": ""
					}
				},
				"example": {
					"paymentMethods": [
						"Visa",
						"Mastercard",
						"Pix",
						"American Express",
						"BankInvoice",
						"Privatelabels",
						"Promissories"
					]
				}
			},
			"Success-Approved": {
				"title": "Success-Approved",
				"required": [
					"paymentId",
					"status",
					"authorizationId",
					"nsu",
					"tid",
					"acquirer",
					"delayToAutoSettle",
					"delayToAutoSettleAfterAntifraud",
					"delayToCancel"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"authorizationId": {
						"type": "string"
					},
					"nsu": {
						"type": "string"
					},
					"tid": {
						"type": "string"
					},
					"acquirer": {
						"type": "string"
					},
					"delayToAutoSettle": {
						"type": "integer",
						"format": "int32"
					},
					"delayToAutoSettleAfterAntifraud": {
						"type": "integer",
						"format": "int32"
					},
					"delayToCancel": {
						"type": "integer",
						"format": "int32"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"status": "approved",
					"authorizationId": "AUT123567",
					"nsu": "NSU987432",
					"tid": "TID1578324421",
					"acquirer": "FooBarPayments",
					"delayToAutoSettle": 432000,
					"delayToAutoSettleAfterAntifraud": 120,
					"delayToCancel": 600
				}
			},
			"Fail-BadRequest": {
				"title": "Fail-BadRequest",
				"required": [
					"status",
					"code",
					"message"
				],
				"type": "object",
				"properties": {
					"status": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"example": {
					"status": "error",
					"code": "ERR123",
					"message": "The currency ABC is not supported"
				}
			},
			"CancelPaymentRequest": {
				"title": "CancelPaymentRequest",
				"required": [
					"paymentId",
					"requestId",
					"authorizationId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string",
						"description": "VTEX payment identifier"
					},
					"requestId": {
						"type": "string",
						"description": "VTEX request identifier"
					},
					"authorizationId": {
						"type": "string",
						"description": "Payment authorization identifier (in case it was authorized previous to the cancellation request)."
					},
					"sandboxMode": {
						"type": "boolean",
						"description": "Indicates whether or not this request is being sent from a sandbox environment"
					}
				},
				"example": {
					"paymentId": "{{paymentId}}",
					"requestId": "{{requestId}}"
				}
			},
			"Success1": {
				"title": "Success1",
				"required": [
					"paymentId",
					"cancellationId",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"cancellationId": {
						"type": "string"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"cancellationId": "1231323234234",
					"code": null,
					"message": "Sucessfully cancelled",
					"requestId": "D12D9B80972C462980F5067A3A126837"
				}
			},
			"Fail-GenericError1": {
				"title": "Fail-GenericError1",
				"required": [
					"paymentId",
					"cancellationId",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"cancellationId": {
						"type": "string",
						"nullable": true
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"cancellationId": null,
					"code": "ERR123",
					"message": "Cancellation has failed due to an internal error",
					"requestId": "D12D9B80972C462980F5067A3A126837"
				}
			},
			"Success2": {
				"title": "Success2",
				"required": [
					"paymentId",
					"settleId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"settleId": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
					"value": 57,
					"code": null,
					"message": "Sucessfully settled",
					"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
				}
			},
			"Fail-GenericError2": {
				"title": "Fail-GenericError2",
				"required": [
					"paymentId",
					"settleId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"settleId": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "integer",
						"format": "int32"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"settleId": null,
					"value": 0,
					"code": "ERR123",
					"message": "Settlement has failed due to an internal error",
					"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
				}
			},
			"Success3": {
				"title": "Success3",
				"required": [
					"paymentId",
					"refundId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"refundId": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
					"value": 57,
					"code": null,
					"message": "Sucessfully refunded",
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
				}
			},
			"Fail-GenericError3": {
				"title": "Fail-GenericError3",
				"required": [
					"paymentId",
					"refundId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"refundId": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "integer",
						"format": "int32"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"refundId": null,
					"value": 0,
					"code": "ERR123",
					"message": "Refund has failed due to an internal error",
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
				}
			},
			"CapturePayment": {
				"title": "CapturePayment",
				"required": [
					"transactionId",
					"requestId",
					"paymentId",
					"value",
					"authorizationId",
					"tid"
				],
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "VTEX identifier for the transaction related to this payment"
					},
					"requestId": {
						"type": "string",
						"description": "The unique identifier for this request to ensure its idempotency"
					},
					"paymentId": {
						"type": "string",
						"description": "VTEX identifier for this payment"
					},
					"value": {
						"type": "number",
						"description": "The amount to be settled/captured"
					},
					"authorizationId": {
						"type": "string",
						"description": "The authorization identifier for this payment"
					},
					"tid": {
						"type": "string",
						"description": "Provider's unique identifier for the transaction"
					},
					"recipients": {
						"type": "array",
						"description": "Array containing the information for the recipients of this payment in case the Payment Provider is configured to allow the split of payments.",
						"items":  {
							"title": "Recipients",
							"required": [
							  "id",
							  "name",
							  "documentType",
							  "document",
							  "role",
							  "amount"
							],
							"type": "object",
							"properties": {
							  "id": {
								"type": "string",
								"description": "Recipient identifier"
							  },
							  "name": {
								"type": "string",
								"description": "Recipient name"
							  },
							  "documentType": {
								"type": "string",
								"description": "Recipient document type"
							  },
							  "document": {
								"type": "number",
								"description": "Recipient document number"
							  },
							  "role": {
								"type": "string",
								"description": "Indicates if the recipient is the seller or the marketplace"
							  },
							  "chargeProcessingFee": {
								"type": "boolean",
								"description": "Indicates whether or not this recipient is charged for processing fees"
							  },
							  "chargebackLiable": {
								  "type": "boolean",
								  "description": "Indicates whether or not this recipient is liable to chargebacks"
							  },
							  "amount": {
								  "type": "number",
								  "description": "Amount due to this recipient"
							  }
							},
							"example": {
							  "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
							  "method": "CreditCard",
							  "name": "Visa",
							  "value": 63.98,
							  "installments": 3,
							  "details": {
								"bin": "507860",
								"lastDigits": "2798",
								"holder": "John Doe",
								"address": {
								  "country": "BRA",
								  "street": "Rua Praia de Botafogo",
								  "number": "518",
								  "complement": "2o. andar",
								  "neighborhood": "Botafogo",
								  "postalCode": "22250-040",
								  "city": "Rio de Janeiro",
								  "state": "RJ"
								}
							  }
							}
						  } 
					},
					"sandboxMode": {
						"type": "boolean",
						"description": "Indicates whether or not this request is being sent from a sandbox environment"
					}
				},
				"example": {
					"transactionId": "{{transactionId}}"
				}
			},
			"RefundPayment": {
				"title": "RefundPayment",
				"required": [
					"transactionId",
					"requestId",
					"settleId",
					"paymentId",
					"value",
					"authorizationId",
					"tid"
				],
				"type": "object",
				"properties": {
					"requestId": {
						"type": "string",
						"description": "The unique identifier for this request to ensure its idempotency"
					},
					"settleId": {
						"type": "string",
						"description": "Provider's settlement identifier"
					},
					"paymentId": {
						"type": "string",
						"description": "VTEX identifier for this payment"
					},
					"tid": {
						"type": "string",
						"description": "Provider's unique identifier for the transaction"
					},
					"value": {
						"type": "number",
						"description": "The amount to be refunded"
					},
					"transactionId": {
						"type": "string",
						"description": "VTEX identifier for this transaction"
					},
					"recipients": {
						"type": "array",
						"description": "Array containing the information for the recipients of this payment in case the Payment Provider is configured to allow the split of payments.",
						"items":  {
							"title": "Recipients",
							"required": [
							  "id",
							  "name",
							  "documentType",
							  "document",
							  "role",
							  "amount"
							],
							"type": "object",
							"properties": {
							  "id": {
								"type": "string",
								"description": "Recipient identifier"
							  },
							  "name": {
								"type": "string",
								"description": "Recipient name"
							  },
							  "documentType": {
								"type": "string",
								"description": "Recipient document type"
							  },
							  "document": {
								"type": "number",
								"description": "Recipient document number"
							  },
							  "role": {
								"type": "string",
								"description": "Indicates if the recipient is the seller or the marketplace"
							  },
							  "chargeProcessingFee": {
								"type": "boolean",
								"description": "Indicates whether or not this recipient is charged for processing fees"
							  },
							  "chargebackLiable": {
								  "type": "boolean",
								  "description": "Indicates whether or not this recipient is liable to chargebacks"
							  },
							  "amount": {
								  "type": "number",
								  "description": "Amount due to this recipient"
							  }
							},
							"example": {
							  "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
							  "method": "CreditCard",
							  "name": "Visa",
							  "value": 63.98,
							  "installments": 3,
							  "details": {
								"bin": "507860",
								"lastDigits": "2798",
								"holder": "John Doe",
								"address": {
								  "country": "BRA",
								  "street": "Rua Praia de Botafogo",
								  "number": "518",
								  "complement": "2o. andar",
								  "neighborhood": "Botafogo",
								  "postalCode": "22250-040",
								  "city": "Rio de Janeiro",
								  "state": "RJ"
								}
							  }
							}
						  } 
					},
					"sandboxMode": {
						"type": "boolean",
						"description": "Indicates whether or not this request is being sent from a sandbox environment"
					}
				},
				"example": {
					"transactionId": "{{transactionId}}"
				}
			},
			"InboundRequest_BETA_Request": {
				"title": "InboundRequest(BETA)Request",
				"required": [
					"requestId",
					"transactionId",
					"paymentId",
					"authorizationId",
					"tid",
					"requestData"
				],
				"type": "object",
				"properties": {
					"requestId": {
						"type": "string"
					},
					"transactionId": {
						"type": "string"
					},
					"paymentId": {
						"type": "string"
					},
					"authorizationId": {
						"type": "string"
					},
					"tid": {
						"type": "string"
					},
					"requestData": {
						"$ref": "#/components/schemas/RequestData"
					}
				},
				"example": {
					"requestId": "{{requestId}}",
					"transactionId": "{{transactionId}}",
					"paymentId": "{{paymentId}}",
					"authorizationId": "{{authorizationId}}",
					"tid": "{{tid}}",
					"requestData": {
						"body": "{{originalRequestBody}}"
					}
				}
			},
			"RequestData": {
				"title": "RequestData",
				"required": [
					"body"
				],
				"type": "object",
				"properties": {
					"body": {
						"type": "string"
					}
				},
				"example": {
					"body": "{{originalRequestBody}}"
				}
			},
			"Success4": {
				"title": "Success4",
				"required": [
					"requestId",
					"paymentId",
					"responseData"
				],
				"type": "object",
				"properties": {
					"requestId": {
						"type": "string"
					},
					"paymentId": {
						"type": "string"
					},
					"responseData": {
						"$ref": "#/components/schemas/ResponseData"
					}
				},
				"example": {
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"responseData": {
						"statusCode": 200,
						"contentType": "application/json",
						"content": "{\"myAttribute\":\"anyValue\"}"
					}
				}
			},
			"ResponseData": {
				"title": "ResponseData",
				"required": [
					"statusCode",
					"contentType",
					"content"
				],
				"type": "object",
				"properties": {
					"statusCode": {
						"type": "integer",
						"format": "int32"
					},
					"contentType": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"example": {
					"statusCode": 200,
					"contentType": "application/json",
					"content": "{\"myAttribute\":\"anyValue\"}"
				}
			},
			"CreateAuthorizationTokenRequest": {
				"title": "CreateAuthorizationTokenRequest",
				"required": [
					"applicationId",
					"returnUrl"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string",
						"description": "VTEX application identifier"
					},
					"returnUrl": {
						"type": "string",
						"description": "The base URL you need to use to form the final URL when redirecting the merchant back to VTEX"
					}
				},
				"example": {
					"applicationId": "vtex",
					"returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
				}
			},
			"Success5": {
				"title": "Success5",
				"required": [
					"applicationId",
					"token"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"example": {
					"applicationId": "vtex",
					"token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
				}
			},
			"Success6": {
				"title": "Success6",
				"required": [
					"applicationId",
					"appKey",
					"appToken"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string"
					},
					"appKey": {
						"type": "string"
					},
					"appToken": {
						"type": "string"
					}
				},
				"example": {
					"applicationId": "vtex",
					"appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
					"appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
				}
			}
		},
		"securitySchemes": {
			"appKey": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppKey"
			},
			"appToken": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppToken"
			}
		}
	},
	"tags": [
		{
			"name": "Payment Flow",
			"description": "Here we describe each operation you need to implement for the payment flow."
		},
		{
			"name": "Configuration Flow",
			"description": "Here we describe each operation you need to implement to enable the optional configuration flow.\n\nThis is an easier way to allow VTEX merchants to enable your connector, and be ready to use it without having to copy/paste any credentials (`AppKey`/`AppToken`)."
		}
	],
	"security": [
		{
			"appKey": [],
			"appToken": []
		}
	]
}