{
  "_": {
    "postman_id": "43df18cd-271d-465d-80e4-1b7e9b3a6917"
  },
  "item": [
    {
      "id": "2064119d-3a1e-4483-8292-eb8346bc1de4",
      "name": "Antifraud  Flow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cdd67f11-7f04-463f-b6d8-cb728d2f7d66",
          "name": "Send Antifraud Pre-Analysis Data (optional)",
          "request": {
            "name": "Send Antifraud Pre-Analysis Data (optional)",
            "description": {
              "content": "Receives a new transaction antifraud data for (synchronous) pre-analysis. This step is performed before payments authorization.\r\n\r\n>⚠️ This endpoint can only be used if your anti-fraud provider already has the pre-analysis function configured within VTEX. To check if it is already configured, in the VTEX Admin, go to **Store Settings > Payments > Settings> Gateway affiliations tab > {your antifraud provider option}** and verify if the **Enable risk Pre-Analysis** field is available to be selected. If the **Enable risk Pre-Analysis** field is not available, check with your antifraud provider if this feature is available in their integration and open a ticket in our VTEX support to update the connector.\r\n\r\n>⚠️ The pre-analysis does not exclude the need for full analysis after payments authorization.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pre-analysis"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "The antifraud provider endpoint URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{providerApiEndpoint}}",
                  "key": "providerApiEndpoint"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppKey configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppToken configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"sellerId\": \"vtexargentina\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00FE\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"currencyIso4217\": \"BRL\",\n      \"value\": 63.98,\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"Client\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\",\n  \"transactionStartDate\": \"2020-10-30T18:08:23Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ea82f247-482a-48f1-9fde-db02b71feac6",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "pre-analysis"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "The antifraud provider endpoint URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{providerApiEndpoint}}",
                      "key": "providerApiEndpoint"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppKey configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppToken configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"sellerId\": \"vtexargentina\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00FE\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"currencyIso4217\": \"BRL\",\n      \"value\": 63.98,\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"Client\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\",\n  \"transactionStartDate\": \"2020-10-30T18:08:23Z\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"tid\": \"4692c1f54d514fe69da0b472a3b2a770\",\n  \"code\": \"customCode\",\n  \"message\": \"customMessage\",\n  \"status\": \"approved\",\n  \"score\": 5.01,\n  \"analysisType\": \"automatic\",\n  \"responses\": {\n    \"foo\": \"anyFoo\",\n    \"custom\": \"customAnyValue\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57dfb1e8-b444-4f3d-bbc0-46f30014ac6a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/pre-analysis - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/pre-analysis - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/pre-analysis - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"SendAntifraudData\",\"required\":[\"id\",\"tid\",\"code\",\"message\",\"status\",\"score\",\"analysisType\",\"responses\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"VTEX transaction ID. The ID of this transaction must be in the response.\"},\"tid\":{\"type\":\"string\",\"description\":\"Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates an unique transaction Id.\"},\"code\":{\"type\":\"string\",\"description\":\"Error code returned from provider. It will be logged in transaction interactions log.\"},\"message\":{\"type\":\"string\",\"description\":\"Error message returned from provider. It will be logged in transaction interactions log.\"},\"status\":{\"type\":\"string\",\"description\":\"Pre-analysis status from provider. Must be one of the values `approved` or `denied`.\"},\"score\":{\"type\":\"number\",\"description\":\"The value of the risk score. 100.00 as max value means total fraud.\"},\"analysisType\":{\"type\":\"string\",\"description\":\"Pre-analysis type. Must be `automatic`.\"},\"responses\":{\"title\":\"Responses information.\",\"required\":[\"foo\",\"custom\"],\"type\":\"object\",\"properties\":{\"foo\":{\"type\":\"string\",\"description\":\"Any foo information.\"},\"custom\":{\"type\":\"string\",\"description\":\"Any custom value.\"}},\"default\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}},\"default\":{\"id\":\"D3AA1F\",\"tid\":\"4692c1\",\"code\":\"customCode\",\"message\":\"customMessage\",\"status\":\"approved\",\"score\":5.01,\"analysisType\":\"automatic\",\"responses\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/pre-analysis - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d6e6c9b6-9af5-4e36-8c9d-2b0ac8155731",
          "name": "Send Antifraud Data",
          "request": {
            "name": "Send Antifraud Data",
            "description": {
              "content": "Receives a new transaction antifraud data. This step is performed only if all payments are authorized.\r\n\r\nVTEX expects that your antifraud provider process this request and retrieves the process result. After that, the VTEX order flow will check the response status to cancel or approve the transaction.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "transactions"
              ],
              "host": [
                "{{providerApiEndpoint}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppKey configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppToken configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"sellerId\": \"vtexargentina\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"transactionStartDate\": \"2020-10-30T18:08:23Z\",\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00F\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"value\": 63.98,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"John Doe\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f3c44fce-2bad-463c-bb39-d7c69b8dc988",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "transactions"
                  ],
                  "host": [
                    "{{providerApiEndpoint}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppKey configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppToken configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"sellerId\": \"vtexargentina\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"transactionStartDate\": \"2020-10-30T18:08:23Z\",\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00F\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"value\": 63.98,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"John Doe\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "access-control-allow-credentials",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "access-control-allow-origin",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "cache-control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "content-length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-aspnet-version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-powered-by",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"tid\": \"4692c1f54d514fe69da0b472a3b2a770\",\n  \"code\": \"customCode\",\n  \"message\": \"customMessage\",\n  \"status\": \"received\",\n  \"score\": 5.01,\n  \"analysisType\": \"automatic\",\n  \"responses\": {\n    \"foo\": \"anyFoo\",\n    \"custom\": \"customAnyValue\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b3856bc-dd5b-4a05-b151-611598c135d7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/transactions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/transactions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/transactions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"SendAntifraudData\",\"required\":[\"id\",\"tid\",\"code\",\"message\",\"status\",\"score\",\"analysisType\",\"responses\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"VTEX transaction ID. The ID of this transaction must be in the response.\"},\"tid\":{\"type\":\"string\",\"description\":\"Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates an unique transaction Id.\"},\"code\":{\"type\":\"string\",\"description\":\"Error code returned from provider. It will be logged in transaction interactions log.\"},\"message\":{\"type\":\"string\",\"description\":\"Error message returned from provider. It will be logged in transaction interactions log.\"},\"status\":{\"type\":\"string\",\"description\":\"Pre-analysis status from provider. Must be one of the values `approved` or `denied`.\"},\"score\":{\"type\":\"number\",\"description\":\"The value of the risk score. 100.00 as max value means total fraud.\"},\"analysisType\":{\"type\":\"string\",\"description\":\"Pre-analysis type. Must be `automatic`.\"},\"responses\":{\"title\":\"Responses information.\",\"required\":[\"foo\",\"custom\"],\"type\":\"object\",\"properties\":{\"foo\":{\"type\":\"string\",\"description\":\"Any foo information.\"},\"custom\":{\"type\":\"string\",\"description\":\"Any custom value.\"}},\"default\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}},\"default\":{\"id\":\"D3AA1F\",\"tid\":\"4692c1\",\"code\":\"customCode\",\"message\":\"customMessage\",\"status\":\"approved\",\"score\":5.01,\"analysisType\":\"automatic\",\"responses\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/transactions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header access-control-allow-credentials is present\", function () {\n   pm.response.to.have.header(\"access-control-allow-credentials\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header access-control-allow-origin is present\", function () {\n   pm.response.to.have.header(\"access-control-allow-origin\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header cache-control is present\", function () {\n   pm.response.to.have.header(\"cache-control\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header connection is present\", function () {\n   pm.response.to.have.header(\"connection\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header content-length is present\", function () {\n   pm.response.to.have.header(\"content-length\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header content-type is present\", function () {\n   pm.response.to.have.header(\"content-type\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header date is present\", function () {\n   pm.response.to.have.header(\"date\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header expires is present\", function () {\n   pm.response.to.have.header(\"expires\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header pragma is present\", function () {\n   pm.response.to.have.header(\"pragma\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header server is present\", function () {\n   pm.response.to.have.header(\"server\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header x-aspnet-version is present\", function () {\n   pm.response.to.have.header(\"x-aspnet-version\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header x-powered-by is present\", function () {\n   pm.response.to.have.header(\"x-powered-by\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[POST]::/transactions - Response header x-vtex-operation-id is present\", function () {\n   pm.response.to.have.header(\"x-vtex-operation-id\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "15c8ca32-53bd-45a1-a171-271521d69012",
          "name": "Update Antifraud Transactions (optional)",
          "request": {
            "name": "Update Antifraud Transactions (optional)",
            "description": {
              "content": "Receives a new transaction antifraud data. This step is performed only if all payments are authorized.\r\n\r\nVTEX expects that your antifraud provider process this request and retrieves the process result. After that, the VTEX order flow will check the response status to cancel or approve the transaction.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "transactions",
                ":transactionId"
              ],
              "host": [
                "{{providerApiEndpoint}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Transaction identification.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est",
                  "key": "transactionId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppKey configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppToken configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00FE\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"value\": 63.98,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"John Doe\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0721ba1f-50de-477a-ab56-5649bb44eaa8",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "transactions",
                    ":transactionId"
                  ],
                  "host": [
                    "{{providerApiEndpoint}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Transaction identification.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "est",
                      "key": "transactionId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppKey configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppToken configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"reference\": \"v32478982vtx-01\",\n  \"value\": 10,\n  \"ip\": \"10.0.0.1\",\n  \"store\": \"serasa\",\n  \"deviceFingerprint\": \"Generated_using_GTM_Store_Is_Responsible_To_Configure\",\n  \"miniCart\": {\n    \"buyer\": {\n      \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"document\": \"012.345.678-90\",\n      \"documentType\": \"CPF\",\n      \"email\": \"john@doe.com\",\n      \"phone\": \"+5521987654321\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"shipping\": {\n      \"value\": 8.41,\n      \"estimatedDate\": \"2017-08-02T14:46:47\",\n      \"address\": {\n        \"country\": \"BRA\",\n        \"street\": \"Rua Praia de Botafogo\",\n        \"number\": \"518\",\n        \"complement\": \"2o. andar\",\n        \"neighborhood\": \"Botafogo\",\n        \"postalCode\": \"22250-040\",\n        \"city\": \"Rio de Janeiro\",\n        \"state\": \"RJ\"\n      }\n    },\n    \"items\": [\n      {\n        \"id\": \"132981\",\n        \"name\": \"Some useful product\",\n        \"price\": 20.51,\n        \"quantity\": 2,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"111\",\n        \"categoryName\": \"Electronica\",\n        \"discount\": 1.99,\n        \"sellerId\": \"vtexargentina\"\n      },\n      {\n        \"id\": \"123242\",\n        \"name\": \"Some useless product\",\n        \"price\": 21.98,\n        \"quantity\": 1,\n        \"deliveryType\": \"Normal\",\n        \"deliverySlaInMinutes\": 4320,\n        \"categoryId\": \"123\",\n        \"categoryName\": \"Lar\",\n        \"discount\": 1.01,\n        \"sellerId\": \"vtexargentina\"\n      }\n    ],\n    \"taxValue\": 5.58,\n    \"listRegistry\": {\n      \"name\": \"Minha lista Presente\",\n      \"deliveryToOwner\": false\n    }\n  },\n  \"payments\": [\n    {\n      \"id\": \"2D00FE\",\n      \"method\": \"CreditCard\",\n      \"name\": \"Visa\",\n      \"value\": 63.98,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 3,\n      \"details\": {\n        \"bin\": \"507860\",\n        \"lastDigits\": \"2798\",\n        \"holder\": \"John Doe\",\n        \"address\": {\n          \"country\": \"BRA\",\n          \"street\": \"Rua Praia de Botafogo\",\n          \"number\": \"518\",\n          \"complement\": \"2o. andar\",\n          \"neighborhood\": \"Botafogo\",\n          \"postalCode\": \"22250-040\",\n          \"city\": \"Rio de Janeiro\",\n          \"state\": \"RJ\"\n        }\n      }\n    },\n    {\n      \"id\": \"04D430E517B2494FBC3DF7721CCDACC7\",\n      \"method\": \"GiftCard\",\n      \"value\": 10.01,\n      \"currencyIso4217\": \"BRL\",\n      \"installments\": 1\n    }\n  ],\n  \"hook\": \"https://hook.vtex.com/notifyIfChangeStatus\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-AspNet-Version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "body": "{\n  \"id\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n  \"status\": \"approved\",\n  \"fraudRiskPercentage\": 0,\n  \"analysisType\": \"automatic\",\n  \"responses\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cbc5aa36-9a95-4496-8f3d-c092a31132dd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/transactions/:transactionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/transactions/:transactionId - Content-Type is application/json; charset=utf-8\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/transactions/:transactionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"ApproveAntifraudAnalysisResponse\",\"required\":[\"id\",\"status\",\"fraudRiskPercentage\",\"analysisType\",\"responses\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"VTEX transaction ID. The ID of this transaction must be in the response.\"},\"status\":{\"type\":\"string\",\"description\":\"Transaction status from provider. Must be one of the values: `approved`, `denied` or `undefined`.\"},\"fraudRiskPercentage\":{\"type\":\"number\",\"description\":\"Fraud risk percentage.\"},\"analysisType\":{\"type\":\"string\",\"description\":\"Analysis type. Valid values are `automatic` or `manual`.\"},\"responses\":{\"type\":[\"string\",\"null\"],\"description\":\"Value dictionary to add custom responses from analysis.\"}},\"example\":{\"id\":\"D3AA1FC8372E430E8236649DB5EBD08E\",\"status\":\"approved\",\"fraudRiskPercentage\":0,\"analysisType\":\"automatic\",\"responses\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/transactions/:transactionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Access-Control-Allow-Credentials is present\", function () {\n   pm.response.to.have.header(\"Access-Control-Allow-Credentials\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Access-Control-Allow-Origin is present\", function () {\n   pm.response.to.have.header(\"Access-Control-Allow-Origin\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Cache-Control is present\", function () {\n   pm.response.to.have.header(\"Cache-Control\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Connection is present\", function () {\n   pm.response.to.have.header(\"Connection\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Content-Length is present\", function () {\n   pm.response.to.have.header(\"Content-Length\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Date is present\", function () {\n   pm.response.to.have.header(\"Date\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Expires is present\", function () {\n   pm.response.to.have.header(\"Expires\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Pragma is present\", function () {\n   pm.response.to.have.header(\"Pragma\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header Server is present\", function () {\n   pm.response.to.have.header(\"Server\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header X-AspNet-Version is present\", function () {\n   pm.response.to.have.header(\"X-AspNet-Version\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header X-Powered-By is present\", function () {\n   pm.response.to.have.header(\"X-Powered-By\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[PUT]::/transactions/:transactionId - Response header x-vtex-operation-id is present\", function () {\n   pm.response.to.have.header(\"x-vtex-operation-id\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8ecde34d-f5e3-40e8-8147-7445f52fbaf2",
          "name": "List Antifraud Provider Manifest",
          "request": {
            "name": "List Antifraud Provider Manifest",
            "description": {
              "content": "Returns the custom fields of the antifraud provider manifest.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "manifest"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "The antifraud provider endpoint URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{providerApiEndpoint}}",
                  "key": "providerApiEndpoint"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "57d8dfc5-9a5d-43a3-b7dd-e2dce5ae8184",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "manifest"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "The antifraud provider endpoint URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{providerApiEndpoint}}",
                      "key": "providerApiEndpoint"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"cardholderDocument\": \"required\",\n  \"customFields\": [\n    {\n      \"name\": \"ApiKey\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"AnalysisLocation\",\n      \"type\": \"select\",\n      \"options\": [\n        {\n          \"text\": \"MEX\",\n          \"value\": \"Latin America\"\n        },\n        {\n          \"text\": \"USA\",\n          \"value\": \"United States\"\n        }\n      ]\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f97ccc8e-93db-4973-8d99-f471d548e8d8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/manifest - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/manifest - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/manifest - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Success\",\"required\":[\"customFields\"],\"type\":\"object\",\"properties\":{\"cardholderDocument\":{\"type\":\"string\",\"description\":\"Indicates the requirement of cardholder document in card transactions. The field has three possible values: `required`, `optional`, or `unused`.\"},\"customFields\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"additionalProperties\":true},\"description\":\"Custom fields information.\"}},\"example\":{\"customFields\":[{\"name\":\"ApiKey\",\"type\":\"text\"},{\"name\":\"AnalysisLocation\",\"type\":\"select\",\"options\":[{\"text\":\"MEX\",\"value\":\"Latin America\"},{\"text\":\"USA\",\"value\":\"United States\"}]}]}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/manifest - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9f9edb0f-93ea-4700-a9cc-496d28b78a10",
          "name": "Get Antifraud Status",
          "request": {
            "name": "Get Antifraud Status",
            "description": {
              "content": "This endpoint is used to get the antifraud analysis status. This request is performed every two hours up to 5 days. After 5 days in `undefined` status, the order will expire and be cancelled.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "transactions",
                ":transactions.id"
              ],
              "host": [
                "{{providersApiEndpoint}}",
                "com"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX transaction ID. This parameter is the same `id` sent in the request body of the [Send Antifraud Data endpoint](https://developers.vtex.com/docs/api-reference/antifraud-provider-protocol#post-/transactions).",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est",
                  "key": "transactions.id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppKey configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppToken configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2b36b505-65d9-4ad0-ace3-d7d1317bea7c",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "transactions",
                    ":transactions.id"
                  ],
                  "host": [
                    "{{providersApiEndpoint}}",
                    "com"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) VTEX transaction ID. This parameter is the same `id` sent in the request body of the [Send Antifraud Data endpoint](https://developers.vtex.com/docs/api-reference/antifraud-provider-protocol#post-/transactions).",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "est",
                      "key": "transactions.id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppKey configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppToken configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "cache-control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "content-length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-aspnet-version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-powered-by",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"BF900B7CB15147F98D91208989100A05\",\n  \"tid\": \"3146f46162f042f483cd3979ba4e8317\",\n  \"status\": \"approved\",\n  \"fraudRiskPercentage\": 5.01,\n  \"analysisType\": \"automatic\",\n  \"responses\": {\n    \"foo\": \"anyFoo\",\n    \"custom\": \"customAnyValue\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be1cacc8-a828-4649-a57d-c556d3272293",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/transactions/:transactions.id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/transactions/:transactions.id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/transactions/:transactions.id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"GetAntifraudStatus\",\"required\":[\"id\",\"tid\",\"status\",\"fraudRiskPercentage\",\"analysisType\",\"responses\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"VTEX transaction ID. The ID of this transaction must be in the response.\"},\"tid\":{\"type\":\"string\",\"description\":\"Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates a unique transaction Id.\"},\"status\":{\"type\":\"string\",\"description\":\"Transaction status from provider. Must be one of the values: `approved`, `denied` or `undefined`.\"},\"fraudRiskPercentage\":{\"type\":\"number\",\"description\":\"Fraud risk percentage.\"},\"analysisType\":{\"type\":\"string\",\"description\":\"Analysis type. Valid values are `automatic` or `manual`.\"},\"responses\":{\"title\":\"Responses information.\",\"required\":[\"foo\",\"custom\"],\"type\":\"object\",\"properties\":{\"foo\":{\"type\":\"string\",\"description\":\"Any foo information.\"},\"custom\":{\"type\":\"string\",\"description\":\"Any custom value.\"}},\"default\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}},\"example\":{\"id\":\"BF900B7CB15147F98D91208989100A05\",\"tid\":\"3146f46162f042f483cd3979ba4e8317\",\"status\":\"approved\",\"fraudRiskPercentage\":5.01,\"analysisType\":\"automatic\",\"responses\":{\"foo\":\"anyFoo\",\"custom\":\"customAnyValue\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/transactions/:transactions.id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header cache-control is present\", function () {\n   pm.response.to.have.header(\"cache-control\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header connection is present\", function () {\n   pm.response.to.have.header(\"connection\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header content-length is present\", function () {\n   pm.response.to.have.header(\"content-length\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header content-type is present\", function () {\n   pm.response.to.have.header(\"content-type\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header date is present\", function () {\n   pm.response.to.have.header(\"date\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header expires is present\", function () {\n   pm.response.to.have.header(\"expires\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header pragma is present\", function () {\n   pm.response.to.have.header(\"pragma\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header server is present\", function () {\n   pm.response.to.have.header(\"server\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header x-aspnet-version is present\", function () {\n   pm.response.to.have.header(\"x-aspnet-version\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header x-powered-by is present\", function () {\n   pm.response.to.have.header(\"x-powered-by\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[GET]::/transactions/:transactions.id - Response header x-vtex-operation-id is present\", function () {\n   pm.response.to.have.header(\"x-vtex-operation-id\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9604f050-9d4c-46d5-84b0-a5b2bcb8b905",
          "name": "Stop Antifraud Analysis (optional)",
          "request": {
            "name": "Stop Antifraud Analysis (optional)",
            "description": {
              "content": "This endpoint is used to notify whether the order has been canceled by the store or the buyer before completing the antifraud analysis status.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "transactions",
                ":transactions.Id"
              ],
              "host": [
                "{{providersApiEndpoint}}",
                "com"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX transaction ID. This parameter is the same `id` sent in the request body of the [Send Antifraud Data endpoint](https://developers.vtex.com/docs/api-reference/antifraud-provider-protocol#post-/transactions).",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est",
                  "key": "transactions.Id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppKey configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppKey",
                "value": "{{X-PROVIDER-API-AppKey}}"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) The AppToken configured by the merchant.",
                  "type": "text/plain"
                },
                "key": "X-PROVIDER-API-AppToken",
                "value": "{{X-PROVIDER-API-AppToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dbec6cb7-b6a8-46c4-8766-b2d0cf041d22",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "transactions",
                    ":transactions.Id"
                  ],
                  "host": [
                    "{{providersApiEndpoint}}",
                    "com"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) VTEX transaction ID. This parameter is the same `id` sent in the request body of the [Send Antifraud Data endpoint](https://developers.vtex.com/docs/api-reference/antifraud-provider-protocol#post-/transactions).",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "est",
                      "key": "transactions.Id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppKey configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppKey",
                    "value": "{{X-PROVIDER-API-AppKey}}"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) The AppToken configured by the merchant.",
                      "type": "text/plain"
                    },
                    "key": "X-PROVIDER-API-AppToken",
                    "value": "{{X-PROVIDER-API-AppToken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-AspNet-Version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "body": "[\n  {\n    \"name\": \"CreditCard\"\n  },\n  {\n    \"name\": \"DebitCard\"\n  },\n  {\n    \"name\": \"GiftCard\"\n  },\n  {\n    \"name\": \"BankIssueInvoice\"\n  },\n  {\n    \"name\": \"Voucher\"\n  },\n  {\n    \"name\": \"Promissory\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "96e268e0-22c4-4fd5-9a78-683355b11745",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/transactions/:transactions.Id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/transactions/:transactions.Id - Content-Type is application/json; charset=utf-8\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"GetPaymentMethodsSupported\",\"required\":[\"name\"],\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Payment method name.\"}},\"example\":{\"name\":\"CreditCard\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/transactions/:transactions.Id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Cache-Control is present\", function () {\n   pm.response.to.have.header(\"Cache-Control\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Connection is present\", function () {\n   pm.response.to.have.header(\"Connection\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Content-Length is present\", function () {\n   pm.response.to.have.header(\"Content-Length\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Date is present\", function () {\n   pm.response.to.have.header(\"Date\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Expires is present\", function () {\n   pm.response.to.have.header(\"Expires\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Pragma is present\", function () {\n   pm.response.to.have.header(\"Pragma\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header Server is present\", function () {\n   pm.response.to.have.header(\"Server\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header X-AspNet-Version is present\", function () {\n   pm.response.to.have.header(\"X-AspNet-Version\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header X-Powered-By is present\", function () {\n   pm.response.to.have.header(\"X-Powered-By\");\n});\n",
                  "// Validate if response header is present \npm.test(\"[DELETE]::/transactions/:transactions.Id - Response header x-vtex-operation-id is present\", function () {\n   pm.response.to.have.header(\"x-vtex-operation-id\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "aa492f02-e245-424b-b64f-f2d774f554ec",
      "name": "OAuth Flow",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "99b778b1-f6bd-41cd-8396-3e87730b12f2",
          "name": "1. Retrieve Token",
          "request": {
            "name": "1. Retrieve Token",
            "description": {
              "content": "This endpoint is used to retrieve a payment provider token.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "port": "providerApiEndpoint",
              "path": [
                "authorization",
                "authorization",
                "token"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "DefaultParameterValue",
                  "key": "providerBaseUrl"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"applicationId\": \"vtex\",\n  \"returnUrl\": \"https://storevtex.vtexpayments.com/?authorizationCode=\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "09027669-f96a-406b-8445-7982565a8d8d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "port": "providerApiEndpoint",
                  "path": [
                    "authorization",
                    "authorization",
                    "token"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "DefaultParameterValue",
                      "key": "providerBaseUrl"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"applicationId\": \"vtex\",\n  \"returnUrl\": \"https://storevtex.vtexpayments.com/?authorizationCode=\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-AspNet-Version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "body": "{\n  \"applicationId\": \"vtex\",\n  \"token\": \"358a5bea-07d0-4122-888a-54ab70b5f02f\"\n}",
              "cookie": []
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b4987978-e15a-46d3-8ab6-75d1a688f76a",
          "name": "2. Redirect",
          "request": {
            "name": "2. Redirect",
            "description": {
              "content": "Through this endpoint, VTEX will redirect the store administrator to the Payment provider website using the `token` retrieved in the [previous request](https://developers.vtex.com/docs/api-reference/antifraud-provider-protocol#post-/authorization/token)\r\n\r\nAt this point in the flow, the provider shows the login site to the store admin and authorizes VTEX to use its integration as a valid Payment Provider Processor. After that, your server generates an `authorizationCode`.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "port": "providerApiEndpoint",
              "path": [
                "redirect"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Token information.",
                    "type": "text/plain"
                  },
                  "key": "token",
                  "value": "{token}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX application identifier.",
                    "type": "text/plain"
                  },
                  "key": "applicationId",
                  "value": "vtex"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "DefaultParameterValue",
                  "key": "providerBaseUrl"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e885ce66-44a9-4940-97b2-9d8d4719cd89",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "port": "providerApiEndpoint",
                  "path": [
                    "redirect"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{token}"
                    },
                    {
                      "key": "applicationId",
                      "value": "vtex"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "DefaultParameterValue",
                      "key": "providerBaseUrl"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a96fa737-7bae-4826-b7f9-e9b267fb8c4f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/redirect - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "282b34fb-3e1e-4b57-a280-01e74760d247",
          "name": "3. Return to VTEX",
          "request": {
            "name": "3. Return to VTEX",
            "description": {
              "content": "Through this endpoint, the provider will redirect the store administrator to the VTEX website using the `returnUrl` passed from VTEX to create token.\r\n\r\nThe `returnUrl` must be filled with your query string **authorizationCode**.\r\n\r\nExample:\r\n\r\nIf you receive the following URL:\r\n\r\n`https://store.vtex.com/return?authorizationCode=&otherparams...`\r\n\r\nand your **authorizationCode** is `pro2018`. Then, you redirect the store administrator to: `https://store.vtex.com/return?authorizationCode=pro2018&otherparams...`",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "port": "providerApiEndpoint",
              "path": [
                "authorizationCode"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Provider authorization code information.",
                    "type": "text/plain"
                  },
                  "key": "providerAuthorizationCode",
                  "value": "{providerAuthorizationCode}"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "DefaultParameterValue",
                  "key": "returnUrl"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1975ff80-5ba4-44d5-ac45-e04c23289d91",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "port": "providerApiEndpoint",
                  "path": [
                    "authorizationCode"
                  ],
                  "query": [
                    {
                      "key": "providerAuthorizationCode",
                      "value": "{providerAuthorizationCode}"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "DefaultParameterValue",
                      "key": "returnUrl"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d572792-e286-4a6e-b29e-cab8a3b02d28",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/authorizationCode - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1db28ad3-838a-4cf9-8f84-fb844013c937",
          "name": "4. Get Credentials",
          "request": {
            "name": "4. Get Credentials",
            "description": {
              "content": "",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "port": "providerBaseUrl",
              "path": [
                "authorization",
                "authorization",
                "credentials"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Code generate by affiliation that will be used to identify the merchant authorization.",
                    "type": "text/plain"
                  },
                  "key": "authorizationCode",
                  "value": "{authorizationCode}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) VTEX application identifier.",
                    "type": "text/plain"
                  },
                  "key": "applicationId",
                  "value": "vtex"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "DefaultParameterValue",
                  "key": "providerBaseUrl"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json; charset=utf-8"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "03074b99-2c46-4c6f-8d31-76ce81e40841",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "port": "providerBaseUrl",
                  "path": [
                    "authorization",
                    "authorization",
                    "credentials"
                  ],
                  "query": [
                    {
                      "key": "authorizationCode",
                      "value": "{authorizationCode}"
                    },
                    {
                      "key": "applicationId",
                      "value": "vtex"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "DefaultParameterValue",
                      "key": "providerBaseUrl"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json; charset=utf-8"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Pragma",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-AspNet-Version",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-vtex-operation-id",
                  "value": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "body": "{\n  \"applicationId\": \"vtex\",\n  \"appKey\": \"c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628\",\n  \"appToken\": \"57ea254d-f3d3-488d-88d7-129766037ed1\"\n}",
              "cookie": []
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "The antifraud provider endpoint URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{providerApiEndpoint}",
      "key": "providerApiEndpoint"
    },
    {
      "type": "string",
      "value": "http://{{providerApiEndpoint}}",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "43df18cd-271d-465d-80e4-1b7e9b3a6917",
    "name": "Antifraud Provider",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": ">ℹ️ Onboarding guide\r\n>\r\n> Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.\r\n\r\nThe Antifraud Provider Protocol is a set of definitions to help you integrate your antifraud service API into VTEX platform.\r\n\r\nTo achieve this, you need to implement a web API (REST) following the specifications described in this documentation.\r\n\r\nTo learn more about the Antifraud Provider Protocol, check our [Developers article](https://developers.vtex.com/docs/guides/how-the-integration-protocol-between-vtex-and-antifraud-companies-works).",
      "type": "text/plain"
    }
  }
}