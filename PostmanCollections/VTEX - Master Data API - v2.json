{
  "_": {
    "postman_id": "654e49bf-872f-49c0-aa16-210147427f61"
  },
  "item": [
    {
      "id": "85827be3-c8d3-484a-8f9a-3d82be20170b",
      "name": "Documents",
      "description": {
        "content": "The APIs within this group are used to save documents and query them by id.\r\n\r\nIf the document has the id attribute or has fields that have been set to indexes with unique values, VTEX Master Data will attempt to identify the document. If the document is found a change will be made. If it is not found, an inclusion will be made. ** This scenario does not apply to the API with the POST verb**.\r\n\r\nOtherwise, a new document will always be created.\r\n\r\nYou can use the query string `_where` to apply an update only if the document is compliant with the clause.\r\n\r\nIn addition with this feature you can use the schema parameter `_schema` as a query string to apply the update only if the document is compliant with the schema. If the document is not compliant, the body of the response will have an array with each error, where the field ```Message``` indicates the type of the error.\r\n\r\n### Response status code\r\n\r\n1. Status Code 201: Document created successfully\r\n2. Status Code 200: Document changed successfully\r\n3. Status Code 304: There were no changes to the document\r\n4. Status Code 400: Invalid information in JSON\r\n5. Status Code 403: Unauthorized access\r\n",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "062c7fea-2a83-415e-a9b5-ab7871beb467",
          "name": "Create new document",
          "request": {
            "name": "Create new document",
            "description": {
              "content": "This request allows you to create a new document corresponding to a given data entity. For example, you can create a new customer profile or address.\r\n\r\n> You can use this request to create documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to create.\r\n\r\n## Example use cases\r\n\r\n### Client profile\r\n\r\nIn order to create a new customer profile, choose the `CL` data entity and send a request similar to this:\r\n\r\nPOST\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Client/documents\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"email\": \"clark.kent@examplemail.com\",\r\n    \"firstName\": \"Clark\",\r\n    \"lastName\": \"Kent\",\r\n    \"phone\": \"+12025550195\",\r\n    \"documentType\": \"CPF\",\r\n    \"document\": \"12345678900\"\r\n    \"isCorporate\": false,\r\n    \"isNewsletterOptIn\": false,\r\n    \"localeDefault\": \"en-US\"\r\n }\r\n```\r\n\r\n### Client address\r\n\r\nFor a new address, the data entity is `AD` and the request would look like this:\r\n\r\nPOST\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Address/documents\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"addressName\": \"My House\",\r\n    \"addressType\": \"residential\",\r\n    \"city\": \"Metropolis\",\r\n    \"complement\": \"\",\r\n    \"country\": \"USA\",\r\n    \"postalCode\": \"11375\",\r\n    \"receiverName\": \"Clark Kent\",\r\n    \"reference\": null,\r\n    \"state\": \"MP\",\r\n    \"street\": \"Baker Street\",\r\n    \"neighborhood\": \"Upper east side\",\r\n    \"number\": \"21\",\r\n    \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\r\n}\r\n```\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/authentication-overview#application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| inStore Sales Person | Full access to all documents |\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9b431a6e-7d70-4551-9af3-aebbfcd4a09e",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d681f424-918f-4349-a098-a7c7f2342c05",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/:dataEntityName/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/:dataEntityName/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/:dataEntityName/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/:dataEntityName/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "88fb7c1b-a5d3-4ed4-8902-40cd2aba48d4",
          "name": "Create partial document",
          "request": {
            "name": "Create partial document",
            "description": {
              "content": "This request allows you to partially update a document corresponding to a given data entity.\r\n\r\n> You can use this request to create documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Example use cases\r\n\r\n### Client profile\r\n\r\nIn order to create a customer profile's `phone` and `isNewsletterOptIn` fields, choose the `CL` data entity and send a request similar to this:\r\n\r\nPATCH\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Client/documents\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"phone\": \"+12025550195\",\r\n    \"isNewsletterOptIn\": false\r\n }\r\n```\r\n\r\n### Client address\r\n\r\nIn order to update the `receiverName` of an existing address, the data entity is `AD` and the request would look like this:\r\n\r\nPATCH\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Address/documents\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"receiverName\": \"Lois Lane\"\r\n}\r\n```",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7a29cceb-cf5a-4458-822f-5fb5cd77f05a",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ae8ceb1-3552-4d38-816d-294ae57bcffd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f3e75969-9529-49dd-a63f-e5f3d4ef702b",
          "name": "Get document",
          "request": {
            "name": "Get document",
            "description": {
              "content": "Gets document by ID.\n\r\n\r> Assign the `_fields` parameter in the query string to retrieve the desired fields. If you want to return all the fields use `_fields=_all`.\n\r\n\r## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/authentication-overview#application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| inStore Sales Person | Full access to all documents |\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication-overview#machine-authentication).\r\n\r\n>‚ùó To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d6309ba2-3972-4b0d-bb96-9a8851d4a334",
              "name": "Sucessful response",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"accountId\": \"14af940d-9300-4279-9355-61d44c2ff879\",\n  \"accountName\": \"my-store-name\",\n  \"dataEntityId\": \"Client\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc194518-2652-4890-bde0-46c0df8ce094",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Using_fields=_all\",\"required\":[\"id\",\"accountId\",\"accountName\",\"dataEntityId\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"accountId\":{\"type\":\"string\"},\"accountName\":{\"type\":\"string\"},\"dataEntityId\":{\"type\":\"string\"}},\"example\":{\"id\":\"b818cbda-e489-11e6-94f4-0ac138d2d42e\",\"accountId\":\"14af940d-9300-4279-9355-61d44c2ff879\",\"accountName\":\"my-store-name\",\"dataEntityId\":\"Client\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e8998cd7-ee9d-4b8b-b204-dbf7ac87e49d",
          "name": "Update entire document",
          "request": {
            "name": "Update entire document",
            "description": {
              "content": "Update an existing document corresponding to a given data entity. For example, you can update a customer profile or address.\r\n\r\n> You can use this request to update documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Example use cases\r\n\r\n### Client profile\r\n\r\nIn order to update an existing customer profile, choose the `CL` data entity and send a request similar to this:\r\n\r\nPUT\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Client/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"email\": \"clark.kent@examplemail.com\",\r\n    \"firstName\": \"Clark\",\r\n    \"lastName\": \"Kent\",\r\n    \"phone\": \"+12025550195\",\r\n    \"documentType\": \"CPF\",\r\n    \"document\": \"12345678900\"\r\n    \"isCorporate\": false,\r\n    \"isNewsletterOptIn\": false,\r\n    \"localeDefault\": \"en-US\"\r\n }\r\n```\r\n\r\n### Client address\r\n\r\nTo update an address, the data entity is `AD` and the request would look like this:\r\n\r\nPUT\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Address/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"addressName\": \"My House\",\r\n    \"addressType\": \"residential\",\r\n    \"city\": \"Metropolis\",\r\n    \"complement\": \"\",\r\n    \"country\": \"USA\",\r\n    \"postalCode\": \"11375\",\r\n    \"receiverName\": \"Clark Kent\",\r\n    \"reference\": null,\r\n    \"state\": \"MP\",\r\n    \"street\": \"Baker Street\",\r\n    \"neighborhood\": \"Upper east side\",\r\n    \"number\": \"21\",\r\n    \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\r\n}\r\n```",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter specification.",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null."
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "827f3820-44c4-4d4e-b25b-cf48f114354b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c139324c-b9ba-49ea-8826-81e41038fdc5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d1354065-144e-40e8-83aa-bab511e0e740",
          "name": "Update partial document",
          "request": {
            "name": "Update partial document",
            "description": {
              "content": "This request allows you to partially update a document corresponding to a given data entity. For example, you can update some fields of a customer profile or address.\r\n\r\n> You can use this request to update documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Example use cases\r\n\r\n### Client profile\r\n\r\nIn order to update a customer profile's `phone` and `isNewsletterOptIn` fields, choose the `CL` data entity and send a request similar to this:\r\n\r\nPATCH\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Client/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"phone\": \"+12025550195\",\r\n    \"isNewsletterOptIn\": false\r\n }\r\n```\r\n\r\n### Client address\r\n\r\nIn order to update the `receiverName` of an existing address, the data entity is `AD` and the request would look like this:\r\n\r\nPATCH\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Address/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"receiverName\": \"Lois Lane\"\r\n}\r\n```",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter specification.",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null."
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "447d7594-0742-489d-8746-19fc6a9ab706",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"eiusmod3\": \"consequat nostrud est occaecat\",\n  \"Ut_3_c\": \"quis\",\n  \"irure82\": \"in\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "62bc6e0b-5350-44ec-8944-82b030c5687a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/:dataEntityName/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2d4470a9-2c96-4ce1-96dc-28aa9a64f63b",
          "name": "Delete document",
          "request": {
            "name": "Delete document",
            "description": {
              "content": "It allows to delete a document.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f338f1d2-3d52-46ca-9d8b-3dff506ac6a3",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "13f5b355-eda6-46b6-b1e5-b3220fc65b9b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/:dataEntityName/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b312e143-284e-4507-ac1c-679bed26d4b8",
      "name": "Search",
      "description": {
        "content": "The ```search``` API is intended to query a collection of documents.  ",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ed3c69cd-cf4c-47b1-8b4d-22cef6f0fa21",
          "name": "Search documents",
          "request": {
            "name": "Search documents",
            "description": {
              "content": "Retrieves documents' information, while choosing which fields will be returned and filtering documents by specific fields.\r\n\r\n> The response header `REST-Content-Range` indicates the total amount of results for that specific search. For example, it may return `resources 0-100/136108`, which indicates it has returned results from 0 to 100 of a total 136108.\r\n\r\nBelow you can see some query examples and learn more about each query parameter.\n\r\n\r> Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code `503`.\r\n\r\n## Query examples\r\n\r\n### Simple filter\r\n\r\n```\r\n/dataentities/Client/search?email=my@email.com\r\n```\r\n\r\n### Complex filter\r\n\r\n```\r\n/dataentities/Client/search?_where=(firstName=Jon OR lastName=Smith) OR (createdIn between 2001-01-01 AND 2016-01-01)\r\n```\r\n\r\n### Date Range\r\n\r\n```\r\n/dataentities/Client/search?_where=createdIn between 2001-01-01 AND 2016-01-01\r\n```\r\n\r\n### Range numeric fields\r\n\r\n```\r\n/dataentities/Client/search?_where=age between 18 AND 25\r\n```\r\n\r\n### Partial filter\r\n\r\n```\r\n/dataentities/Client/search?firstName=*Maria*\r\n```\r\n\r\n### Filter for null values\r\n\r\n```\r\n/dataentities/Client/search?_where=firstName is null\r\n```\r\n\r\n### Filter for non-null values\r\n\r\n```\r\n/dataentities/Client/search?_where=firstName is not null\r\n```\r\n\r\n### Filter for difference\r\n```\r\n/dataentities/Client/search?_where=firstName<>maria\r\n```\r\n\r\n### Filter greater than or less than\r\n```\r\n/dataentities/Client/search?_where=number>5\r\n/dataentities/Client/search?_where=date<2001-01-01\r\n```",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Fields that should be returned by document. Separate fields' names with commas. For example `_fields=email,firstName,document`. You can also use `_all` to fetch all fields.",
                    "type": "text/plain"
                  },
                  "key": "_fields",
                  "value": "email,firstName,document"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter specification.",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null."
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "String to search. Use quotes for a partial query. For example, `_keyword=Maria` or `_keyword=\"Maria\"`.",
                    "type": "text/plain"
                  },
                  "key": "_keyword",
                  "value": "String to search"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Sets sorting mode in two parts. The first part is the name of the field you want to sort by. In the second part, use `ASC` for ascending or `DESC` for descending.",
                    "type": "text/plain"
                  },
                  "key": "_sort",
                  "value": "firstName ASC"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                  "type": "text/plain"
                },
                "key": "REST-Range",
                "value": "resources=0-10"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1347f2ba-4b71-4f4b-92f5-b028c8811bd1",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    },
                    {
                      "key": "_keyword",
                      "value": "String to search"
                    },
                    {
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "078432ab-c63c-486c-995e-b1f42f50e19a",
              "name": "Service Unavailable",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    },
                    {
                      "key": "_keyword",
                      "value": "String to search"
                    },
                    {
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Service Unavailable",
              "code": 503,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1f0a38dd-414f-479c-891d-654882ce765f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "bd613363-14cc-4d34-b384-0fd9ef999584",
      "name": "Scroll",
      "description": {
        "content": "The new `` scroll `` API has been developed to meet external integration scenarios. If you need to query the entire VTEX Master Data database, or your collection is over 10.000 documents, use this feature.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "208f352b-5b52-4aa5-91bf-7f21c48925b5",
          "name": "Scroll documents",
          "request": {
            "name": "Scroll documents",
            "description": {
              "content": "In the first request, the `X-VTEX-MD-TOKEN` token will be returned in the header. This token must be passed to the next request in the query string `_token` parameter. The token has a timeout of 10 minutes, which refreshes after each request.\r\n\r\nAfter the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.\n\r\n\r> Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code `429`.\r\n\r\n## Request examples\r\n\r\nFirst request:\r\n```\r\n/dataentities/Client/scroll?isCluster=true&_size=250&_fields=email,firstName\r\n```\r\n\r\nRetrieve the token in the header `X-VTEX-MD-TOKEN` from the first request's response and use it to make the next requests.\r\n\r\nSubsequent requests:\r\n```\r\n/dataentities/Client/scroll?_token={tokenValueExample}\r\n```",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "scroll"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Value of the header `X-VTEX-MD-TOKEN` returned in your first request. Send its value in this query string in the subsequent requests. The token has a timeout of 10 minutes, which refreshes after each new request.",
                    "type": "text/plain"
                  },
                  "key": "_token",
                  "value": "{tokenValueExample}"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Fields that should be returned by document. Separate fields' names with commas. For example `_fields=email,firstName,document`. You can also use `_all` to fetch all fields.",
                    "type": "text/plain"
                  },
                  "key": "_fields",
                  "value": "email,firstName,document"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter specification.",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null."
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "String to search. Use quotes for a partial query. For example, `_keyword=Maria` or `_keyword=\"Maria\"`.",
                    "type": "text/plain"
                  },
                  "key": "_keyword",
                  "value": "String to search"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Sets sorting mode in two parts. The first part is the name of the field you want to sort by. In the second part, use `ASC` for ascending or `DESC` for descending.",
                    "type": "text/plain"
                  },
                  "key": "_sort",
                  "value": "firstName ASC"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                  "type": "text/plain"
                },
                "key": "REST-Range",
                "value": "resources=0-10"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "79cf95cb-b961-40c4-8fe5-f4512e59e395",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "scroll"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_token",
                      "value": "{tokenValueExample}"
                    },
                    {
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    },
                    {
                      "key": "_keyword",
                      "value": "String to search"
                    },
                    {
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "49de0caf-de09-4bb3-930b-d3e7ef88cc99",
              "name": "Too Many Requests",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "scroll"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_token",
                      "value": "{tokenValueExample}"
                    },
                    {
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "key": "_where",
                      "value": "firstName is not null."
                    },
                    {
                      "key": "_schema",
                      "value": "schema"
                    },
                    {
                      "key": "_keyword",
                      "value": "String to search"
                    },
                    {
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Too Many Requests",
              "code": 429,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0692b60a-b4f6-4870-bc68-79e03e81666e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/scroll - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "70a979ca-8c0b-4d2d-bab7-c7267168a3ea",
      "name": "Schemas",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "53081267-a014-40e4-b9e6-98dc8994f6df",
          "name": "Get schemas",
          "request": {
            "name": "Get schemas",
            "description": {
              "content": "Return the schemas saved.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "schemas"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d463acf8-ada6-456c-b373-5c5d5832fc9d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "schemas"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d57f1a13-c276-4594-a45f-bcd3ed03a21e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/schemas - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "74dcc361-b25a-4cc9-8d5d-796c51f9a481",
          "name": "Get schema by name",
          "request": {
            "name": "Get schema by name",
            "description": {
              "content": "Returns an existing schema for a given data entity.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "schemas",
                ":schemaName"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the schema.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{schema}}",
                  "key": "schemaName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd29b085-9827-42db-bc41-d8bd76c11e57",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "schemas",
                    ":schemaName"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the schema.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{schema}}",
                      "key": "schemaName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2bb7641a-ab3d-4efd-b18e-825ddaf8cf34",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/schemas/:schemaName - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "677f1d12-9671-4d54-ab8e-e8ced9980324",
          "name": "Save schema by name",
          "request": {
            "name": "Save schema by name",
            "description": {
              "content": "Creates or edits a data entity schema. Learn more about [Master Data schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle)\r\n\r\n> Note that if you send a `schemaName` that does not exist for that data entity, this request will create it.\r\n\r\nThis request can also be used to [create or edit Master Data v2 triggers](https://developers.vtex.com/vtex-rest-api/docs/setting-up-triggers-in-master-data-v2).\r\n\r\n> Each Master Data v2 data entity can have up to 60 schemas.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "schemas",
                ":schemaName"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the schema.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{schema}}",
                  "key": "schemaName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "65ae48d3-c8a4-4097-961d-7fd9e5ca0004",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "schemas",
                    ":schemaName"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the schema.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{schema}}",
                      "key": "schemaName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8a1a43be-4a94-416e-b71b-ce1b538b8e5b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/schemas/:schemaName - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1f7df5c6-a07c-4abf-bdfd-28b7fc9200bc",
          "name": "Delete schema by name",
          "request": {
            "name": "Delete schema by name",
            "description": {
              "content": "Deletes an existing schema for a given data entity.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "schemas",
                ":schemaName"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the schema.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{schema}}",
                  "key": "schemaName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e090c7c-fc19-4b63-8eef-2547777d6ad3",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "schemas",
                    ":schemaName"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the schema.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{schema}}",
                      "key": "schemaName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "27df5087-d8d9-455e-a705-f7a4d4b00495",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/:dataEntityName/schemas/:schemaName - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/dataentities/:dataEntityName/schemas/:schemaName - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "41cafee0-2e65-411e-b694-a1ea3bb48378",
      "name": "Indices",
      "description": {
        "content": "Create alternative keys for data entities.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "87f81ca1-7466-4903-b4fd-8ca524e85aa1",
          "name": "Get indices",
          "request": {
            "name": "Get indices",
            "description": {
              "content": "Returns the list of indices by data entity.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "indices"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "61ff01fc-89ef-4580-8cf1-d04618670f7b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "indices"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6721f108-d3e4-4a88-bc7b-fe862e9b01cb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/indices - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a16e2e8b-aa31-401c-9cee-e73d4176e8d7",
          "name": "Put indices",
          "request": {
            "name": "Put indices",
            "description": {
              "content": "Create an index.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "indices"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"indexName\",\n  \"multiple\": false,\n  \"fields\": \"fieldName\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1047c9b5-55e4-409d-8481-028dc9260562",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "indices"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"indexName\",\n  \"multiple\": false,\n  \"fields\": \"fieldName\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a0e7910-0ea9-4dcf-a165-4968639c6229",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/indices - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ae5be65b-3e26-4578-81f7-dbe6c470bf37",
          "name": "Get index by name",
          "request": {
            "name": "Get index by name",
            "description": {
              "content": "Returns an index.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "indices",
                ":index_name"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the index.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{index_name}}",
                  "key": "index_name"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "598212ca-2e6e-44bc-978a-b6e4257eb559",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "indices",
                    ":index_name"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the index.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{index_name}}",
                      "key": "index_name"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f486427-96c1-4598-8e8a-55c8d867f045",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/indices/:index_name - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c6e7d8f0-3957-45a6-99ae-bb671ad6cf5b",
          "name": "Delete index by name",
          "request": {
            "name": "Delete index by name",
            "description": {
              "content": "Delete an index.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "indices",
                ":index_name"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the index.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{index_name}}",
                  "key": "index_name"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0d7012f2-ed5e-4614-848b-b2743d96755f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "indices",
                    ":index_name"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the index.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{index_name}}",
                      "key": "index_name"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35e154d6-e402-40cb-aad8-8f5a5e969289",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/:dataEntityName/indices/:index_name - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a2b2819f-898c-4f00-9ddc-465e1c3f5f4b",
      "name": "Clusters",
      "description": {
        "content": "Lets you know if a particular document is in one or more clusters.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "97c9a4a6-ad9a-48a9-b37b-f65a80b1d29e",
          "name": "Validate document by clusters",
          "request": {
            "name": "Validate document by clusters",
            "description": {
              "content": "Check if a document is present in one or more clusters (specific set of field values).\r\n\r\n> There is a limit of five rules per request.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id",
                "clusters"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"name\": \"male\",        \n        \"rule\": \"gender=male\"\n    },\n    {\n        \"name\": \"complex\",\n        \"rule\": \"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\"\n    },    \n    {\n        \"name\": \"complex2\",\n        \"rule\": \"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\"\n    },\n    {\n        \"name\": \"createdIn\",\n        \"rule\": \"createdIn between 2015-10-28 AND 2015-10-30\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e9b210dc-bcf6-4c2d-9d09-fddd91760144",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id",
                    "clusters"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"name\": \"male\",        \n        \"rule\": \"gender=male\"\n    },\n    {\n        \"name\": \"complex\",\n        \"rule\": \"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\"\n    },    \n    {\n        \"name\": \"complex2\",\n        \"rule\": \"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\"\n    },\n    {\n        \"name\": \"createdIn\",\n        \"rule\": \"createdIn between 2015-10-28 AND 2015-10-30\"\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "19365df0-d92e-4185-9473-5bc815936999",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/:dataEntityName/documents/:id/clusters - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "043ebe34-7295-4d86-aa27-5ab8c3ca344b",
      "name": "Versions",
      "description": {
        "content": "Master Data documents are versioned. This means that for each change a new version is generated. The `versions` APIs allows to query the versions and also apply the state of a document to the most current version.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a21a1429-785c-4e61-a274-e26ef897c6c5",
          "name": "List versions",
          "request": {
            "name": "List versions",
            "description": {
              "content": "Allows to list the versions of a document.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "If true, return all the fields in each version of the document",
                    "type": "text/plain"
                  },
                  "key": "load",
                  "value": "true"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "If `load` is true, the response will return only these specific fields",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "id,dataEntityId,isNewsletterOptIn,createdBy"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "85be7cf3-9445-440b-9be6-37655f9c9bcc",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id",
                    "versions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "load",
                      "value": "true"
                    },
                    {
                      "key": "fields",
                      "value": "id,dataEntityId,isNewsletterOptIn,createdBy"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"_EAR0cJ7XB5k5grnmm0zeKGlVvVM9WCPy_\",\n    \"date\": \"2016-10-18T16:53:32+00:00\",\n    \"document\": {\n      \"id\": \"72e7f8dd-1168-23ec-82ac-0e2b61663eb4\",\n      \"dataEntityId\": \"Client\",\n      \"isNewsletterOptIn\": true,\n      \"createdBy\": \"81fc8b10-25b7-48de-b425-7b93554002cc\"\n    }\n  },\n  {\n    \"id\": \"_E5SH9WXVvhPBNnbQtYAAGqrIysIeNYhV_\",\n    \"date\": \"2016-09-08T20:11:42+00:00\",\n    \"document\": {\n      \"id\": \"72e7f8dd-1168-23ec-82ac-0e2b61663eb4\",\n      \"dataEntityId\": \"Client\",\n      \"isNewsletterOptIn\": true,\n      \"createdBy\": \"81fc8b10-25b7-48de-b425-7b93554002cc\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a77cac4-d927-421a-82d0-e85fa29ea477",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"Listversion\",\"required\":[\"id\",\"date\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"document\":{\"type\":\"object\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "005e3ca0-1457-46cc-b2aa-ea6ec1282d80",
          "name": "Get version",
          "request": {
            "name": "Get version",
            "description": {
              "content": "Returns the version of a document.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id",
                "versions",
                ":versionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version to update.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "123456789abc",
                  "key": "versionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "82c95d1d-e7cb-4986-91d9-e99a78e3b26e",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id",
                    "versions",
                    ":versionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version to update.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "123456789abc",
                      "key": "versionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"version-id\",\n  \"author\": \"user-id\",\n  \"document\": {\n    \"id\": \"my-id\",\n    \"dataEntityId\": \"Client\",\n    \"accountId\": \"my-account-id\",\n    \"accountName\": \"my-account\",\n    \"followers\": [],\n    \"email\": \"teste@mail.com\",\n    \"rclastsession\": \"163054c0-954f-11e6-891e-4d2b1c3450a4\",\n    \"rclastsessiondate\": \"2016-10-18T16:53:00\",\n    \"checkouttag\": null,\n    \"carttag\": null,\n    \"departmentVisitedTag\": {\n      \"DisplayValue\": \"Ar e Ventila√ß√£o\",\n      \"Scores\": {\n        \"Ar e Ventila√ß√£o\": [\n          {\n            \"Point\": 1,\n            \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n            \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n          }\n        ]\n      }\n    }\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "72e29c85-239b-4976-a8dd-549b24468964",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Getversion\",\"required\":[\"id\",\"author\",\"document\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"author\":{\"type\":\"string\"},\"document\":{\"title\":\"Document\",\"required\":[\"id\",\"dataEntityId\",\"accountId\",\"accountName\",\"followers\",\"email\",\"rclastsession\",\"rclastsessiondate\",\"checkouttag\",\"carttag\",\"departmentVisitedTag\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"dataEntityId\":{\"type\":\"string\"},\"accountId\":{\"type\":\"string\"},\"accountName\":{\"type\":\"string\"},\"followers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"\"},\"email\":{\"type\":\"string\"},\"rclastsession\":{\"type\":\"string\"},\"rclastsessiondate\":{\"type\":\"string\"},\"checkouttag\":{\"type\":[\"string\",\"null\"]},\"carttag\":{\"type\":[\"string\",\"null\"]},\"departmentVisitedTag\":{\"title\":\"DepartmentVisitedTag\",\"required\":[\"DisplayValue\",\"Scores\"],\"type\":\"object\",\"properties\":{\"DisplayValue\":{\"type\":\"string\"},\"Scores\":{\"title\":\"Scores\",\"required\":[\"Ar e Ventila√ß√£o\"],\"type\":\"object\",\"properties\":{\"Ar e Ventila√ß√£o\":{\"type\":\"array\",\"items\":{\"title\":\"ArEVentilaO\",\"required\":[\"Point\",\"Date\",\"Until\"],\"type\":\"object\",\"properties\":{\"Point\":{\"type\":\"integer\",\"format\":\"int32\"},\"Date\":{\"type\":\"string\"},\"Until\":{\"type\":\"string\"}},\"example\":{\"Point\":1,\"Date\":\"2016-10-18T16:53:31.0842607Z\",\"Until\":\"2017-04-16T16:53:31.0842607Z\"}},\"description\":\"\"}},\"example\":{\"Ar e Ventila√ß√£o\":[{\"Point\":1,\"Date\":\"2016-10-18T16:53:31.0842607Z\",\"Until\":\"2017-04-16T16:53:31.0842607Z\"}]}}},\"example\":{\"DisplayValue\":\"Ar e Ventila√ß√£o\",\"Scores\":{\"Ar e Ventila√ß√£o\":[{\"Point\":1,\"Date\":\"2016-10-18T16:53:31.0842607Z\",\"Until\":\"2017-04-16T16:53:31.0842607Z\"}]}}}},\"example\":{\"id\":\"my-id\",\"dataEntityId\":\"Client\",\"accountId\":\"my-account-id\",\"accountName\":\"my-account\",\"followers\":[],\"email\":\"teste@mail.com\",\"rclastsession\":\"163054c0-954f-11e6-891e-4d2b1c3450a4\",\"rclastsessiondate\":\"2016-10-18T16:53:00\",\"checkouttag\":null,\"carttag\":null,\"departmentVisitedTag\":{\"DisplayValue\":\"Ar e Ventila√ß√£o\",\"Scores\":{\"Ar e Ventila√ß√£o\":[{\"Point\":1,\"Date\":\"2016-10-18T16:53:31.0842607Z\",\"Until\":\"2017-04-16T16:53:31.0842607Z\"}]}}}}},\"example\":{\"id\":\"version-id\",\"author\":\"user-id\",\"document\":{\"id\":\"my-id\",\"dataEntityId\":\"Client\",\"accountId\":\"my-account-id\",\"accountName\":\"my-account\",\"followers\":[],\"email\":\"teste@mail.com\",\"rclastsession\":\"163054c0-954f-11e6-891e-4d2b1c3450a4\",\"rclastsessiondate\":\"2016-10-18T16:53:00\",\"checkouttag\":null,\"carttag\":null,\"departmentVisitedTag\":{\"DisplayValue\":\"Ar e Ventila√ß√£o\",\"Scores\":{\"Ar e Ventila√ß√£o\":[{\"Point\":1,\"Date\":\"2016-10-18T16:53:31.0842607Z\",\"Until\":\"2017-04-16T16:53:31.0842607Z\"}]}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c46c066d-1ac0-4cd6-8ea7-b8c928fb395a",
          "name": "Put version",
          "request": {
            "name": "Put version",
            "description": {
              "content": "Updates document with version values.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":dataEntityName",
                "documents",
                ":id",
                "versions",
                ":versionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client",
                  "key": "dataEntityName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{versionId}}",
                  "key": "versionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1b2c9c8-567a-4b87-bc03-b71640fc6241",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":dataEntityName",
                    "documents",
                    ":id",
                    "versions",
                    ":versionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client",
                      "key": "dataEntityName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{versionId}}",
                      "key": "versionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5211ed2-66da-4b62-8864-933bb20cf20b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/dataentities/:dataEntityName/documents/:id/versions/:versionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e8e192c4-f94c-488e-9ed4-51c879da5948",
      "name": "Customer profiles",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a5263ef7-b040-4eb7-8d7a-d86502cdba17",
          "name": "Create new customer profile",
          "request": {
            "name": "Create new customer profile",
            "description": {
              "content": "Creates new customer profile.\r\n\r\n> You can use this request to create customer profiles according to any `CL` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Client",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4f0b3af9-994b-481e-9f1d-0447d4e8f4f8",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Client",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6c8027d-8875-4076-8b46-95541a44e943",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/Client/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/Client/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/Client/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/Client/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cdb0bf2e-7039-4946-95a6-21fdbf2c5335",
          "name": "Update customer profile",
          "request": {
            "name": "Update customer profile",
            "description": {
              "content": "Partially updates a customer profile.\r\n\r\n> You can use this request to update customer profiles according to any `CL` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Client",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "db72a7c7-20cd-45df-b469-f27288875a0b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Client",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfd7f4ec-ac26-4e09-86ae-f40db94ce110",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/Client/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/Client/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/Client/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/Client/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b38d2023-c402-47e9-a84b-08708ebf5ec9",
          "name": "Delete customer profile",
          "request": {
            "name": "Delete customer profile",
            "description": {
              "content": "Deletes a customer profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Client",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e354437c-4ea4-49f8-8c62-413bedbefebb",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Client",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"Client-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Client/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d40cfec-0f2c-404f-8d7a-7483b1a254a9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/Client/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/dataentities/Client/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/dataentities/Client/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/dataentities/Client/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3f4efb4e-8bc3-4a75-89dd-363107e5fa2b",
      "name": "Addresses",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e1f6c136-2be7-4d96-8ee3-53bd57bc2095",
          "name": "Create new customer address",
          "request": {
            "name": "Create new customer address",
            "description": {
              "content": "Creates new customer address. \r\n\r\n> You can use this request to create customer addresses according to any `AD` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Address",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4838ba19-44e0-4d13-8e27-b0810a64fad2",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Address",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Address/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ed13ae87-2628-4fd0-8bad-0e997ba53306",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/Address/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/Address/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/Address/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/Address/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8440d081-cba8-4e5a-b996-c75d9d58bf49",
          "name": "Update customer address",
          "request": {
            "name": "Update customer address",
            "description": {
              "content": "Partially updates a customer address.\r\n\r\n> You can use this request to update customer addresses according to any `AD` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Address",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Name of the schema the document to be created needs to be compliant with.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "85ca5ce2-1f2a-49bc-9773-6c40af665e21",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Address",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Address/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7af80fd5-aaf0-4bba-aeb8-0f64c9c0a6fc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/Address/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/Address/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/Address/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/Address/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "156c64cb-22f0-4413-ba10-724b942e43fe",
          "name": "Delete customer address",
          "request": {
            "name": "Delete customer address",
            "description": {
              "content": "Deletes a customer address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "Address",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the Document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "69b59315-281b-40fc-96e3-39bc5492a3c8",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "Address",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the Document.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/Address/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38a66d51-7b42-48b6-8188-46f598d4c9b3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/Address/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/dataentities/Address/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/dataentities/Address/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/dataentities/Address/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "description": {
        "content": "Environment to use. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{environment}",
      "key": "environment"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "654e49bf-872f-49c0-aa16-210147427f61",
    "name": "Master Data API - v2",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "> This version is not compatible with data entities from previous versions, such as CL and AD.\r\n\r\n\r\nMaster Data is a secure, fast, scalable, and extensible solution that allows users to create their own entities, store data, and retrieve information directly from the storefront or external integrations.\r\n\r\nSeveral internal VTEX modules use Master Data as a data repository, including the VTEX Customer Service, VTEX Profile System, and VTEX InStore. \r\n\r\nThere are two main ways to use Master Data:\r\n\r\n- Directly from the storefront\r\n- With an external integration\r\n\r\n### Directly from the storefront\r\n\r\nWhen using Master Data within the storefront, consider the following:\r\n\r\n- Use the storefront host to query or store information to avoid **CORS**-related issues.\r\n- Use the relative path to avoid CORS issues.\r\n- Configure the JSON Schema of the Data Entity to specify which information should be public and which should not be.\r\n- Avoid creating query loops to prevent potential throttling issues or APIs being disabled due to security protection measures.\r\n- Never add authentication keys, such as x-vtex-api-appkey or x-vtex-api-apptoken, via JavaScript as this could pose security risks.\r\n\r\n\r\n\r\n### External Integration\r\n\r\nWhen using Master Data to store data from an external integration, such as client data from another service, consider the following:\r\n\r\n- Use the host ```{{accountName}}.vtexcommercestable.com.br```.\r\n- Use the authentication keys (`X-VTEX-API-AppKey` ou `X-VTEX-API-AppToken`).\r\n\r\n### Most used attributes\r\n\r\n| Name | Description |\r\n| -------- | -------- |\r\n| `accountName` | Account name in VTEX License Manager |\r\n| `name` | Data Entity name |\r\n| `schema` | JSON Schema of a Data Entity |\r\n| `id` | Identifier of a document |\r\n| x-vtex-api-appKey | User key |\r\n| x-vtex-api-appToken | User token |",
      "type": "text/plain"
    }
  }
}