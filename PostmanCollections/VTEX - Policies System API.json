{
  "_": {
    "postman_id": "3241169f-a945-463c-894b-72c14143044e"
  },
  "item": [
    {
      "id": "6bc93c94-6580-49b2-b3da-ed0c16762ef7",
      "name": "Policy",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e409d1ca-9017-4ab8-8a3d-39f4f275536a",
          "name": "Get Policy List",
          "request": {
            "name": "Get Policy List",
            "description": {
              "content": "Retrieves a list of all policies in the account and general information of each policy.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "policies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fa43f5a0-407e-4f21-8c34-8af668c1f007",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "policies"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"in exercitation consequat\",\n    \"name\": \"sed voluptate qui nostrud\",\n    \"description\": \"ullamco non aliqua deserunt\",\n    \"statements\": [\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"commodo sed irure consectetur dolore\",\n          \"metadata\": {\n            \"consectetur2\": -91838481,\n            \"sitc1\": 38952293\n          }\n        },\n        \"resource\": \"velit ipsum \",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"sunt sint\",\n                \"est quis anim pariatur\"\n              ],\n              \"operation\": \"cupidata\",\n              \"key\": \"ipsum quis qui proident\",\n              \"values\": [\n                \"in proident dolor Duis nisi\",\n                \"Duis aliquip dolor aute\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"Excepteur et quis\",\n                \"ea repreh\"\n              ],\n              \"operation\": \"eiusmod\",\n              \"key\": \"sit Excepteur aute consectetur culpa\",\n              \"values\": [\n                \"officia aute cillum dolor\",\n                \"dolo\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"in pariatur\"\n      },\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"aliqua dolore officia proident\",\n          \"metadata\": {\n            \"amet_4d\": -3381903,\n            \"exercitation2ab\": true\n          }\n        },\n        \"resource\": \"id ea v\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"exercitation commodo Lor\",\n                \"sunt\"\n              ],\n              \"operation\": \"ut dolore cupidatat do\",\n              \"key\": \"commodo\",\n              \"values\": [\n                \"dolore enim irure incididunt sed\",\n                \"mollit\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"enim fu\",\n                \"commodo lab\"\n              ],\n              \"operation\": \"est irure magna qui\",\n              \"key\": \"irure incididunt\",\n              \"values\": [\n                \"mollit occaecat\",\n                \"est\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"ut qu\"\n      }\n    ]\n  },\n  {\n    \"id\": \"velit culpa ad sint\",\n    \"name\": \"irure\",\n    \"description\": \"laboris exercitation est\",\n    \"statements\": [\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"veniam eius\",\n          \"metadata\": {\n            \"dolore_cc\": -53730429\n          }\n        },\n        \"resource\": \"velit Lorem laborum deserunt ea\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"nulla labore velit sed irure\",\n                \"quis\"\n              ],\n              \"operation\": \"dolor elit\",\n              \"key\": \"U\",\n              \"values\": [\n                \"ullamco sed\",\n                \"in nulla ea culpa eu\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"est aliquip sed ut\",\n                \"pariatur ea\"\n              ],\n              \"operation\": \"reprehenderit labore id ad\",\n              \"key\": \"occaecat\",\n              \"values\": [\n                \"nulla nisi pariatur\",\n                \"sed cupidatat eiusmod veniam fugiat\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"fugiat\"\n      },\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"irure incididunt qui\",\n          \"metadata\": {\n            \"sint_8a1\": false,\n            \"nisi97e\": -27238755\n          }\n        },\n        \"resource\": \"elit Duis exercitation incididunt\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"exer\",\n                \"laborum adipisicing dolore elit\"\n              ],\n              \"operation\": \"non aliquip ut\",\n              \"key\": \"sed aliquip consequat\",\n              \"values\": [\n                \"sint minim ullamco adipisicing\",\n                \"veniam Lorem magna\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"adipisicing Lorem aliqua consequat officia\",\n                \"quis consequat Duis eiusmod\"\n              ],\n              \"operation\": \"adipisicing non dolore culpa\",\n              \"key\": \"exercitation Ut dolor nulla\",\n              \"values\": [\n                \"sunt tempor sed voluptate\",\n                \"enim adipisicing no\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"id culpa ut esse\"\n      }\n    ]\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3317543e-5799-4ecb-b32d-e3da0355668b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/policy-engine/policies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/policy-engine/policies - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/policy-engine/policies - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"PolicyGetResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"title\":\"id\",\"description\":\"Policy ID\"},\"name\":{\"type\":\"string\",\"description\":\"Policy Name\",\"title\":\"name\"},\"description\":{\"type\":\"string\",\"description\":\"Policy description. This description is only for internal use of identification\",\"title\":\"description\"},\"statements\":{\"type\":\"array\",\"title\":\"statements\",\"items\":{\"type\":\"object\",\"required\":[\"effect\"],\"properties\":{\"effect\":{\"type\":\"string\",\"title\":\"effect\",\"description\":\"This field is not functional at the moment. To create a correct request, fill the field with `Allow`\",\"default\":\"Allow\"},\"actions\":{\"type\":\"object\",\"title\":\"actions\",\"properties\":{\"id\":{\"type\":\"string\",\"title\":\"id\",\"description\":\"Action ID. The possible values can be `SendSlackMessage`, `SendEmail`, and `DeactivatePromotions`\"},\"metadata\":{\"type\":\"object\",\"title\":\"metadata\",\"description\":\"Data inside of the actions\",\"additionalProperties\":true}},\"description\":\"Actions that the Policy will execute\"},\"resource\":{\"type\":\"string\",\"description\":\"Scope on which this policy must be evaluated\",\"title\":\"resource\"},\"condition\":{\"type\":\"object\",\"properties\":{\"conditions\":{\"type\":\"array\",\"description\":\"List of conditions that will activate the policy\",\"items\":{\"properties\":{\"conditions\":{\"title\":\"conditions\",\"type\":\"array\",\"description\":\"These are the conditions the actions can have. The possible values are `[]`, `stringEquals`, and `numericGreaterThan`\",\"items\":{\"type\":\"string\"}},\"operation\":{\"type\":\"string\",\"title\":\"operation\",\"description\":\"The action of the condition. This operation possible values are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`\"},\"key\":{\"type\":\"string\",\"title\":\"key\",\"description\":\"The element that will define what the policy will influence. This field has the possible values `skuId`, `brandId`, `discountPercentage`\"},\"values\":{\"type\":\"array\",\"title\":\"values\",\"items\":{\"type\":\"string\"},\"description\":\"Value of the key\"}},\"type\":\"object\"}}},\"description\":\"Condition to activate this policy. This object can have a maximum of ten recursive conditions\",\"title\":\"condition\"},\"operation\":{\"type\":\"string\",\"title\":\"operation\",\"description\":\"This operation will determine if all the conditions need to be valid or at least one of them, if the conditions array is not empty.  The possible values to these fields are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`\"}}},\"description\":\"Requirements to the Policy be applied\"}}},\"example\":[{\"id\":\"pa_test_001\",\"name\":\"TestAlarmBerenice\",\"description\":\"TesteMarcosPromotionsAlert\",\"statements\":[{\"effect\":\"Allow\",\"actions\":[{\"id\":\"SendSlackMessage\",\"metadata\":{\"channel\":\"C01NJFF35R6\",\"relatedUsers\":[\"URUNDC2NB\"],\"alertDescription\":\"Avoid selling products from Berenice with a discount greater than 70%.\"}}],\"resource\":\"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\"condition\":{\"conditions\":[{\"conditions\":[],\"operation\":\"stringEquals\",\"key\":\"brandId\",\"values\":[\"2000001\"]},{\"conditions\":[],\"operation\":\"numericGreaterThan\",\"key\":\"discountPercentage\",\"values\":[\"70.00\"]}],\"operation\":\"and\"}}]}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/policy-engine/policies - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "752dd15f-04cb-4b98-a81c-a59ad5c7697f",
          "name": "Evaluate Policies",
          "request": {
            "name": "Evaluate Policies",
            "description": {
              "content": "This endpoint consults all policies and checks the ones that satisfy the request body’s conditions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "evaluate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"resource\": \"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\n  \"context\": {\n    \"brandId\": \"2000001\",\n    \"discountPercentage\": \"91.00\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f282579b-ca23-436f-8212-a91a819d7dee",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "evaluate"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"resource\": \"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\n  \"context\": {\n    \"brandId\": \"2000001\",\n    \"discountPercentage\": \"91.00\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"metadata\": {\n      \"channel\": \"C01NJFF35R6\",\n      \"relatedUsers\": [\n        \"URUNDC2NB\"\n      ],\n      \"alertDescription\": \"Avoid selling products from Berenice with a discount greater than 70%.\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3fb4d5d-56d7-4307-85e6-af81dabd1635",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/policy-engine/evaluate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/policy-engine/evaluate - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/policy-engine/evaluate - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"PolicyActionGetResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Action ID\",\"title\":\"id\"},\"metadata\":{\"type\":\"object\",\"description\":\"Metadata object from the current action\",\"title\":\"metadata\",\"additionalProperties\":true}}},\"example\":[{\"id\":\"SendSlackMessage\",\"metadata\":{\"channel\":\"C01NJFF35R6\",\"relatedUsers\":[\"URUNDC2NB\"],\"alertDescription\":\"Avoid selling products from Berenice with a discount greater than 70%.\"}}]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/policy-engine/evaluate - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2639e67-7139-49de-8fbb-174a4ce769d1",
          "name": "Get Policy by ID",
          "request": {
            "name": "Get Policy by ID",
            "description": {
              "content": "Retrieves general information of a policy by its ID.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "policies",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Policy ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pa_test_001",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c6829a66-0a60-4e7d-afe0-86d43ec9535a",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "policies",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Policy ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "pa_test_001",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"laborum adipisicing aliquip\",\n    \"name\": \"magna volupta\",\n    \"description\": \"cillum laboris aliqua\",\n    \"statements\": [\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"mollit ullamco\",\n          \"metadata\": {\n            \"ut_d\": -86496400,\n            \"in2e6\": 93198729.94378951,\n            \"animf9\": \"ea aliquip adipisicing et amet\",\n            \"ind\": 86029089\n          }\n        },\n        \"resource\": \"velit cillum deserunt Duis aliquip\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"Duis elit amet\",\n                \"in eiusmod Duis eu\"\n              ],\n              \"operation\": \"Duis aliquip non\",\n              \"key\": \"ut dolor pariatur irure\",\n              \"values\": [\n                \"tempor voluptate\",\n                \"veniam nostrud\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"est officia occaecat\",\n                \"do aute\"\n              ],\n              \"operation\": \"mini\",\n              \"key\": \"ad dolor\",\n              \"values\": [\n                \"irure occaecat\",\n                \"quis minim ut\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"s\"\n      },\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"ipsum quis elit\",\n          \"metadata\": {\n            \"in90\": 51483754.41058183\n          }\n        },\n        \"resource\": \"ut sint minim\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"minim\",\n                \"ad proident qui voluptate amet\"\n              ],\n              \"operation\": \"i\",\n              \"key\": \"nisi\",\n              \"values\": [\n                \"nostrud dolore pariatur labore minim\",\n                \"ipsum ut voluptate incididunt\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"id commo\",\n                \"aute minim elit\"\n              ],\n              \"operation\": \"sit culpa\",\n              \"key\": \"Ut\",\n              \"values\": [\n                \"dolor irure est fugiat incididunt\",\n                \"in proident\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"consectetur laboris mollit\"\n      }\n    ]\n  },\n  {\n    \"id\": \"sunt voluptate fugiat Lorem veniam\",\n    \"name\": \"dolore Duis incididunt te\",\n    \"description\": \"non nulla laborum in adipisicing\",\n    \"statements\": [\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"tempor enim sit esse magna\",\n          \"metadata\": {\n            \"proident_b\": -96769610.5334237\n          }\n        },\n        \"resource\": \"ea non labore veniam aliqua\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"sed aute quis\",\n                \"dolore\"\n              ],\n              \"operation\": \"anim id non dolor\",\n              \"key\": \"minim culpa\",\n              \"values\": [\n                \"aute Exc\",\n                \"culpa Ut ex in voluptate\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"cupidatat \",\n                \"aliquip ut irure\"\n              ],\n              \"operation\": \"nulla\",\n              \"key\": \"officia\",\n              \"values\": [\n                \"aliqua elit sed\",\n                \"non commodo anim nisi\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"quis incididunt\"\n      },\n      {\n        \"effect\": \"Allow\",\n        \"actions\": {\n          \"id\": \"dolor aute sed mollit magna\",\n          \"metadata\": {\n            \"sit_60f\": \"ullamco id\",\n            \"Excepteurd9\": false\n          }\n        },\n        \"resource\": \"deserunt commodo\",\n        \"condition\": {\n          \"conditions\": [\n            {\n              \"conditions\": [\n                \"voluptate culpa exercitation et\",\n                \"ex mollit aliquip sit\"\n              ],\n              \"operation\": \"esse in deserunt\",\n              \"key\": \"et aliquip enim\",\n              \"values\": [\n                \"adipisicing in\",\n                \"Ut enim culpa cillum tempor\"\n              ]\n            },\n            {\n              \"conditions\": [\n                \"consequat tempor officia ut\",\n                \"Excepteur sit incididunt sunt\"\n              ],\n              \"operation\": \"id\",\n              \"key\": \"id dolor in\",\n              \"values\": [\n                \"quis sint do tempor elit\",\n                \"aute exercitation dolor reprehenderit sunt\"\n              ]\n            }\n          ]\n        },\n        \"operation\": \"in anim\"\n      }\n    ]\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1f03ce6f-7071-4b21-af68-f5544d503ad5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/policy-engine/policies/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/policy-engine/policies/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/policy-engine/policies/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"PolicyGetResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"title\":\"id\",\"description\":\"Policy ID\"},\"name\":{\"type\":\"string\",\"description\":\"Policy Name\",\"title\":\"name\"},\"description\":{\"type\":\"string\",\"description\":\"Policy description. This description is only for internal use of identification\",\"title\":\"description\"},\"statements\":{\"type\":\"array\",\"title\":\"statements\",\"items\":{\"type\":\"object\",\"required\":[\"effect\"],\"properties\":{\"effect\":{\"type\":\"string\",\"title\":\"effect\",\"description\":\"This field is not functional at the moment. To create a correct request, fill the field with `Allow`\",\"default\":\"Allow\"},\"actions\":{\"type\":\"object\",\"title\":\"actions\",\"properties\":{\"id\":{\"type\":\"string\",\"title\":\"id\",\"description\":\"Action ID. The possible values can be `SendSlackMessage`, `SendEmail`, and `DeactivatePromotions`\"},\"metadata\":{\"type\":\"object\",\"title\":\"metadata\",\"description\":\"Data inside of the actions\",\"additionalProperties\":true}},\"description\":\"Actions that the Policy will execute\"},\"resource\":{\"type\":\"string\",\"description\":\"Scope on which this policy must be evaluated\",\"title\":\"resource\"},\"condition\":{\"type\":\"object\",\"properties\":{\"conditions\":{\"type\":\"array\",\"description\":\"List of conditions that will activate the policy\",\"items\":{\"properties\":{\"conditions\":{\"title\":\"conditions\",\"type\":\"array\",\"description\":\"These are the conditions the actions can have. The possible values are `[]`, `stringEquals`, and `numericGreaterThan`\",\"items\":{\"type\":\"string\"}},\"operation\":{\"type\":\"string\",\"title\":\"operation\",\"description\":\"The action of the condition. This operation possible values are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`\"},\"key\":{\"type\":\"string\",\"title\":\"key\",\"description\":\"The element that will define what the policy will influence. This field has the possible values `skuId`, `brandId`, `discountPercentage`\"},\"values\":{\"type\":\"array\",\"title\":\"values\",\"items\":{\"type\":\"string\"},\"description\":\"Value of the key\"}},\"type\":\"object\"}}},\"description\":\"Condition to activate this policy. This object can have a maximum of ten recursive conditions\",\"title\":\"condition\"},\"operation\":{\"type\":\"string\",\"title\":\"operation\",\"description\":\"This operation will determine if all the conditions need to be valid or at least one of them, if the conditions array is not empty.  The possible values to these fields are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`\"}}},\"description\":\"Requirements to the Policy be applied\"}}},\"example\":[{\"id\":\"pa_test_001\",\"name\":\"TestAlarmBerenice\",\"description\":\"TesteMarcosPromotionsAlert\",\"statements\":[{\"effect\":\"Allow\",\"actions\":[{\"id\":\"SendSlackMessage\",\"metadata\":{\"channel\":\"C01NJFF35R6\",\"relatedUsers\":[\"URUNDC2NB\"],\"alertDescription\":\"Avoid selling products from Berenice with a discount greater than 70%.\"}}],\"resource\":\"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\"condition\":{\"conditions\":[{\"conditions\":[],\"operation\":\"stringEquals\",\"key\":\"brandId\",\"values\":[\"2000001\"]},{\"conditions\":[],\"operation\":\"numericGreaterThan\",\"key\":\"discountPercentage\",\"values\":[\"70.00\"]}],\"operation\":\"and\"}}]}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/policy-engine/policies/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "128224e0-b4a9-4ac2-b4f4-2239e7f951a1",
          "name": "Create Policy",
          "request": {
            "name": "Create Policy",
            "description": {
              "content": "Creates a new policy from scratch.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "policies",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Policy ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pa_test_001",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"TestAlarmBerenice\",\n  \"description\": \"TesteMarcosPromotionsAlert\",\n  \"statements\": [\n    {\n      \"effect\": \"Allow\",\n      \"actions\": [\n        {\n          \"id\": \"SendSlackMessage\",\n          \"metadata\": {\n            \"channel\": \"C01NJFF35R6\",\n            \"relatedUsers\": [\n              \"URUNDC2NB\"\n            ],\n            \"alertDescription\": \"Avoid selling products from Berenice with a discount greater than 40%.\"\n          }\n        }\n      ],\n      \"resource\": \"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [],\n            \"operation\": \"stringEquals\",\n            \"key\": \"brandId\",\n            \"values\": [\n              \"2000001\"\n            ]\n          },\n          {\n            \"conditions\": [],\n            \"operation\": \"numericGreaterThan\",\n            \"key\": \"discountPercentage\",\n            \"values\": [\n              \"40.00\"\n            ]\n          }\n        ],\n        \"operation\": \"and\"\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "de86a999-a956-40fd-8699-0ff832a8ed28",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "policies",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Policy ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "pa_test_001",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/octet-stream"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"TestAlarmBerenice\",\n  \"description\": \"TesteMarcosPromotionsAlert\",\n  \"statements\": [\n    {\n      \"effect\": \"Allow\",\n      \"actions\": [\n        {\n          \"id\": \"SendSlackMessage\",\n          \"metadata\": {\n            \"channel\": \"C01NJFF35R6\",\n            \"relatedUsers\": [\n              \"URUNDC2NB\"\n            ],\n            \"alertDescription\": \"Avoid selling products from Berenice with a discount greater than 40%.\"\n          }\n        }\n      ],\n      \"resource\": \"vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [],\n            \"operation\": \"stringEquals\",\n            \"key\": \"brandId\",\n            \"values\": [\n              \"2000001\"\n            ]\n          },\n          {\n            \"conditions\": [],\n            \"operation\": \"numericGreaterThan\",\n            \"key\": \"discountPercentage\",\n            \"values\": [\n              \"40.00\"\n            ]\n          }\n        ],\n        \"operation\": \"and\"\n      }\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/octet-stream"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c7563288-81d9-499b-ba66-6f2e12f3be2d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/policy-engine/policies/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/policy-engine/policies/:id - Content-Type is application/octet-stream\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/octet-stream\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1cdfe857-0dbd-40f9-9c69-de3e93b27786",
          "name": "Update Policy",
          "request": {
            "name": "Update Policy",
            "description": {
              "content": "Updates an existing policy at your account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "policies",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Policy ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pa_test_001",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/octet-stream"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"voluptate \",\n  \"description\": \"nisi\",\n  \"statements\": [\n    {\n      \"effect\": \"Allow\",\n      \"actions\": {\n        \"id\": \"qui veniam cupidatat\",\n        \"metadata\": {\n          \"ea_ad2\": -68563254,\n          \"velit8\": \"aute\"\n        }\n      },\n      \"resource\": \"ut proident voluptate fugiat\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [\n              \"officia nisi tempor aliquip Duis\",\n              \"deserunt dolore\"\n            ],\n            \"operation\": \"magna non\",\n            \"key\": \"culpa dolor est \",\n            \"values\": [\n              \"sunt\",\n              \"sed\"\n            ]\n          },\n          {\n            \"conditions\": [\n              \"id\",\n              \"in consectetur magna\"\n            ],\n            \"operation\": \"est incididunt\",\n            \"key\": \"ea in nisi sunt\",\n            \"values\": [\n              \"aliqua non consequat\",\n              \"do pariatur\"\n            ]\n          }\n        ]\n      },\n      \"operation\": \"sit reprehenderit aliqua\"\n    },\n    {\n      \"effect\": \"Allow\",\n      \"actions\": {\n        \"id\": \"pariatur exercitation\",\n        \"metadata\": {\n          \"nisi_6\": \"adipisicing\"\n        }\n      },\n      \"resource\": \"reprehenderit sed nostrud\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [\n              \"non consequat cupida\",\n              \"nisi\"\n            ],\n            \"operation\": \"cillum labore\",\n            \"key\": \"consequat\",\n            \"values\": [\n              \"minim occaecat laboris adipisicing exercitation\",\n              \"cillum ea\"\n            ]\n          },\n          {\n            \"conditions\": [\n              \"nostrud consequat Excepteur proident\",\n              \"officia amet consequat\"\n            ],\n            \"operation\": \"occaecat \",\n            \"key\": \"sunt fugiat\",\n            \"values\": [\n              \"es\",\n              \"reprehe\"\n            ]\n          }\n        ]\n      },\n      \"operation\": \"id tempor adipisicing\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1cfe99eb-1142-4b16-ba98-57102e71734b",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "policies",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Policy ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "pa_test_001",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/octet-stream"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"pariatur dolore sed exercitation\",\n  \"description\": \"quis eu exercitation et\",\n  \"statements\": [\n    {\n      \"effect\": \"Allow\",\n      \"actions\": {\n        \"id\": \"sed commodo\",\n        \"metadata\": {\n          \"ex_d\": -22017884\n        }\n      },\n      \"resource\": \"et quis\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [\n              \"irure magna dolor Lorem commodo\",\n              \"mollit \"\n            ],\n            \"operation\": \"non occaecat irure Duis\",\n            \"key\": \"ad laboris in veniam\",\n            \"values\": [\n              \"irure nostrud\",\n              \"dolore Excepteur Lorem cupidatat sit\"\n            ]\n          },\n          {\n            \"conditions\": [\n              \"quis Duis\",\n              \"cupidatat ullamco ad\"\n            ],\n            \"operation\": \"do culpa cillum commodo\",\n            \"key\": \"Ut fugiat \",\n            \"values\": [\n              \"eiusmod nulla\",\n              \"consectetur eiusmod\"\n            ]\n          }\n        ]\n      },\n      \"operation\": \"est cillum\"\n    },\n    {\n      \"effect\": \"Allow\",\n      \"actions\": {\n        \"id\": \"magna qui amet\",\n        \"metadata\": {\n          \"sunte75\": 37691355,\n          \"Lorem3\": 58228583.999117196,\n          \"ince\": -99981968.1897812\n        }\n      },\n      \"resource\": \"mollit eu ullamco\",\n      \"condition\": {\n        \"conditions\": [\n          {\n            \"conditions\": [\n              \"cillum amet nost\",\n              \"laborum sit in anim et\"\n            ],\n            \"operation\": \"ad in est commodo Ut\",\n            \"key\": \"velit cillum labore commodo\",\n            \"values\": [\n              \"irure\",\n              \"nisi laborum\"\n            ]\n          },\n          {\n            \"conditions\": [\n              \"aliqua culpa Lorem sunt\",\n              \"minim ullamco\"\n            ],\n            \"operation\": \"cillum\",\n            \"key\": \"do\",\n            \"values\": [\n              \"Lorem dolor laborum aliquip\",\n              \"fugiat reprehenderit commodo quis\"\n            ]\n          }\n        ]\n      },\n      \"operation\": \"adipisicing esse sint minim\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/octet-stream"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7971bb0a-ed08-4f79-85d2-b14b978da727",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/policy-engine/policies/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/policy-engine/policies/:id - Content-Type is application/octet-stream\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/octet-stream\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "95c07808-1c6a-4d8e-a30a-8510bf4ed661",
          "name": "Delete Policy by ID",
          "request": {
            "name": "Delete Policy by ID",
            "description": {
              "content": "Deletes a specific policy of the account by its ID.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "policy-engine",
                "policies",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Policy ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pa_test_001",
                  "key": "id"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dfa39151-18c9-4e90-be87-5be1ebb8bf30",
              "name": "200 OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "policy-engine",
                    "policies",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Policy ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "pa_test_001",
                      "key": "id"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb8b5da7-efe4-457e-9cb0-f5dc5db3cb3e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/policy-engine/policies/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "description": {
        "content": "Environment to use. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{environment}",
      "key": "environment"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "3241169f-a945-463c-894b-72c14143044e",
    "name": "Policies System API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "\r\n This API will create promotion alarms when selling products with undesired prices and promotions. It will create conditions that will check if the prices and the promotions are correct. If not, the system will alarm the store with information about the product sold at unexpected prices.\r\n\r\n ## Index\r\n\r\n- `GET` [Get Policy List](https://developers.vtex.com/docs/api-reference/policies-system-api#get-/api/policy-engine/policies)\r\n- `POST` [Evaluate Policies](https://developers.vtex.com/docs/api-reference/policies-system-api#post-/api/policy-engine/evaluate)\r\n- `GET` [Get Policy by ID](https://developers.vtex.com/docs/api-reference/policies-system-api#get-/api/policy-engine/policies/-id-)\r\n- `POST` [Create Policy](https://developers.vtex.com/docs/api-reference/policies-system-api#post-/api/policy-engine/policies/-id-)\r\n- `PUT` [Update Policy](https://developers.vtex.com/docs/api-reference/policies-system-api#put-/api/policy-engine/policies/-id-)\r\n- `DELETE` [Delete Policy by ID](https://developers.vtex.com/docs/api-reference/policies-system-api#delete-/api/policy-engine/policies/-id-)",
      "type": "text/plain"
    }
  }
}