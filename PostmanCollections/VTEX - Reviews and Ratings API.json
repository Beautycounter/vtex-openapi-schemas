{
  "_": {
    "postman_id": "95e1168d-49d5-4af2-ab61-c8d669a74b79"
  },
  "item": [
    {
      "id": "70a440c6-fb76-4a52-a9e3-1881a6f84be3",
      "name": "Rating",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "efe00081-5fa4-413d-92f9-05222a14bf1d",
          "name": "Get Product Rating",
          "request": {
            "name": "Get Product Rating",
            "description": {
              "content": "Retrieves the rating of a specific product.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rating",
                ":productId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Product ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "productId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "54f593a9-e62b-44ed-b4f1-20097825ae7d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "rating",
                    ":productId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Product ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "productId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"average\": 3.86,\n  \"totalCount\": 7\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "680bcf31-cdce-42c6-b61c-45f90549798a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/rating/:productId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/rating/:productId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/rating/:productId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"average\":{\"description\":\"Avarage rating of the product.\",\"type\":\"number\",\"example\":3.86},\"totalCount\":{\"description\":\"Total amount of ranting of the product.\",\"type\":\"number\",\"example\":7}},\"example\":{\"average\":3.86,\"totalCount\":7}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/rating/:productId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3ea3c47b-05b2-4a93-bfd5-056a144e93cf",
      "name": "Review",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5b9001ee-0809-468a-988a-f1e41e3a9917",
          "name": "Get Review by Review ID",
          "request": {
            "name": "Get Review by Review ID",
            "description": {
              "content": "Retrieves information of a product review by its ID.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "26f191b1-b471-4ebb-9bbf-0d00eac1ef88",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9ab20015-51a7-44f1-ab08-7278f074f1db",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"1\",\"rating\":5,\"title\":\"Great product\",\"text\":\"Great product.\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "42c427e9-2269-44c7-ba7a-fa6729d2c788",
          "name": "Delete Review",
          "request": {
            "name": "Delete Review",
            "description": {
              "content": "Deletes an existing review.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "eb31353c-6c8e-4129-8050-33f2a8abd74c",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "true",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ffdb2f84-5fc5-4350-8d9f-c6aae8e20ccc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"If the review was deleted (`true`) or not (`false`).\",\"type\":\"boolean\",\"example\":true}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d734fd1-cb9e-407a-93c9-957b91c7fa70",
          "name": "Update a Review",
          "request": {
            "name": "Update a Review",
            "description": {
              "content": "Updates the information of a review.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5323fdaa-c012-11ec-835d-0ebee58edbb3",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"verifiedPurchaser\": false,\n  \"locale\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c95c3e62-9837-462b-929b-a32f904fc6a3",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "5323fdaa-c012-11ec-835d-0ebee58edbb3",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"verifiedPurchaser\": false,\n  \"locale\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "af2e5be8-814c-46e2-af8b-5d0a3a08bb4d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"1\",\"rating\":5,\"title\":\"Great product\",\"text\":\"Great product.\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "522390ef-29e2-49b6-902d-a8dbf1fda771",
          "name": "Get a list of Reviews",
          "request": {
            "name": "Get a list of Reviews",
            "description": {
              "content": "Retrieves a list of reviews.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Returns Reviews that contain the search term in `productId`, `sku`, `shopperId`, or `reviewerName`.",
                    "type": "text/plain"
                  },
                  "key": "search_term",
                  "value": "search_term"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Zero base starting record number, `0` is the default value.",
                    "type": "text/plain"
                  },
                  "key": "from",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Zero base ending record number, `3` is the default value.",
                    "type": "text/plain"
                  },
                  "key": "to",
                  "value": "3"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Case-sensitive fieldName to order records (optionally add `:asc` or `:desc`).",
                    "type": "text/plain"
                  },
                  "key": "order_by",
                  "value": ":asc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Status of the review, approved (`true`) or not (`false`).",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "true"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Filter the reviews by product ID.",
                    "type": "text/plain"
                  },
                  "key": "product_id",
                  "value": "1"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e631164a-868f-4eb0-a676-c9ae7d64796c",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "search_term",
                      "value": "search_term"
                    },
                    {
                      "key": "from",
                      "value": "0"
                    },
                    {
                      "key": "to",
                      "value": "3"
                    },
                    {
                      "key": "order_by",
                      "value": ":asc"
                    },
                    {
                      "key": "status",
                      "value": "true"
                    },
                    {
                      "key": "product_id",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"proident sint aute\",\n      \"productId\": \"non commodo\",\n      \"rating\": 95192547.58067629,\n      \"title\": \"laborum minim eu pariatur\",\n      \"text\": \"sunt\",\n      \"reviewerName\": \"ullamco ea nisi\",\n      \"shopperId\": \"laborum ea non\",\n      \"reviewDateTime\": \"enim consequat mollit occaecat\",\n      \"searchDate\": \"id culpa anim mollit\",\n      \"verifiedPurchaser\": false,\n      \"sku\": \"minim Lorem reprehenderit aliquip deserunt\",\n      \"approved\": true,\n      \"location\": \"amet\",\n      \"locale\": \"proident dolor laborum\",\n      \"pastReviews\": \"non adipisicing\"\n    },\n    {\n      \"id\": \"quis irure e\",\n      \"productId\": \"est voluptate\",\n      \"rating\": -34452063.062408686,\n      \"title\": \"cillum id ut Lorem nisi\",\n      \"text\": \"in labore fugiat officia\",\n      \"reviewerName\": \"Ut n\",\n      \"shopperId\": \"non minim est nostrud exercitation\",\n      \"reviewDateTime\": \"ali\",\n      \"searchDate\": \"eiusmod fugiat\",\n      \"verifiedPurchaser\": false,\n      \"sku\": \"dolor incididunt dolor eu\",\n      \"approved\": true,\n      \"location\": \"dolore amet in\",\n      \"locale\": \"amet et\",\n      \"pastReviews\": \"deserunt sunt est aute\"\n    }\n  ],\n  \"range\": {\n    \"total\": -74589287.8520244,\n    \"from\": -13505662.053783357,\n    \"to\": 78268789.92128327\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d65d232-d0b7-43af-a1e8-f7819b94af11",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"data\":{\"description\":\"Array of reviews.\",\"type\":\"array\",\"items\":{\"description\":\"Review's information.\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}}}},\"range\":{\"description\":\"Range of the review's list.\",\"type\":\"object\",\"properties\":{\"total\":{\"description\":\"Total number of reviews on the list.\",\"type\":\"number\"},\"from\":{\"description\":\"Zero base starting record number.\",\"type\":\"number\"},\"to\":{\"description\":\"Zero base ending record number.\",\"type\":\"number\"}}}},\"example\":{\"data\":[{\"id\":\"1\",\"productId\":\"880035\",\"rating\":3,\"title\":\"anon\",\"text\":\"anon\",\"reviewerName\":\"anon\",\"shopperId\":\"anon@email.com\",\"reviewDateTime\":\"06/02/2021 20:58:43\",\"searchDate\":\"2021-06-02T20:58:43Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":\"\",\"locale\":null,\"pastReviews\":null},{\"id\":\"2\",\"productId\":\"880035\",\"rating\":5,\"title\":\"logged in\",\"text\":\"it's cool\",\"reviewerName\":\"Brian\",\"shopperId\":\"brian@email.com.br\",\"reviewDateTime\":\"06/02/2021 21:00:00\",\"searchDate\":\"2021-06-02T21:00:00Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":\"\",\"locale\":null,\"pastReviews\":null},{\"id\":\"c66d8bc0-787c-11ec-82ac-028dd4526e77\",\"productId\":\"880035\",\"rating\":3,\"title\":\"Korean\",\"text\":\"ko-KR\",\"reviewerName\":\"ko-KR\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"01/18/2022 16:36:33\",\"searchDate\":\"2022-01-18T16:36:33Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":null,\"locale\":\"ko-KR\",\"pastReviews\":null}],\"range\":{\"total\":26,\"from\":0,\"to\":3}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fa5dd951-79e2-4feb-bb16-8c447d98f00c",
          "name": "Create Multiple Reviews",
          "request": {
            "name": "Create Multiple Reviews",
            "description": {
              "content": "Creates multiple reviews.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"productId\": \"1\",\n    \"rating\": 4,\n    \"title\": \"test multiple reviews\",\n    \"text\": \"test multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  },\n  {\n    \"productId\": \"2\",\n    \"rating\": 4,\n    \"title\": \"test review 2 multiple reviews\",\n    \"text\": \"test review 2 multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f4739d91-f9d5-424d-b20b-329e930c29bd",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"productId\": \"1\",\n    \"rating\": 4,\n    \"title\": \"test multiple reviews\",\n    \"text\": \"test multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  },\n  {\n    \"productId\": \"2\",\n    \"rating\": 4,\n    \"title\": \"test review 2 multiple reviews\",\n    \"text\": \"test review 2 multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  \"8e1a5e11-c0c9-11ec-835d-0a591b8a3ec1\",\n  \"9257c203-c0c9-11ec-835d-0e02dd207951\"\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "134aa4ff-9397-47ef-a6e2-b7b04d67e526",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"List of review IDs.\",\"type\":\"array\",\"items\":{\"description\":\"Review ID.\",\"type\":\"string\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "eb2c948a-d0c1-4e51-a225-918d283423ae",
          "name": "Delete Multiple Reviews",
          "request": {
            "name": "Delete Multiple Reviews",
            "description": {
              "content": "Deletes multiple reviews at once.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "[\n  \"babefcf4-e0f7-11ec-835d-16c4e59c4351\",\n  \"qweqweee-e0f7-11ec-835d-16c4e59c4351\",\n  \"asdffggg-e0f7-11ec-835d-16c4e59c4351\"\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "61012d5e-c587-465e-a006-c916de3cffe1",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"babefcf4-e0f7-11ec-835d-16c4e59c4351\",\n  \"qweqweee-e0f7-11ec-835d-16c4e59c4351\",\n  \"asdffggg-e0f7-11ec-835d-16c4e59c4351\"\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "true",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2f4c9742-b8b6-4716-9408-d02bba9fbf4c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"If the review was deleted (`true`) or not (`false`).\",\"type\":\"boolean\",\"example\":true}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2bd263b8-8d32-4109-b30c-4b0b98660973",
          "name": "Create a Review",
          "request": {
            "name": "Create a Review",
            "description": {
              "content": "Creates a single review",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f124fa7f-92b3-413d-846f-c7d4b8cc6778",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa3c1fe9-0d7e-47e7-a819-6faf46006de3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/review - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/review - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/review - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"65444\",\"rating\":5,\"title\":\"Good Product\",\"text\":\"It is the best product that I have seen\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/review - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.myvtex.com/reviews-and-ratings/api",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "95e1168d-49d5-4af2-ab61-c8d669a74b79",
    "name": "Reviews and Ratings API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "\r\nReviews & Ratings is a [VTEX IO native solution](https://developers.vtex.com/vtex-developer-docs/docs/vtex-reviews-and-ratings) that allows shoppers to submit reviews and ratings for products, as well as see them while navigating the store.\r\n\r\n## Rating\r\n\r\n- [Get Product Rating](https://developers.vtex.com/vtex-rest-api/reference/getproductrating)\r\n\r\n## Review\r\n\r\n- [Get Review by Review ID](https://developers.vtex.com/vtex-rest-api/reference/getreviewbyreviewid)\r\n- [Delete Review](https://developers.vtex.com/vtex-rest-api/reference/deletereview)\r\n- [Update a Review](https://developers.vtex.com/vtex-rest-api/reference/editreview)\r\n- [Get a list of Reviews](https://developers.vtex.com/vtex-rest-api/reference/getalistofreviews)\r\n- [Create Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/savemultiplereviews)\r\n- [Delete Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/deletemultiplereviews)\r\n- [Create a Review](https://developers.vtex.com/vtex-rest-api/reference/savereview)",
      "type": "text/plain"
    }
  }
}