{
  "_": {
    "postman_id": "df739322-be36-4b98-a37b-df65d38d71fe"
  },
  "item": [
    {
      "id": "bc5c5b5c-5794-42b1-bf2b-b453c0bb5c03",
      "name": "Rating",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "11a5cb3c-3962-492c-899c-6b51091f646b",
          "name": "Get Product Rating",
          "request": {
            "name": "Get Product Rating",
            "description": {
              "content": "Retrieves the rating of a specific product.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rating",
                ":productId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Product ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "productId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0d84b9e9-66d0-48cd-85ff-f3b6b3555833",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "rating",
                    ":productId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Product ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "productId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"average\": 3.86,\n  \"totalCount\": 7\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6fdaea46-c1a2-4e9d-b356-5d37984382b1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/rating/:productId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/rating/:productId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/rating/:productId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"average\":{\"description\":\"Avarage rating of the product.\",\"type\":\"number\",\"example\":3.86},\"totalCount\":{\"description\":\"Total amount of ranting of the product.\",\"type\":\"number\",\"example\":7}},\"example\":{\"average\":3.86,\"totalCount\":7}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/rating/:productId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1f44c593-e9c8-4a3c-bb41-17e71736cc67",
      "name": "Review",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "495a31f9-0e0e-412c-9381-a96d94e65313",
          "name": "Get Review by Review ID",
          "request": {
            "name": "Get Review by Review ID",
            "description": {
              "content": "Retrieves information of a product review by its ID.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "87768024-c430-47d6-9ba7-61002ab02881",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "80da8692-ad8f-4132-ae74-bd9ab414c700",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"1\",\"rating\":5,\"title\":\"Great product\",\"text\":\"Great product.\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "09e759fd-26c2-4ca7-8d33-fd2c4e5425f9",
          "name": "Delete Review",
          "request": {
            "name": "Delete Review",
            "description": {
              "content": "Deletes an existing review.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d9338ec1-d2ad-4d66-aaaf-bcdf6c00f530",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "true",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9aec32de-994b-43a3-8cd3-e7ea1f454aca",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"If the review was deleted (`true`) or not (`false`).\",\"type\":\"boolean\",\"example\":true}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "59951d2c-80eb-4b91-8fc2-5a227b961f8f",
          "name": "Update a Review",
          "request": {
            "name": "Update a Review",
            "description": {
              "content": "Updates the information of a review.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review",
                ":reviewId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Review ID.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5323fdaa-c012-11ec-835d-0ebee58edbb3",
                  "key": "reviewId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"verifiedPurchaser\": false,\n  \"locale\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "87a33a48-1315-403c-a056-3deb4ebd3348",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review",
                    ":reviewId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Review ID.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "5323fdaa-c012-11ec-835d-0ebee58edbb3",
                      "key": "reviewId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"verifiedPurchaser\": false,\n  \"locale\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"1\",\n  \"rating\": 5,\n  \"title\": \"Great product\",\n  \"text\": \"Great product.\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d8318664-50fd-4004-8303-5ebb5e36dbc3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/review/:reviewId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/review/:reviewId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/review/:reviewId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"1\",\"rating\":5,\"title\":\"Great product\",\"text\":\"Great product.\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/review/:reviewId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "225124a7-652b-419a-b982-04df995981a9",
          "name": "Get a list of Reviews",
          "request": {
            "name": "Get a list of Reviews",
            "description": {
              "content": "Retrieves a list of reviews.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Returns Reviews that contain the search term in `productId`, `sku`, `shopperId`, or `reviewerName`.",
                    "type": "text/plain"
                  },
                  "key": "search_term",
                  "value": "search_term"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Zero base starting record number, `0` is the default value.",
                    "type": "text/plain"
                  },
                  "key": "from",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Zero base ending record number, `3` is the default value.",
                    "type": "text/plain"
                  },
                  "key": "to",
                  "value": "3"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Case-sensitive fieldName to order records (optionally add `:asc` or `:desc`).",
                    "type": "text/plain"
                  },
                  "key": "order_by",
                  "value": ":asc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Status of the review, approved (`true`) or not (`false`).",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "true"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Filter the reviews by product ID.",
                    "type": "text/plain"
                  },
                  "key": "product_id",
                  "value": "1"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f2c60cfc-a482-4a57-a5f7-7cda1d71c88f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "search_term",
                      "value": "search_term"
                    },
                    {
                      "key": "from",
                      "value": "0"
                    },
                    {
                      "key": "to",
                      "value": "3"
                    },
                    {
                      "key": "order_by",
                      "value": ":asc"
                    },
                    {
                      "key": "status",
                      "value": "true"
                    },
                    {
                      "key": "product_id",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"proident culpa ut\",\n      \"productId\": \"voluptate nostrud\",\n      \"rating\": -67885838.46515231,\n      \"title\": \"in nisi occaecat\",\n      \"text\": \"laborum nostrud irure\",\n      \"reviewerName\": \"Ut eiusmod officia occaecat\",\n      \"shopperId\": \"Lorem\",\n      \"reviewDateTime\": \"anim nostrud velit minim amet\",\n      \"searchDate\": \"eiusmod Lorem\",\n      \"verifiedPurchaser\": false,\n      \"sku\": \"Excepteur ea ullamco\",\n      \"approved\": true,\n      \"location\": \"cillum incididunt\",\n      \"locale\": \"ea id\",\n      \"pastReviews\": \"nulla nisi ipsum eiusmod\"\n    },\n    {\n      \"id\": \"enim tempor fugiat\",\n      \"productId\": \"sit eu nisi dolore\",\n      \"rating\": -49391469.51990732,\n      \"title\": \"deserunt qui co\",\n      \"text\": \"cupidatat dolor Duis ex\",\n      \"reviewerName\": \"qui voluptate sint proident\",\n      \"shopperId\": \"aliquip\",\n      \"reviewDateTime\": \"in ea cupidatat\",\n      \"searchDate\": \"voluptate aliqua in quis proident\",\n      \"verifiedPurchaser\": true,\n      \"sku\": \"Excepteur dolore ullamco\",\n      \"approved\": false,\n      \"location\": \"in sit amet proident\",\n      \"locale\": \"et dolor nisi\",\n      \"pastReviews\": \"ut\"\n    }\n  ],\n  \"range\": {\n    \"total\": -8803321.275433838,\n    \"from\": 7966305.955712512,\n    \"to\": 94218050.57589713\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b4fddba-6dbc-495e-b8ae-6d662b8e33d3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"data\":{\"description\":\"Array of reviews.\",\"type\":\"array\",\"items\":{\"description\":\"Review's information.\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}}}},\"range\":{\"description\":\"Range of the review's list.\",\"type\":\"object\",\"properties\":{\"total\":{\"description\":\"Total number of reviews on the list.\",\"type\":\"number\"},\"from\":{\"description\":\"Zero base starting record number.\",\"type\":\"number\"},\"to\":{\"description\":\"Zero base ending record number.\",\"type\":\"number\"}}}},\"example\":{\"data\":[{\"id\":\"1\",\"productId\":\"880035\",\"rating\":3,\"title\":\"anon\",\"text\":\"anon\",\"reviewerName\":\"anon\",\"shopperId\":\"anon@email.com\",\"reviewDateTime\":\"06/02/2021 20:58:43\",\"searchDate\":\"2021-06-02T20:58:43Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":\"\",\"locale\":null,\"pastReviews\":null},{\"id\":\"2\",\"productId\":\"880035\",\"rating\":5,\"title\":\"logged in\",\"text\":\"it's cool\",\"reviewerName\":\"Brian\",\"shopperId\":\"brian@email.com.br\",\"reviewDateTime\":\"06/02/2021 21:00:00\",\"searchDate\":\"2021-06-02T21:00:00Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":\"\",\"locale\":null,\"pastReviews\":null},{\"id\":\"c66d8bc0-787c-11ec-82ac-028dd4526e77\",\"productId\":\"880035\",\"rating\":3,\"title\":\"Korean\",\"text\":\"ko-KR\",\"reviewerName\":\"ko-KR\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"01/18/2022 16:36:33\",\"searchDate\":\"2022-01-18T16:36:33Z\",\"verifiedPurchaser\":false,\"sku\":null,\"approved\":true,\"location\":null,\"locale\":\"ko-KR\",\"pastReviews\":null}],\"range\":{\"total\":26,\"from\":0,\"to\":3}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c78f8319-83ff-40db-be69-7a6f2f8cf3f2",
          "name": "Create Multiple Reviews",
          "request": {
            "name": "Create Multiple Reviews",
            "description": {
              "content": "Creates multiple reviews.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"productId\": \"1\",\n    \"rating\": 4,\n    \"title\": \"test multiple reviews\",\n    \"text\": \"test multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  },\n  {\n    \"productId\": \"2\",\n    \"rating\": 4,\n    \"title\": \"test review 2 multiple reviews\",\n    \"text\": \"test review 2 multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7a1704ca-7ce4-46f7-a0ee-0d8d8064de2b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"productId\": \"1\",\n    \"rating\": 4,\n    \"title\": \"test multiple reviews\",\n    \"text\": \"test multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  },\n  {\n    \"productId\": \"2\",\n    \"rating\": 4,\n    \"title\": \"test review 2 multiple reviews\",\n    \"text\": \"test review 2 multiple reviews\",\n    \"reviewerName\": \"Arturo\",\n    \"approved\": false,\n    \"verifiedPurchaser\": false\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  \"8e1a5e11-c0c9-11ec-835d-0a591b8a3ec1\",\n  \"9257c203-c0c9-11ec-835d-0e02dd207951\"\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "308de33b-6de4-4951-9529-cc75f0b00aea",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"List of review IDs.\",\"type\":\"array\",\"items\":{\"description\":\"Review ID.\",\"type\":\"string\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2e4b28d5-e6ff-4d83-943b-3b2c7a443bfb",
          "name": "Delete Multiple Reviews",
          "request": {
            "name": "Delete Multiple Reviews",
            "description": {
              "content": "Deletes multiple reviews at once.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reviews"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "[\n  \"babefcf4-e0f7-11ec-835d-16c4e59c4351\",\n  \"qweqweee-e0f7-11ec-835d-16c4e59c4351\",\n  \"asdffggg-e0f7-11ec-835d-16c4e59c4351\"\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "aca02b87-3dd4-4905-8155-4d4ed0d1abaf",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "reviews"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  \"babefcf4-e0f7-11ec-835d-16c4e59c4351\",\n  \"qweqweee-e0f7-11ec-835d-16c4e59c4351\",\n  \"asdffggg-e0f7-11ec-835d-16c4e59c4351\"\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "true",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8873d34d-071a-433e-9f04-bd61da50a719",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/reviews - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/reviews - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/reviews - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"If the review was deleted (`true`) or not (`false`).\",\"type\":\"boolean\",\"example\":true}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/reviews - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "67e30345-2493-48f3-834f-0b82f81d6323",
          "name": "Create a Review",
          "request": {
            "name": "Create a Review",
            "description": {
              "content": "Creates a single review",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "review"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "56f5d887-74a0-4e8e-a61f-636c3100d273",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "review"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"productId\": \"65444\",\n  \"rating\": 5,\n  \"title\": \"Good Product\",\n  \"text\": \"It is the best product that I have seen\",\n  \"reviewerName\": \"Arturo\",\n  \"shopperId\": \"user@email.com\",\n  \"reviewDateTime\": \"04/19/2022 18:55:58\",\n  \"searchDate\": \"2022-04-19T18:55:58Z\",\n  \"verifiedPurchaser\": false,\n  \"sku\": \"2\",\n  \"approved\": false,\n  \"location\": null,\n  \"locale\": \"en-US\",\n  \"pastReviews\": null\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f912919-16d1-464b-80f2-4301c45d9c3a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/review - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/review - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/review - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"Review ID.\",\"type\":\"string\"},\"productId\":{\"description\":\"Product ID.\",\"type\":\"string\"},\"rating\":{\"description\":\"Customer rating.\",\"type\":\"number\"},\"title\":{\"description\":\"Review's title.\",\"type\":\"string\"},\"text\":{\"description\":\"Review's text.\",\"type\":\"string\"},\"reviewerName\":{\"description\":\"Reviewer name.\",\"type\":\"string\"},\"shopperId\":{\"description\":\"Shopper email.\",\"type\":\"string\"},\"reviewDateTime\":{\"description\":\"Review's date and time.\",\"type\":\"string\"},\"searchDate\":{\"description\":\"Review's search date.\",\"type\":\"string\"},\"verifiedPurchaser\":{\"description\":\"If the reviewer is a verified purchaser (`true`) or not (`false`).\",\"type\":\"boolean\"},\"sku\":{\"description\":\"SKU ID.\",\"type\":[\"string\",\"null\"]},\"approved\":{\"description\":\"If the review was approved (`true`) or not (`false`).\",\"type\":\"boolean\"},\"location\":{\"description\":\"Review's origin location.\",\"type\":[\"string\",\"null\"]},\"locale\":{\"description\":\"Review's locale.\",\"type\":[\"string\",\"null\"]},\"pastReviews\":{\"description\":\"Past reviews of the same product.\",\"type\":[\"string\",\"null\"]}},\"example\":{\"id\":\"5323fdaa-c012-11ec-835d-0ebee58edbb3\",\"productId\":\"65444\",\"rating\":5,\"title\":\"Good Product\",\"text\":\"It is the best product that I have seen\",\"reviewerName\":\"Arturo\",\"shopperId\":\"user@email.com\",\"reviewDateTime\":\"04/19/2022 18:55:58\",\"searchDate\":\"2022-04-19T18:55:58Z\",\"verifiedPurchaser\":false,\"sku\":\"2\",\"approved\":false,\"location\":null,\"locale\":\"en-US\",\"pastReviews\":null}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/review - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.myvtex.com/reviews-and-ratings/api",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "df739322-be36-4b98-a37b-df65d38d71fe",
    "name": "Reviews and Ratings API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "\r\nReviews & Ratings is a [VTEX IO native solution](https://developers.vtex.com/vtex-developer-docs/docs/vtex-reviews-and-ratings) that allows shoppers to submit reviews and ratings for products, as well as see them while navigating the store.\r\n\r\n## Rating\r\n\r\n- [Get Product Rating](https://developers.vtex.com/vtex-rest-api/reference/getproductrating)\r\n\r\n## Review\r\n\r\n- [Get Review by Review ID](https://developers.vtex.com/vtex-rest-api/reference/getreviewbyreviewid)\r\n- [Delete Review](https://developers.vtex.com/vtex-rest-api/reference/deletereview)\r\n- [Update a Review](https://developers.vtex.com/vtex-rest-api/reference/editreview)\r\n- [Get a list of Reviews](https://developers.vtex.com/vtex-rest-api/reference/getalistofreviews)\r\n- [Create Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/savemultiplereviews)\r\n- [Delete Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/deletemultiplereviews)\r\n- [Create a Review](https://developers.vtex.com/vtex-rest-api/reference/savereview)",
      "type": "text/plain"
    }
  }
}