{
  "_": {
    "postman_id": "a3aabd50-72b3-4edb-b796-4f54d15e7d1b"
  },
  "item": [
    {
      "id": "bf4a774e-6aec-48b1-b95e-982ac7000eec",
      "name": "Profiles",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "02b950c1-38a9-47a5-abd0-bc07f2fca43b",
          "name": "Create client profile",
          "request": {
            "name": "Create client profile",
            "description": {
              "content": "Creates new client profile.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> The `id` field returned by this request is the `profileId` used to retrieve information on a specific profile later.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "This parameter sets the the Time To Live (TTL), in days, of the specific document being created or updated with this request. After this period of time from the moment of the request, the document is deleted. By sending this parameter you override the TTL set for the schema.\n\r\n\r> Currently, the available default document schemas have no TTL. This means that documents are stored indefinitely, unless a TTL is sent when creating or updating.",
                    "type": "text/plain"
                  },
                  "key": "ttl",
                  "value": "365"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"document\": \"12345678900\",\n  \"documentType\": \"CPF\",\n  \"birthDate\": \"1925-11-17\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "652e51a3-76b7-4dbb-a38e-3a4813dc846d",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "ttl",
                      "value": "365"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"document\": \"12345678900\",\n  \"documentType\": \"CPF\",\n  \"birthDate\": \"1925-11-17\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"c2cbebba-214e-40b2-b68f-98f862e755d5\",\n  \"meta\": {\n    \"version\": \"27112371-a71b-45d6-b3bc-93436a3a0b4f\",\n    \"author\": \"82a2b53d-39be-4f49-bb7c-8971b58cb7dc\",\n    \"creationDate\": \"2022-01-05T15:41:37.5009471+00:00\",\n    \"lastUpdateDate\": \"2022-01-05T15:41:37.5009471+00:00\"\n  },\n  \"document\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"birthDate\": \"1925-11-17\",\n    \"document\": \"12345678911\",\n    \"documentType\": \"CPF\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c5e62ed-7faa-4345-be00-4565aba8b868",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/storage/profile-system/profiles - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/storage/profile-system/profiles - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/storage/profile-system/profiles - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/storage/profile-system/profiles - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "27955baa-3f8f-4ec0-8cbf-f7547d1b60ad",
          "name": "Get profile",
          "request": {
            "name": "Get profile",
            "description": {
              "content": "Retrieves the information of a specific client, by its `profileId`.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> For security and privacy reasons, this request returns masked profile data. For unmasked information, see Get unmasked profile.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "681e8970-4404-4c57-b42f-88529a73b068",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"70caf394-8534-447e-a0ca-1803c669c771\",\n    \"meta\": {\n      \"version\": \"abc\",\n      \"author\": \"e40e0b6d-0605-4fa6-8176-1d69fbaf0818\",\n      \"creationDate\": \"13/12/2021T00:00:00Z\",\n      \"lastUpdate\": \"13/12/2021T00:00:00Z\"\n    },\n    \"document\": {\n      \"firstName\": \"J***\",\n      \"lastName\": \"D**\",\n      \"email\": \"j***.d**@e******.c**\",\n      \"birthDate\": \"1925-11-17\",\n      \"document\": \"1**********\",\n      \"documentType\": \"CPF\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d84f477-2bcf-4b10-ab65-7335a5bd97e3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a6c4b27e-4d20-4b9f-bf6f-caf18607b897",
          "name": "Updates client profile",
          "request": {
            "name": "Updates client profile",
            "description": {
              "content": "Updates one or more fields of an existing client profile.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "This parameter sets the the Time To Live (TTL), in days, of the specific document being created or updated with this request. After this period of time from the moment of the request, the document is deleted. By sending this parameter you override the TTL set for the schema.\n\r\n\r> Currently, the available default document schemas have no TTL. This means that documents are stored indefinitely, unless a TTL is sent when creating or updating.",
                    "type": "text/plain"
                  },
                  "key": "ttl",
                  "value": "365"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"birthDate\": \"1925-11-17\",\n  \"document\": \"12345678900\",\n  \"documentType\": \"CPF\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2c71e9e3-756b-4885-a6a8-925b90451343",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    },
                    {
                      "key": "ttl",
                      "value": "365"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"birthDate\": \"1925-11-17\",\n  \"document\": \"12345678900\",\n  \"documentType\": \"CPF\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"70caf394-8534-447e-a0ca-1803c669c771\",\n  \"document\": {\n    \"firstName\": \"João\",\n    \"lastName\": \"Gomes\",\n    \"email\": \"john.doe@gmail.com\",\n    \"birthDate\": \"17/11/1992\",\n    \"document\": \"12345678911\",\n    \"documentType\": \"CPF\"\n  },\n  \"meta\": {\n    \"version\": \"bb996089-b77c-4bf3-be35-b99b6d91f91c\",\n    \"author\": \"e40e0b6d-0605-4fa6-8176-1d69fbaf0818\",\n    \"creationDate\": \"13/12/2021T00:00:00Z\",\n    \"lastUpdate\": \"15/12/2021T00:00:00Z\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "48b03373-a9a7-440c-88b5-3c304c683f0c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cab016f4-0d12-42ba-b191-81f8e61e293d",
          "name": "Delete client profile",
          "request": {
            "name": "Delete client profile",
            "description": {
              "content": "Deletes a client profile by `profileId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "470cb4cb-1219-4750-bf7d-092570f7503c",
              "name": "No content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c29bd4f5-6293-4a15-a09a-56881bdebd75",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9687cb4f-e661-4062-84ef-31bf2f933eaf",
          "name": "Get unmasked profile",
          "request": {
            "name": "Get unmasked profile",
            "description": {
              "content": "Retrieves unmasked information of a specific client, by its `profileId`.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1dd05446-3b7d-486b-bcbe-45e7aa17ee29",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    },
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"70caf394-8534-447e-a0ca-1803c669c771\",\n    \"document\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"birthDate\": \"1925-11-17\",\n      \"document\": \"12345678911\",\n      \"documentType\": \"CPF\"\n    },\n    \"meta\": {\n      \"version\": \"abc\",\n      \"author\": \"e40e0b6d-0605-4fa6-8176-1d69fbaf0818\",\n      \"creationDate\": \"13/12/2021T00:00:00Z\",\n      \"lastUpdate\": \"13/12/2021T00:00:00Z\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5940145-4839-4a90-a56c-9c54977fbe3e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c0281593-29d8-4a24-b059-5b44f62c513b",
          "name": "Get profile by version",
          "request": {
            "name": "Get profile by version",
            "description": {
              "content": "Retrieves the information of a specific version of a client profile.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> For security and privacy reasons, this request returns masked profile data. For unmasked information, see Get unmasked profile by version.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "versions",
                ":profileVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileVersionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1d1e58b6-402a-4444-921d-801bdc45b819",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "versions",
                    ":profileVersionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileVersionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"70caf394-8534-447e-a0ca-1803c669c771\",\n    \"document\": {\n      \"firstName\": \"J***\",\n      \"lastName\": \"G****\",\n      \"email\": \"j***********\",\n      \"birthDate\": \"1925-11-17\",\n      \"document\": \"1********\",\n      \"documentType\": \"CPF\"\n    },\n    \"meta\": {\n      \"version\": \"bb996089-b77c-4bf3-be35-b99b6d91f91c\",\n      \"author\": \"e40e0b6d-0605-4fa6-8176-1d69fbaf0818\",\n      \"creationDate\": \"13/12/2021T00:00:00Z\",\n      \"lastUpdate\": \"15/12/2021T00:00:00Z\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4c6757d-6cfd-4e12-a026-f2c5fd0d5fa3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "63fe3630-70c0-4b7d-ace7-7b2dda638088",
          "name": "Get unmasked profile by version",
          "request": {
            "name": "Get unmasked profile by version",
            "description": {
              "content": "Retrieves unmasked information of a specific version of a client profile.\n\r\n\r> Since your store's profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "versions",
                ":profileVersionId",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileVersionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ea24b558-8d7b-4fd1-af8a-54a50b1cbfef",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "versions",
                    ":profileVersionId",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileVersionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"70caf394-8534-447e-a0ca-1803c669c771\",\n    \"document\": {\n      \"firstName\": \"João\",\n      \"lastName\": \"Gomes\",\n      \"email\": \"john.doe@example.com\",\n      \"birthDate\": \"1925-11-17\",\n      \"document\": \"12345678911\",\n      \"documentType\": \"CPF\"\n    },\n    \"meta\": {\n      \"version\": \"bb996089-b77c-4bf3-be35-b99b6d91f91c\",\n      \"author\": \"e40e0b6d-0605-4fa6-8176-1d69fbaf0818\",\n      \"creationDate\": \"13/12/2021T00:00:00Z\",\n      \"lastUpdate\": \"15/12/2021T00:00:00Z\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03e6b339-d526-4f3d-b2b9-7c920ea28fef",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/versions/:profileVersionId/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "84b639a0-2dee-484a-9cac-f5d4b39fce9c",
      "name": "Addresses",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e8cee69d-69c0-4ec7-891e-c71f6425234b",
          "name": "Create client address",
          "request": {
            "name": "Create client address",
            "description": {
              "content": "Creates new address for a given client profile.\n\r\n\r> The `id` field returned by this request is the `addressId` used to retrieve or update information of a specific address later.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"postalCode\": \"20200-000\",\n  \"countryName\": \"Brasil\",\n  \"administrativeAreaLevel1\": \"RJ\",\n  \"locality\": \"Locality\",\n  \"localityAreaLevel1\": \"Locality area\",\n  \"route\": \"51\",\n  \"streetNumber\": \"999\",\n  \"countryCode\": \"BR\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f186870c-48a2-444a-b39f-df7224d07fb6",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"postalCode\": \"20200-000\",\n  \"countryName\": \"Brasil\",\n  \"administrativeAreaLevel1\": \"RJ\",\n  \"locality\": \"Locality\",\n  \"localityAreaLevel1\": \"Locality area\",\n  \"route\": \"51\",\n  \"streetNumber\": \"999\",\n  \"countryCode\": \"BR\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"20200-000\",\n    \"countryName\": \"Brasil\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"Locality\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"51\",\n    \"streetNumber\": \"999\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ad5c363-901d-4b05-88ff-45d6eb396cf7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/addresses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/addresses - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/addresses - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/addresses - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d7be201-31ed-4d4c-90c1-4b6af85982d8",
          "name": "Get client addresses",
          "request": {
            "name": "Get client addresses",
            "description": {
              "content": "Retrieves information of all addresses of a given client, by its `profileId`.\n\r\n\r> For security and privacy reasons, this request returns masked address data. For unmasked information, see Get unmasked client addresses.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b73ba7fc-4e1c-4fc7-9ecd-649b5d8c5605",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n    \"document\": {\n      \"postalCode\": \"2****-0**\",\n      \"countryName\": \"B*****\",\n      \"countryCode\": \"BR\",\n      \"administrativeAreaLevel1\": \"RJ\",\n      \"locality\": \"L*******\",\n      \"localityAreaLevel1\": \"locality area\",\n      \"route\": \"51\",\n      \"streetNumber\": \"999\",\n      \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n    },\n    \"meta\": {\n      \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n      \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n      \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n      \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e058822-4b52-45d8-aa96-78ef4aff185d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1a9705ee-8f32-4430-9865-789f245db806",
          "name": "Get unmasked client addresses",
          "request": {
            "name": "Get unmasked client addresses",
            "description": {
              "content": "Retrieves unmasked information of all addresses of a given client, by its `profileId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f05ea39-6a1f-4a9b-851b-e581df02c4e0",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n    \"document\": {\n      \"postalCode\": \"20200-000\",\n      \"countryName\": \"Brasil\",\n      \"countryCode\": \"BR\",\n      \"administrativeAreaLevel1\": \"RJ\",\n      \"locality\": \"Locality\",\n      \"localityAreaLevel1\": \"locality area\",\n      \"route\": \"51\",\n      \"streetNumber\": \"999\",\n      \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n    },\n    \"meta\": {\n      \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n      \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n      \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n      \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "698cb6fd-157f-4edc-ad4c-4ca59e88b23e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"additionalProperties\":true}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "95a44f17-366d-4a72-b8d5-2849d492048e",
          "name": "Get address",
          "request": {
            "name": "Get address",
            "description": {
              "content": "Retrieves information of a specific address of a given client, by its respectives `adderssId` and `profileId`.\n\r\n\r> For security and privacy reasons, this request returns masked address data. For unmasked information, see Get unmasked address.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3ac017b7-1d54-451d-a185-0ee85506bfd4",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"2****-0**\",\n    \"countryName\": \"B*****\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"L*******\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"51\",\n    \"streetNumber\": \"999\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3521a9ff-328c-4506-b361-227a5c1e3f3f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ef0a4436-6bb7-4ceb-8566-45ec55125ad2",
          "name": "Update client address",
          "request": {
            "name": "Update client address",
            "description": {
              "content": "Updates one or more fields of an existing address for a given client profile.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"postalCode\": \"20200-000\",\n  \"countryName\": \"Brasil\",\n  \"countryCode\": \"BR\",\n  \"administrativeAreaLevel1\": \"RJ\",\n  \"locality\": \"Locality\",\n  \"localityAreaLevel1\": \"Locality area\",\n  \"route\": \"Brasil\",\n  \"streetNumber\": \"Brasil\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "da1dfe5e-c6a3-4135-9761-3a21a7f84849",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"postalCode\": \"20200-000\",\n  \"countryName\": \"Brasil\",\n  \"countryCode\": \"BR\",\n  \"administrativeAreaLevel1\": \"RJ\",\n  \"locality\": \"Locality\",\n  \"localityAreaLevel1\": \"Locality area\",\n  \"route\": \"Brasil\",\n  \"streetNumber\": \"Brasil\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"20200-000\",\n    \"countryName\": \"Brasil\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"Locality\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"34\",\n    \"streetNumber\": \"333\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"86dfae79-1d23-43f2-a643-2fc8f1839461\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T21:08:02.9364099+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "060fd2e3-27d7-430c-b705-db354c1b959f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "82d44d53-4308-4ee1-985e-e34075c5ddfd",
          "name": "Delete address",
          "request": {
            "name": "Delete address",
            "description": {
              "content": "Deletes a client's address by `profileId` and `addressId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "29aea626-e585-419b-ac46-dd84afe8c1f9",
              "name": "No content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cacd5102-a4d4-47b9-a363-95267dd1db65",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "efe2f243-7694-4e0f-b444-07461a7a2399",
          "name": "Get unmasked address",
          "request": {
            "name": "Get unmasked address",
            "description": {
              "content": "Retrieves unmasked information of a specific address of a given client, by its respectives `adderssId` and `profileId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1d99523-9500-4af4-8703-b78b75cc81c1",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    },
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"20200-000\",\n    \"countryName\": \"Brasil\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"Locality\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"51\",\n    \"streetNumber\": \"999\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8fe20d8c-db33-4a55-bf84-5ccea497f22c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b2e0479a-2fd6-4a77-bbf8-2eea44634bd9",
          "name": "Get address by version",
          "request": {
            "name": "Get address by version",
            "description": {
              "content": "Retrieves information of a specific version address of a given client.\n\r\n\r> For security and privacy reasons, this request returns masked address data by version. For unmasked information, see Get unmasked address by version.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId",
                "versions",
                ":addressVersionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "86dfae79-1d23-43f2-a643-2fc8f1839461",
                  "key": "addressVersionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d498902c-9075-497d-83a9-13fcf1595ca8",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId",
                    "versions",
                    ":addressVersionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    },
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "86dfae79-1d23-43f2-a643-2fc8f1839461",
                      "key": "addressVersionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"2****-0**\",\n    \"countryName\": \"B*****\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"L*******\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"51\",\n    \"streetNumber\": \"999\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54480dc4-eec5-470e-84ed-0386d1647455",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ccdad256-1d86-4387-9a18-aa44c7e39fe3",
          "name": "Get unmasked address by version",
          "request": {
            "name": "Get unmasked address by version",
            "description": {
              "content": "Retrieves unmasked information of a specific address version of a given client.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "addresses",
                ":addressId",
                "versions",
                ":addressVersionId",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                  "key": "addressId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "86dfae79-1d23-43f2-a643-2fc8f1839461",
                  "key": "addressVersionId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0458fcb0-f471-4724-aac6-43eebb3e6ba1",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "addresses",
                    ":addressId",
                    "versions",
                    ":addressVersionId",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    },
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "bf82180e-cf9e-4089-9af6-ae1518555992",
                      "key": "addressId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "86dfae79-1d23-43f2-a643-2fc8f1839461",
                      "key": "addressVersionId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n  \"document\": {\n    \"postalCode\": \"20200-000\",\n    \"countryName\": \"Brasil\",\n    \"countryCode\": \"BR\",\n    \"administrativeAreaLevel1\": \"RJ\",\n    \"locality\": \"Locality\",\n    \"localityAreaLevel1\": \"locality area\",\n    \"route\": \"51\",\n    \"streetNumber\": \"999\",\n    \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n  },\n  \"meta\": {\n    \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n    \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n    \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n    \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee69c25b-7d85-45ba-af23-12518f782624",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/addresses/:addressId/versions/:addressVersionId/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4c9784c8-7194-4b4c-92b0-4039aaee47aa",
      "name": "Prospects",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1146b66a-8b6e-46b4-a2f1-a5abea127a4a",
          "name": "Create prospect",
          "request": {
            "name": "Create prospect",
            "description": {
              "content": "Creates new prospect.\n\r\n\r> The `id` field returned by this request is the `prospectId` used to retrieve information on a specific prospect later.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "prospects"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b5adf78e-5571-492c-80ba-427d735337fa",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "prospects"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f017ee2c-f5fb-4001-983b-a6fe33fd66d1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/storage/profile-system/prospects - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/storage/profile-system/prospects - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/storage/profile-system/prospects - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/storage/profile-system/prospects - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d1a4cdaf-6648-463b-8013-1983c75d130f",
          "name": "Get prospect",
          "request": {
            "name": "Get prospect",
            "description": {
              "content": "Retrieves the information of a specific prospect, by its `prospectId`.\n\r\n\r> For security and privacy reasons, this request returns masked prospect data. For unmasked information, see Get unmasked prospect.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "prospects",
                ":prospectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "51clk394-8534-447e-a0ca-1803p669c987",
                  "key": "prospectId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "03ba0037-97cf-4bee-a33f-f661bde14872",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "prospects",
                    ":prospectId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "51clk394-8534-447e-a0ca-1803p669c987",
                      "key": "prospectId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {}\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "58a518d8-2548-4216-afc2-4ed00fb1f1ca",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "90d7e53b-3c0d-4295-aff1-61ec1004fd82",
          "name": "Update prospect",
          "request": {
            "name": "Update prospect",
            "description": {
              "content": "Updates one or more fields of an existing prospect.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "prospects",
                ":prospectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "51clk394-8534-447e-a0ca-1803p669c987",
                  "key": "prospectId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91fe8afe-682d-4bdf-9b82-381af01b5756",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "prospects",
                    ":prospectId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "51clk394-8534-447e-a0ca-1803p669c987",
                      "key": "prospectId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a33f3bb5-6874-41c0-98bd-1c0bd98f9121",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/storage/profile-system/prospects/:prospectId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/storage/profile-system/prospects/:prospectId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/storage/profile-system/prospects/:prospectId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/storage/profile-system/prospects/:prospectId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "42467287-06cb-4087-a1b2-593844be57fb",
          "name": "Delete prospect",
          "request": {
            "name": "Delete prospect",
            "description": {
              "content": "Deletes a prospect by `prospectId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "prospects",
                ":prospectId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "51clk394-8534-447e-a0ca-1803p669c987",
                  "key": "prospectId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c91e11ba-6a4c-4a3f-97b0-748b3f27d830",
              "name": "No content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "prospects",
                    ":prospectId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "51clk394-8534-447e-a0ca-1803p669c987",
                      "key": "prospectId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56abc047-6352-4fbf-b068-9bf08b8068db",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/storage/profile-system/prospects/:prospectId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/storage/profile-system/prospects/:prospectId - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a300a771-65f1-495e-8f74-73709a37089c",
          "name": "Get unmasked prospect",
          "request": {
            "name": "Get unmasked prospect",
            "description": {
              "content": "Retrieves unmasked information of a specific prospect, by its `prospectId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "prospects",
                ":prospectId",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Reason for requesting unmasked data.",
                    "type": "text/plain"
                  },
                  "key": "reason",
                  "value": "data-validation"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "51clk394-8534-447e-a0ca-1803p669c987",
                  "key": "prospectId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2e724824-b15f-482a-a56d-5632060b16a9",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "prospects",
                    ":prospectId",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "reason",
                      "value": "data-validation"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "51clk394-8534-447e-a0ca-1803p669c987",
                      "key": "prospectId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {}\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "83bdc0d5-e9ec-45ad-ad00-952d34ce8c7c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/prospects/:prospectId/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "8dd79183-831c-4555-9094-5e9cd22069db",
      "name": "Purchase information",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2e119191-586d-4943-bacd-a2f52d32c670",
          "name": "Create purchase information",
          "request": {
            "name": "Create purchase information",
            "description": {
              "content": "Creates purchase information for a given client profile.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "purchase-info"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "128b268e-5f77-4623-b349-5ba74da14494",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "purchase-info"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23a11c34-7503-40f7-9ec6-28203bb0a4ba",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/purchase-info - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/purchase-info - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/purchase-info - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/storage/profile-system/profiles/:profileId/purchase-info - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6aecde32-5820-45ca-a643-91475641d562",
          "name": "Get purchase information",
          "request": {
            "name": "Get purchase information",
            "description": {
              "content": "Retrieves purchase information of a given client, by its `profileId`.\n\r\n\r> For security and privacy reasons, this request returns masked data. For unmasked information, see Get unmasked purchase information.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "purchase-info"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b7f46d2d-5ade-4d86-a1f1-4713294a9893",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "purchase-info"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {}\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "89280889-c43b-49af-a35e-fc3c4e687a28",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "854fef9f-0a64-4a00-a143-dd2021a07fa0",
          "name": "Update purchase information",
          "request": {
            "name": "Update purchase information",
            "description": {
              "content": "Updates one or more fields of existing purchase information for a given client profile.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "purchase-info"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "66ec8eba-3f52-49e2-85d2-cb20cd3ed01a",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "purchase-info"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "748d3866-5788-40b4-a8fa-ffbbcba37ca6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/purchase-info - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/purchase-info - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/purchase-info - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/storage/profile-system/profiles/:profileId/purchase-info - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f118e1f8-0343-49ca-a572-da6ca5b11ee0",
          "name": "Delete purchase information",
          "request": {
            "name": "Delete purchase information",
            "description": {
              "content": "Deletes purchase informaiton by `profileId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "purchase-info"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`.",
                    "type": "text/plain"
                  },
                  "key": "alternativeKey",
                  "value": "email"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "bb2d0662-dd14-41e3-91c8-9a1643c441d6",
              "name": "No content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "purchase-info"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "alternativeKey",
                      "value": "email"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef1c7c4-3268-442a-8da6-44b66710176a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId/purchase-info - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/storage/profile-system/profiles/:profileId/purchase-info - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6a050732-189f-41ba-aeec-e2c076f35ddf",
          "name": "Get unmasked purchase information",
          "request": {
            "name": "Get unmasked purchase information",
            "description": {
              "content": "Retrieves unmasked purchase information of a given client, by its `profileId`.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                ":profileId",
                "purchase-info",
                "unmask"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "70caf394-8534-447e-a0ca-1803c669c771",
                  "key": "profileId"
                },
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f67e5227-5e88-469a-9904-7f2b265540d3",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    ":profileId",
                    "purchase-info",
                    "unmask"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "70caf394-8534-447e-a0ca-1803c669c771",
                      "key": "profileId"
                    },
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"bf82180e-cf9e-4089-9af6-ae1518555992\",\n    \"document\": {\n      \"postalCode\": \"20200-000\",\n      \"countryName\": \"Brasil\",\n      \"countryCode\": \"BR\",\n      \"administrativeAreaLevel1\": \"RJ\",\n      \"locality\": \"Locality\",\n      \"localityAreaLevel1\": \"locality area\",\n      \"route\": \"51\",\n      \"streetNumber\": \"999\",\n      \"profileId\": \"70caf394-8534-447e-a0ca-1803c669c771\"\n    },\n    \"meta\": {\n      \"version\": \"c9c44895-4589-4d0d-a28d-e0e656ca1926\",\n      \"author\": \"80aa79a3-aa89-4912-a20e-8ef69af19a6c\",\n      \"creationDate\": \"2022-01-18T18:51:34.1293829+00:00\",\n      \"lastUpdateDate\": \"2022-01-18T18:51:34.1293829+00:00\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57b57ac6-f307-4c9d-8977-6ef5869c2047",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info/unmask - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info/unmask - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info/unmask - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/storage/profile-system/profiles/:profileId/purchase-info/unmask - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "79491bc9-c253-4b4b-880e-4b79ec46de03",
      "name": "Schemas",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "54a85f8c-41b2-4cc0-97e1-b4bc4e905ac9",
          "name": "Create or update profile schema",
          "request": {
            "name": "Create or update profile schema",
            "description": {
              "content": "Creates or updates profile schema.\n\r\n\r> Each account has one profile schema. Updating it with this request will substitute the previous version.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "storage",
                "profile-system",
                "profiles",
                "schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Client profile schema\",\n  \"type\": \"object\",\n  \"description\": \"This schema describes a b2c customer profile.\",\n  \"required\": [\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"document\",\n    \"documentType\"\n  ],\n  \"properties\": {\n    \"{fieldName}\": {\n      \"type\": \"string\",\n      \"sensitive\": true,\n      \"pii\": true,\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"documentTTL\": 1825,\n  \"version\": 1,\n  \"v-indexed\": [\n    \"email\",\n    \"document\"\n  ],\n  \"v-unique\": [\n    \"email\",\n    \"document\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0b8b4450-bd31-4e6e-b214-f7ad8526f6ef",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "storage",
                    "profile-system",
                    "profiles",
                    "schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Client profile schema\",\n  \"type\": \"object\",\n  \"description\": \"This schema describes a b2c customer profile.\",\n  \"required\": [\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"document\",\n    \"documentType\"\n  ],\n  \"properties\": {\n    \"{fieldName}\": {\n      \"type\": \"string\",\n      \"sensitive\": true,\n      \"pii\": true,\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"documentTTL\": 1825,\n  \"version\": 1,\n  \"v-indexed\": [\n    \"email\",\n    \"document\"\n  ],\n  \"v-unique\": [\n    \"email\",\n    \"document\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c990a09-d493-4973-a423-2a532b6d059e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/storage/profile-system/profiles/schema - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/storage/profile-system/profiles/schema - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/storage/profile-system/profiles/schema - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/storage/profile-system/profiles/schema - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "description": {
        "content": "Environment to use. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{environment}",
      "key": "environment"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "a3aabd50-72b3-4edb-b796-4f54d15e7d1b",
    "name": "Profile System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Create shopper profiles and manage their information.",
      "type": "text/plain"
    }
  }
}