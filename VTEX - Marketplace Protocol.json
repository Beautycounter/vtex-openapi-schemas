{
	"openapi": "3.0.0",
	"info": {
		"title": "Marketplace Protocol",
		"description": "The _Marketplace Protocol_ is a set of API requests and definitions to help you integrate external sellers into a VTEX marketplace as well as external marketplaces into VTEX sellers.",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "/",
			"description": ""
		}
	],
	"paths": {
		"/{fulfillmentEndpoint}/pvt/orderForms/simulation": {
			"post": {
				"tags": [
					"External Seller"
				],
				"summary": "Fulfillment simulation",
				"description": "This endpoint may be called upon by VTEX for fulfillment simulation in the external seller different contexts. See examples below.\n\nWhen a [Notification request](https://developers.vtex.com/vtex-rest-api/reference/notification) returns a response with status 200, it means that the SKU already exists in the marketplace. Whenever this happens, the marketplace will call the seller to get two updated information about the SKU: Price and Inventory.\n\nThe seller needs to have an endpoint implemented in order to receive this call and send a response containing the requested information to the marketplace. We call it the Fulfillment Simulation endpoint.\n\nIf the seller wishes to include other parameters in this call (like account name, or sales channel ID), this should be done within their {fulfillmentEndpoint}. This path is then inserted in the marketplace's VTEX admin when [configuring a seller](https://help.vtex.com/en/tutorial/configurando-seller--tutorials_392). \n\nThe marketplace will send an object containing an array of items. The seller must use this list to get the updated information about the referred SKUs and send them back to the marketplace, following the response format explained in the API Reference.",
				"operationId": "fulfillment-simulation",
				"parameters": [                    
					{
						"name": "fulfillmentEndpoint",
						"in": "path",
						"description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceexample.externalseller.com"
						}
					},
                    {
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "required": [
                                    "postalCode"
                                ],
                                "type": "object",
                                "properties": {
                                    "postalCode": {
                                        "type": "string",
                                        "description": "Delivery address postal code. This field is mandatory for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                        "example": "12345678"
                                    },
                                    "geoCoordinates" : {
                                        "type": "array",
                                        "description": "Geographic coordinates of the delivery address. This may be used instead of the postalCode, in case the marketplace is configured to accept geolocation. Example of value: `[-22.9443504,-43.1825635]`.",
                                        "items": {
                                            "type": "string",
                                            "example": "00.00000000"
                                        }
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "ISO 3-digit code of the country where the delivery address is located.  This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                        "example": "USA"
                                    },
                                    "items": {
                                        "type": "array",
                                        "description": "Array containing the cart items.",
                                        "items": {
                                            "$ref": "#/components/schemas/fulfillmentItem"
                                        }
                                    }
                                }
                            }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {                                 
                                            "country": "BRA",
                                            "items": [
                                                    {
                                                    "attachmentOfferings": [{
                                                        "name": "Customization",
                                                        "required": true,
                                                        "schema": {
                                                        "Name": {
                                                            "maximumNumberOfCharacters": 20,
                                                            "domain": []
                                                        },
                                                        "Number": {
                                                            "maximumNumberOfCharacters": 20,
                                                            "domain": []
                                                        }
                                                        }
                                                    }],
                                                    "id": "2000037",
                                                    "listPrice": 67203,
                                                    "measurementUnit": "un",
                                                    "merchantName": "mySeller1",
                                                    "offerings":[
                                                    {
                                                        "type": "Warranty",
                                                        "id": "5",
                                                        "name": "1 year warranty",
                                                        "price": 10000
                                                    }
                                                    ],
                                                    "price": 67203,
                                                    "priceTags": [],
                                                    "priceValidUntil": null,
                                                    "quantity": 1,
                                                    "requestIndex": 0,
                                                    "seller": "1",
                                                    "unitMultiplier": 1
                                                }
                                            ],
                                            "logisticsInfo": [
                                                {
                                                    "itemIndex": 0,
                                                    "quantity": 1,
                                                    "shipsTo": [
                                                        "BRA"
                                                    ],
                                                    "slas": [
                                                        {
                                                        "id": "Regular",
                                                        "deliveryChannel": "delivery",
                                                        "name": "Regular Delivery",
                                                        "price": 846,
                                                        "shippingEstimate": "19bd"
                                                        },
                                                        {
                                                        "id": "Curbside pickup",
                                                        "deliveryChannel": "pickup-in-point",
                                                        "name": "Curbside pickup",
                                                        "shippingEstimate": "0bd",
                                                        "price": 0,
                                                        "availableDeliveryWindows": [
                                                            {
                                                            "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                            "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                            "price": 0
                                                            }
                                                        ],
                                                        "pickupStoreInfo": {
                                                            "isPickupStore": true,
                                                            "friendlyName": "Santa Felicidade",
                                                            "address": {
                                                                "addressType": "pickup",
                                                                "receiverName": null,
                                                                "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                "postalCode": "82320-040",
                                                                "city": "Curitiba",
                                                                "state": "PR",
                                                                "country": "BRA",
                                                                "street": "Rua Domingos Strapasson",
                                                                "number": "100",
                                                                "neighborhood": "Santa Felicidade",
                                                                "complement": "Loja 10",
                                                                "reference": null,
                                                                "geoCoordinates": [
                                                                    -49.334934,
                                                                    -25.401705
                                                                ]
                                                            },
                                                            "additionalInfo": ""
                                                        }
                                                        }
                                                    ],
                                                    "stockBalance": 199,
                                                    "deliveryChannels": [
                                                        {
                                                        "id": "delivery",
                                                        "stockBalance": 179
                                                        },
                                                        {
                                                        "id": "pickup-in-point",
                                                        "stockBalance": 20
                                                        }
                                                    ]
                                                }
                                            ],
                                            "postalCode": "80250000"                                         
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/{fulfillmentEndpoint}/pvt/orders": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Order placement",
				"description": "This request is sent by VTEX to the external seller once the customer finishes their checkout, to let the seller know there is a newly placed order. It does that by calling the **Order Placement** endpoint, which needs to be implemented by the seller.\n\nThe marketplace will send information such as the items contained in the cart, the client’s profile data, the shipping data, and the payment data. With all that, the seller will be able to create the order in their own store.",
				"operationId": "order-placement",
				"parameters": [                    
					{
						"name": "fulfillmentEndpoint",
						"in": "path",
						"description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "https://marketplaceexample.externalseller.com"
						}
					},                  
					{
						"name": "content-length",
						"in": "header",
						"description": "Length of the request body.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "2183"
						}
					},                  
					{
						"name": "authorization",
						"in": "header",
						"description": "Indicates authorization.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "VTEX key=\"appKey\" token=\"appToken\""
						}
					},                      
					{
						"name": "x-vtex-api-appkey",
						"in": "header",
						"description": "VTEX API app key.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "appKey"
						}
					},                    
					{
						"name": "x-vtex-api-apptoken",
						"in": "header",
						"description": "VTEX API app token.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "appToken"
						}
					},              
					{
						"name": "accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},                    
					{
						"name": "accept-enconding",
						"in": "header",
						"description": "Indicates the types of response enconding the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "gzip, deflate"
						}
					},                    
					{
						"name": "x-vtex-operation-id",
						"in": "header",
						"description": "VTEX operation ID.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "8032114b-63e9-4e64-b30c-f7afcf676d7a"
						}
					},                    
					{
						"name": "x-forwarded-proto",
						"in": "header",
						"description": "Determines the protocol used by the client in the request.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "https"
						}
					},                    
					{
						"name": "x-forwarded-for",
						"in": "header",
						"description": "Identifies the originating IP address of the HTTP client.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "179.35.30.186, 130.176.35.67, 172.16.247.49"
						}
					},                   
					{
						"name": "x-vtex-cache-client-bypass",
						"in": "header",
						"description": "VTEX cache client bypass.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "content-type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "traceparent",
						"in": "header",
						"description": "Identifies the incoming request in a tracing system.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "00-083c0ca18bc8d94183f333809a70cd64-bf5e9a641e230540-00"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/orderPlacement"
							},
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "marketplaceOrderId": "959311095",
                                            "marketplaceServicesEndpoint": "https://marketplaceservicesendpoint/",
                                            "marketplacePaymentValue": 11080,
                                            "items": [
                                               {
                                                  "id": "2002495",
                                                  "quantity": 1,
                                                  "Seller": "1",
                                                  "commission": 0,
                                                  "freightCommission": 0,
                                                  "price": 9990,
                                                  "bundleItems": [],
                                                  "itemAttachment": {
                                                     "name": null,
                                                     "content": {}
                                                  },
                                                  "attachments": [],
                                                  "priceTags": [],
                                                  "measurementUnit": null,
                                                  "unitMultiplier": 0,
                                                  "isGift": false
                                               }
                                            ],
                                            "clientProfileData": {
                                               "email": "32172239852@gmail.com.br",
                                               "firstName": "John",
                                               "lastName": "Smith",
                                               "documentType": null,
                                               "document": "3244239851",
                                               "phone": "399271258",
                                               "corporateName": null,
                                               "tradeName": null,
                                               "corporateDocument": null,
                                               "stateInscription": null,
                                               "corporatePhone": null,
                                               "isCorporate": false,
                                               "userProfileId": null
                                            },
                                            "shippingData": {
                                               "address": {
                                                  "addressType": "Residencial",
                                                  "receiverName": "John Smith",
                                                  "addressId": "Home",
                                                  "postalCode": "13476103",
                                                  "city": "Americana",
                                                  "state": "SP",
                                                  "country": "BRA",
                                                  "street": "JOÃO DAMÁZIO GOMES",
                                                  "number": "311",
                                                  "neighborhood": "SÃO JOSÉ",
                                                  "complement": null,
                                                  "reference": "Bairro Praia Azul / Posto de Saúde 17",
                                                  "geoCoordinates": []
                                               },
                                               "logisticsInfo": [
                                                  {
                                                     "itemIndex": 0,
                                                     "selectedSla": "Regular",
                                                     "lockTTL": "8d",
                                                     "shippingEstimate": "7d",
                                                     "price": 1090,
                                                     "deliveryWindow": null
                                                  }
                                               ],
                                               "updateStatus": "updated"
                                            },
                                            "openTextField": null,
                                            "marketingData": {
                                               "utmSource": "buscape",
                                               "utmMedium": "",
                                               "utmCampaign": "freeshipping",
                                               "utmiPage": "_",
                                               "utmiPart": "BuscaFullText",
                                               "utmiCampaign": "artscase for iphone 5"
                                            },
                                            "paymentData": null
                                        }
                                        
                                    }
                                }    
                            } 
                        }
                    }
                }
            }
        },
        "/{fulfillmentEndpoint}/pvt/orders/{orderId}/fulfill": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Authorize fulfillment",
				"description": "This request is sent from VTEX to the seller after payment is approved, to notify them that the fulfillment process can start.",
				"operationId": "authorize-fulfillment",
				"parameters": [                    
					{
						"name": "fulfillmentEndpoint",
						"in": "path",
						"description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "https://marketplaceexample.externalseller.com"
						}
					},                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "application/json"
						}
					},
                    {
						"name": "orderId",
						"in": "path",
						"description": "ID of the order being fulfilled",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"default": "1138342255777-01"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "required": [
                                    "marketplaceOrderId"
                                ],
                                "type": "object",
                                "properties": {
                                    "marketplaceOrderId": {
                                        "type": "string",
                                        "description": "Identifies the order. The seller should use this ID to trigger the fulfillment process of the corresponding order.",
                                        "example": "1138342255777-01"
                                    }
                                }
                            }
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "date": "2014-10-06 18:52:00",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "1138342255777-01",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                         }
                                    }
                                }
                            }
                        }
                    }
                }
            }
                                    
        },
        "/{fulfillmentEndpoint}/pvt/orders/{orderId}/cancel": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Marketplace order cancellation",
				"description": "This request may be sent from VTEX to the external seller in case of order cancelation. For that, the seller will need to implement the Marketplace order cancellation endpoint. Whenever this request is received by the seler, the order should be canceled and the fulfillment flow should not proceed.\n\nThe body of the request received by the seller contains only one information: the `marketplaceOrderId`, which identifies the order in the marketplace. The seller should use this ID to trigger the cancellation of the corresponding order.\n\nThe seller should then respond with the same `marketplaceOrderId` and also with the `orderId`, which identifies the order in the seller, the date and time of the notification receipt, and a protocol code that confirms the receipt of the request (which may have the value `null`).",
				"operationId": "mkp-order-cancellation",
				"parameters": [                    
					{
						"name": "fulfillmentEndpoint",
						"in": "path",
						"description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceexample.externalseller.com"
						}
					},                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order being fulfilled",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1138342255777-01"
                    }
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "required": [
                                    "marketplaceOrderId"
                                ],
                                "type": "object",
                                "properties": {
                                    "marketplaceOrderId": {
                                        "type": "string",
                                        "description": "Identifies the order. The seller should use this ID to trigger the cancellation of the corresponding order.",
                                        "example": "1138342255777-01"
                                    }
                                }
                            },
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "date": "2019-05-09 15:31:23",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "1138342255777-01",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                         }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{marketplaceServicesEndpoint}/pvt/orders/{marketplaceOrderId}/invoice": {
			"post": {
				"tags": [
					"External Seller"
				],
				"summary": "Send invoice",
				"description": "This request is sent by the external seller to the VTEX marketplace to send invoice information.\n\nThis can be necessary in a regular order or in the case of a return. The `type` field is used to indicate which of these is the case.",
				"operationId": "send-invoice",
				"parameters": [                    
					{
						"name": "marketplaceServicesEndpoint",
						"in": "path",
						"description": "This is an endpoint sent from VTEX to the external seller in the [Order placement request](https://developers.vtex.com/vtex-rest-api/reference/external-seller#order-placement).",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceservicesendpoint.myvtex.com"
						}
					},
                    {
						"name": "marketplaceOrderId",
						"in": "path",
						"description": "Identifies the order in the marketplace.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "1138342255777-01"
						}
					},
                    {
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "required": [
                                    "type",
                                    "invoiceNumber",
                                    "items"
                                ],
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Indicates the type of the invoice. Use `\"Output\"` for regular orders and `\"Input\"` for returns.",
                                        "example": "Output"
                                    },
                                    "invoiceNumber" : {
                                        "type": "string",
                                        "description": "Invoice number",
                                        "example": "NFe-00002"
                                    },
                                    "courier" : {
                                        "type": "string",
                                        "description": "Courier, if available on invoice.",
                                        "example": "courier-example"
                                    },
                                    "trackingNumber": {
                                        "type": "string",
                                        "description": "Tracking number.",
                                        "example": "12345678abc"
                                    },
                                    "trackingUrl": {
                                        "type": "string",
                                        "description": "Tracking URL.",
                                        "example": "https://courier-example.com/tracking"
                                    },
                                    "items": {
                                        "type": "array",
                                        "description": "Array containing the order items.",
                                        "items": {
                                            "type": "object",
                                            "description": "",
                                            "required": [
                                                "id",
                                                "quantity",
                                                "price"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "SKU ID.",
                                                    "example": "6"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "description": "Quantity of items of the SKU in the cart.",
                                                    "example": 1
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "description": "Price of the item.",
                                                    "example": 5500
                                                }
                                            }
                                        }
                                    },
                                    "issuanceDate": {
                                        "type": "string",
                                        "description": "Issuance date.",
                                        "example": "2021-05-21T10:00:00"
                                    },
                                    "invoiceValue": {
                                        "type": "integer",
                                        "description": "Invoice value.",
                                        "example": 6000
                                    }
                                }
                            }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {
                                            "date":"2021-06-09T15:22:56.7612218-02:00",
                                            "orderId": "1138342255777-01",
                                            "receipt": "527b1ae251264ef1b7a9b597cd8f16b9"
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/{marketplaceServicesEndpoint}/pvt/orders/{marketplaceOrderId}/invoice/{invoiceNumber}": {
            "post": {
				"tags": [
					"External Seller"
				],
				"summary": "Send tracking information",
				"description": "This request is sent by the external seller to the VTEX marketplace to add tracking information to a given order's invoice, in case it is necessary to do so after the invoice has been sent.",
				"operationId": "send-tracking-information",
				"parameters": [                    
					{
						"name": "marketplaceServicesEndpoint",
						"in": "path",
						"description": "This is an endpoint sent from VTEX to the external seller in the [Order placement request](https://developers.vtex.com/vtex-rest-api/reference/external-seller#order-placement).",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceservicesendpoint.myvtex.com"
						}
					},
                    {
						"name": "marketplaceOrderId",
						"in": "path",
						"description": "Identifies the order in the marketplace.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "1138342255777-01"
						}
					},
                    {
						"name": "invoiceNumber",
						"in": "path",
						"description": "Invoice number.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "NFe-00002"
						}
					},
                    {
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "type": "object",
                                "properties": {
                                    "courier" : {
                                        "type": "string",
                                        "description": "Courier.",
                                        "example": "courier-example"
                                    },
                                    "trackingNumber": {
                                        "type": "string",
                                        "description": "Tracking number.",
                                        "example": "12345678abc"
                                    },
                                    "trackingUrl": {
                                        "type": "string",
                                        "description": "Tracking URL.",
                                        "example": "https://courier-example.com/tracking"
                                    },
                                    "dispatchedDate": {
                                        "type": "string",
                                        "description": "Date of order dispatch.",
                                        "example": "2021-06-09"
                                    }
                                }
                            }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {
                                            "date":"2021-06-09T15:22:56.7612218-02:00",
                                            "orderId": "1138342255777-01",
                                            "receipt": "527b1ae251264ef1b7a9b597cd8f16b9"
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/{marketplaceServicesEndpoint}/pvt/orders/{marketplaceOrderId}/invoice/{invoiceNumber}/tracking": {
            "post": {
				"tags": [
					"External Seller"
				],
				"summary": "Update tracking status",
				"description": "This request is sent by the external seller to the VTEX marketplace to update a given order's tracking status.",
				"operationId": "update-tracking-status",
				"parameters": [                    
					{
						"name": "marketplaceServicesEndpoint",
						"in": "path",
						"description": "This is an endpoint sent from VTEX to the external seller in the [Order placement request](https://developers.vtex.com/vtex-rest-api/reference/external-seller#order-placement).",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceservicesendpoint.myvtex.com"
						}
					},
                    {
						"name": "marketplaceOrderId",
						"in": "path",
						"description": "Identifies the order in the marketplace.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "1138342255777-01"
						}
					},
                    {
						"name": "invoiceNumber",
						"in": "path",
						"description": "Invoice number.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "NFe-00002"
						}
					},
                    {
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
                                "type": "object",
                                "required": [
                                    "isDelivered"
                                ],
                                "properties": {
                                    "isDelivered" : {
                                        "type": "boolean",
                                        "description": "Indicates if order has been delivered. `false` if it is in transit.",
                                        "example": true
                                    },
                                    "events": {
                                        "type": "array",
                                        "description": "Array containing information on each tracking event received.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "city": {
                                                    "type": "string",
                                                    "description": "City where the event ocurred.",
                                                    "example": "Rio de Janeiro"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "description": "State where the event ocurred.",
                                                    "example": "Rio de Janeiro"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Description of the event.",
                                                    "example": "Order delivered."
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "description": "Date when event ocurred.",
                                                    "example": "2021-03-16"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {
                                            "date":"2021-06-09T15:22:56.7612218-02:00",
                                            "orderId": "1138342255777-01",
                                            "receipt": "527b1ae251264ef1b7a9b597cd8f16b9"
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/{marketplaceServicesEndpoint}/pvt/orders/{marketplaceOrderId}/cancel": {
            "post": {
				"tags": [
					"External Seller"
				],
				"summary": "Cancel order in marketplace",
				"description": "This request is sent by the external seller to the VTEX marketplace to cancel an order.",
				"operationId": "cancel-order-in-marketplace",
				"parameters": [                    
					{
						"name": "marketplaceServicesEndpoint",
						"in": "path",
						"description": "This is an endpoint sent from VTEX to the external seller in the [Order placement request](https://developers.vtex.com/vtex-rest-api/reference/external-seller#order-placement).",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "marketplaceservicesendpoint.myvtex.com"
						}
					},
                    {
						"name": "marketplaceOrderId",
						"in": "path",
						"description": "Identifies the order in the marketplace.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "1138342255777-01"
						}
					},
                    {
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
                    }
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {
                                            "date":"2021-06-09T15:22:56.7612218-02:00",
                                            "orderId": "1138342255777-01",
                                            "receipt": "527b1ae251264ef1b7a9b597cd8f16b9"
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/portal.vtexcommercestable.com.br/api/mkp-category-mapper/connector/register": {
            "post": {
                "tags": [
                  "External Marketplace"
                ],
                "summary": "VTEX Mapper Registration",
                "description": "Mapping categories guarantees that the VTEX category tree has a correct association with the marketplace’s category tree. \n\nTo perform this association, VTEX made VTEX Mapper available. It is a tool integrated to the VTEX platform that allows the user to relate categories created in VTEX to categories from the marketplace. \n\nThis endpoint allows connectors to register the external marketplace integration in VTEX Mapper. \n\nIn case VTEX Mapper detects an error and the call fails, the connector should check if mandatory information was sent correctly. Ex. are URLs correctly registered in the properties categoryTreeEndPoint and mappingEndPoint?",
                "operationId": "",
                "parameters": [
                    {
                      "name": "Content-Type",
                      "in": "header",
                      "description": "Describes the type of the content being sent.",
                      "required": true,
                      "style": "simple",
                      "schema": {
                        "type": "string",
                        "default": "application/json"
                      }
                    },
                  {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                    "type": "string",
                    "default": "application/json"
                    }
                  }   
                ],
                "requestBody": {
                  "description": "",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VtexMapperRegistration"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "",
                    "headers": {}
                  }
                },
                "deprecated": false
              }    
        },
        "/portal.vtexcommercestable.com.br/api/mkp-category-mapper/categories/marketplace/{id}": {
            "post": {
                "tags": [
                  "External Marketplace"
                ],
                "summary": "Send Category Mapping to VTEX Mapper",
                "description": "Mapping categories guarantees that the VTEX category tree has a correct association with the marketplace’s category tree. \n\nTo perform this association, VTEX made VTEX Mapper available. It is a tool integrated to the VTEX platform that allows the user to relate categories created in VTEX to categories from the marketplace. \n\nThis endpoint allows connectors to send the marketplace's category tree mapped in the integration. \n\nConnectors should send the payload compacted in .gzip format. \n\nCategory tree processing is asynchronous. Once processing is complete, the Mapper will send the connector the confirmation of creation through the endpoint defined in the property connectorEndpoint during the integration’s registration in VTEX Mapper.",
                "operationId": "",
                "parameters": [
                    {
                      "name": "Content-Type",
                      "in": "header",
                      "description": "Describes the type of the content being sent.",
                      "required": true,
                      "style": "simple",
                      "schema": {
                        "type": "string",
                        "default": "application/json"
                      }
                    },
                  {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                    "type": "string",
                    "default": "application/json"
                    }
                  },
                  {
                    "name": "id",
                    "in": "path",
                    "description": "Code identifying returned in the *VTEX Mapper Registration* endpoint.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                      "type": "string",
                      "default": ""
                    }
                  }   
                ],
                "requestBody": {
                  "description": "",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/sendCategoryMappingToVtexMapper"
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "",
                    "headers": {}
                  }
                },
                "deprecated": false
              }                
        },
        "/{accountName}.{environment}.com.br/api/fulfillment/pvt/orders": {
          "post": {
            "tags": ["External Marketplace"],
            "summary": "Place fulfillment order",
            "description": "Creates fulfillment order, meaning that it is an order for the seller's side in a sale made through a marketplace. This order assumes the transaction itself has already happened on the marketplace's side and, therfore, cares only about the fulfillment side.",
            "operationId": "PlaceFulfillmentOrder",
            "parameters": [
              {
                "name": "accountName",
                "in": "path",
                "required": true,
                "description": "Name of the VTEX account. Used as part of the URL.",
                "schema": {
                  "type": "string",
                  "default": "apiexamples"
                }
              },
              {
                "name": "environment",
                "in": "path",
                "required": true,
                "description": "Environment to be used. It is passed as part of the URL.",
                "schema": {
                  "type": "string",
                  "default": "vtexcommercestable"
                }
              },
              {
                "name": "Content-Type",
                "in": "header",
                "description": "Type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              },
              {
                "name": "Accept",
                "in": "header",
                "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              },
              {
                "name": "sc",
                "in": "query",
                "description": "Sales channel.",
                "required": false,
                "style": "form",
                "schema": {
                  "type": "string",
                  "example": "1"
                }
              },
              {
                "name": "affiliateId",
                "in": "query",
                "description": "Id of the marketplace where the order originates.",
                "required": true,
                "style": "form",
                "schema": {
                  "type": "string",
                  "example": "MKP"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "marketplaceOrderId",
                      "marketplaceServicesEndpoint",
                      "marketplacePaymentValue",
                      "items",
                      "clientProfileData",
                      "shippingData"
                    ],
                    "properties": {
                      "marketplaceOrderId": {
                        "type": "string",
                        "description": "ID of the order in the marketplace.",
                        "example": "123456789"
                      },
                      "marketplaceServicesEndpoint": {
                        "type": "string",
                        "description": "Endpoint provided by the marketplace for post purchase communication.",
                        "example": "https://exampleseller.marketplaceservices.com"
                      },
                      "marketplacePaymentValue": {
                        "type": "integer",
                        "description": "Value of the payment made to the marketplace.",
                        "example": 100
                      },
                      "items": {
                        "type": "array",
                        "description": "Array of objects containing information on each of the order's items.",
                        "items":{
                          "type": "object",
                          "required": [
                            "id",
                            "quantity",
                            "seller"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The SKU ID.",
                              "example": "123"
                            },
                            "quantity": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The quantity of items of this specific SKU in the cart to be simulated.",
                              "example": 1
                            },
                            "seller": {
                              "type": "string",
                              "description": "The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.",
                              "example": "1"
                            },
                            "commission": {
                              "type": "integer",
                              "description": "Comission.",
                              "example": 10
                            },
                            "freightCommission": {
                              "type": "integer",
                              "description": "Freight comission",
                              "example": 10
                            },
                            "price": {
                              "type": "integer",
                              "description": "Item price within the context of the order without separating cents. For example, $24.99 is represented `2499`.",
                              "example": 2499
                            },
                            "bundleItems": {
                              "type": "array",
                              "description": "Information on services sold along with the SKU. Example: a gift package.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                      "type": "string",
                                      "description": "Service type.",
                                      "example": "type-example"
                                  },
                                  "id": {
                                      "type": "integer",
                                      "description": "Service identifier.",
                                      "example": "id-example"
                                  },
                                  "name": {
                                      "type": "string",
                                      "description": "Service name.",
                                      "example": "name-example"
                                  },
                                  "price": {
                                      "type": "integer",
                                      "description": "Service price. The last two digits are the cents.",
                                      "example": 199
                                  }
                                }
                              }
                            },
                            "itemAttachment": {
                              "type": "object",
                              "description": "Item attachment.",
                              "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Attachment name.",
                                    "example": "name-example"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Content referring to the customization requested by the customer.",
                                    "example": "content-example"
                                }
                            }
                            },
                            "attachments": {
                              "type": "array",
                              "description": "Array containing information on attachments.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "priceTags": {
                              "type": "array",
                              "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string",
                                    "description": "Price tag identifier.",
                                    "example": "1234abc-5678b-1234c"
                                  },
                                  "isPercentual": {
                                    "type": "boolean",
                                    "description": "`true` if price tag value is applied through a percentage.",
                                    "default": false
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Price tag name.",
                                    "example": "discount@name-1234abc-5678b-1234c"
                                  },
                                  "rawValue": {
                                    "type": "integer",
                                    "description": "Price tag value.",
                                    "example": -12
                                  },
                                  "value": {
                                    "type": "integer",
                                    "description": "Price tag raw value.",
                                    "example": -1200
                                  }
                                }
                              }
                            },
                            "measurementUnit": {
                              "type": "string",
                              "description": "SKU measurement unit.",
                              "example": "g"
                            },
                            "unitMultiplier": {
                              "type": "integer",
                              "description": "SKU unit multiplier.",
                              "example": 1
                            },
                            "isGift": {
                              "type": "boolean",
                              "description": "Indicates whether the order is a gift.",
                              "default": false
                            }
                          },
                          "example": {
                            "id": "123456789",
                            "quantity": 1,
                            "seller": "1"
                          }
                        }
                      },
                      "clientProfileData": {
                        "type": "object",
                        "description": "Customer's profile information.",
                        "required": [
                          "email",
                          "firstName",
                          "lastName",
                          "documentType",
                          "document"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Customer's email address.",
                            "example": "customer@examplemail.com"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Customer's first name.",
                            "example": "first-name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Customer's last name.",
                            "example": "last-name"
                          },
                          "documentType": {
                            "type": "string",
                            "description": "Type of the document informed by the customer.",
                            "example": "cpf"
                          },
                          "document": {
                            "type": "string",
                            "description": "Document number informed by the customer.",
                            "example": "123456789"
                          },
                          "phone": {
                            "type": "string",
                            "description": "Customer's phone number.",
                            "example": "+55110988887777"
                          },
                          "corporateName": {
                            "type": "string",
                            "description": "Company name, if the customer is a legal entity.",
                            "example": "company-name"
                          },
                          "tradeName": {
                            "type": "string",
                            "description": "Trade name, if the customer is a legal entity.",
                            "example": "trade-name"
                          },
                          "corporateDocument": {
                            "type": "string",
                            "description": "Corporate document, if the customer is a legal entity.",
                            "example": "12345678000100"
                          },
                          "stateInscription": {
                            "type": "string",
                            "description": "State inscription, if the customer is a legal entity.",
                            "example": "12345678"
                          },
                          "corporatePhone": {
                            "type": "string",
                            "description": "Corporate phone number, if the customer is a legal entity.",
                            "example": "+551100988887777"
                          },
                          "isCorporate": {
                            "type": "boolean",
                            "description": "`true` if the customer is a legal entity.",
                            "example": false
                          }
                        }
                      },
                      "shippingData": {
                        "type": "object",
                        "description": "Shipping information.",
                        "properties": {
                          "address": {
                            "type": "object",
                            "description": "Shipping address.",
                            "required": [
                              "addressType",
                              "receiverName",
                              "postalCode",
                              "city",
                              "state",
                              "country",
                              "street",
                              "number"
                            ],
                            "properties": {
                              "addressType": {
                                "type": "string",
                                "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                                "example": "residential"
                              },
                              "receiverName": {
                                "type": "string",
                                "description": "Name of the person who is going to receive the order.",
                                "example": "receiver-name"
                              },
                              "addressId": {
                                "type": "string",
                                "description": "Address ID.",
                                "example": "Home"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Postal Code.",
                                "example": "12345-000"
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the shipping address.",
                                "example": "Rio de Janeiro"
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the shipping address.",
                                "example": "Rio de Janeiro"
                              },
                              "country": {
                                "type": "string",
                                "description": "Three letter ISO code of the country of the shipping address.",
                                "example": "BRA"
                              },
                              "street": {
                                "type": "string",
                                "description": "Street of the shipping address.",
                                "example": "Praia de Botafogo"
                              },
                              "number": {
                                "type": "string",
                                "description": "Number of the building, house or apartment in the shipping address.",
                                "example": "300"
                              },
                              "neighborhood": {
                                "type": "string",
                                "description": "Neighborhood of the shipping address.",
                                "example": "Botafogo"
                              },
                              "complement": {
                                "type": "string",
                                "description": "Complement to the shipping address in case it applies.",
                                "example": "3rd floor"
                              },
                              "reference": {
                                "type": "string",
                                "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                                "example": "Grey building"
                              },
                              "geoCoordinates": {
                                "type": "array",
                                "description": "Array with two strings with geocoordinates, first latitude, then longitude.",
                                "items": {
                                  "type": "string",
                                  "example": "00.00000"
                                }
                              }
                            }                       
                          },
                          "logisticsInfo": {
                            "type": "array",
                            "description": "Array of objects containing logistics information of each item.",
                            "items": {
                              "type": "object",
                              "required": [
                                "itemIndex",
                                "selectedSla",
                                "price"
                              ],
                              "properties": {
                                "itemIndex": {
                                  "type": "integer",
                                  "description": "Index of the item in the `items` array, starting from 0.",
                                  "example": 0
                                },
                                "selectedSla": {
                                  "type": "string",
                                  "description": "Selected shipping option",
                                  "example": "Express"
                                },
                                "lockTTL": {
                                  "type": "string",
                                  "description": "Logistics reservation waiting time.",
                                  "example": "8d"
                                },
                                "shippingEstimate": {
                                  "type": "string",
                                  "description": "Estimated time until delivery for the item.",
                                  "example": "7d"
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                                  "example": 1099
                                },
                                "deliveryWindow": {
                                  "type": "object",
                                  "description": "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                                  "properties": {
                                    "startDateUtc": {
                                      "type": "string",
                                      "description": "Delivery window starting day and time in UTC.",
                                      "example": "2021-07-13T00:00:00+00:00"
                                    },
                                    "endDateUtc": {
                                      "type": "string",
                                      "description": "Delivery window ending day and time in UTC.",
                                      "example": "2021-07-13T23:59:59+00:00"
                                    },
                                    "price": {
                                      "type": "integer",
                                      "description": "Delivery window price.",
                                      "default": 0
                                    },
                                    "lisPrice": {
                                      "type": "integer",
                                      "description": "Delivery window list price.",
                                      "default": 0
                                    },
                                    "tax": {
                                      "type": "integer",
                                      "description": "Delivery window tax.",
                                      "default": 0
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "updateStatus": {
                            "type": "string",
                            "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                            "example": "updated"
                          }
                        }
                      },
                      "paymentData": {
                        "type": "object",
                        "description": "In other contexts, this field tipically holds an object with payment information. However, since the payment is processed by the marketplace, it will be sent to the seller as `null` in this context.",
                        "default": null
                      },
                      "marketingData": {
                        "type": "object",
                        "properties": {
                            "utmSource": {
                                "type": "string",
                                "description": "UTM source.",
                                "example": "Facebook"
                            },
                            "utmMedium": {
                                "type": "string",
                                "description": "UTM medium.",
                                "example": "CPC"
                            },
                            "utmCampaign": {
                                "type": "string",
                                "description": "UTM campaign",
                                "example": "Black friday"
                            },
                            "utmiPage": {
                                "type": "string",
                                "description": "utmi_page (internal utm)",
                                "example": "utmi_page-example"
                            },
                            "utmiPart": {
                                "type": "string",
                                "description": "utmi_part (internal utm)",
                                "example": "utmi_part-exmaple"
                            },
                            "utmiCampaign": {
                                "type": "string",
                                "description": "utmi_campaign (internal utm)",
                                "example": "utmi_campaign-exmaple"
                            }
                        }
                      },
                      "openTextField": {
                        "type": "string",
                        "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
                        "example": "open-text-example"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "OK",
                "headers": {},
                "content": {
                  "application/json": {
                    "examples": {
                      "response": {
                        "value": [
                          {
                            "marketplaceOrderId": "956",
                            "orderId": "MBR-956",
                            "followUpEmail": "9762a2a9028a4b5d8eb9a8ff909d15ce@ct.vtex.com.br",
                            "items": [
                              {
                                "id": "2",
                                "quantity": 1,
                                "seller": "1",
                                "priceTable": null,
                                "comission": 0,
                                "freightComission": 0,
                                "price": 13890,
                                "bundleItems": [],
                                "priceTags": [],
                                "measurementUnit": "un",
                                "unitMultiplier": 1.0000,
                                "isGift": false
                              }
                            ],
                            "clientProfileData": {
                              "email": "fba45537f5c84d4092cf064da742fe3d@ct.vtex.com.br",
                              "firstName": "Júlio",
                              "lastName": "Augusto de Oliveira",
                              "documentType": "cpf",
                              "document": "11417984642",
                              "phone": "395555258",
                              "corporateName": null,
                              "tradeName": null,
                              "corporateDocument": null,
                              "stateInscription": null,
                              "corporatePhone": null,
                              "isCorporate": false,
                              "userProfileId": null
                            },
                            "shippingData": {
                              "isFOB": false,
                              "address": {
                                "addressType": "Residencial",
                                "receiverName": "Júlio Augusto de Oliveira",
                                "addressId": "Casa",
                                "postalCode": "98776003",
                                "city": "Americana",
                                "state": "SP",
                                "country": "BRA",
                                "street": "Rua da casa",
                                "number": "31187",
                                "neighborhood": "Grande circo",
                                "complement": null,
                                "reference": "Bairro do foca / Posto de Saúde 65",
                                "geoCoordinates": []
                              },
                              "selectedaddresses": [
                                {
                                  "addressType": "Residencial",
                                  "receiverName": "Júlio Augusto de Oliveira",
                                  "addressId": "Casa",
                                  "postalCode": "98776003",
                                  "city": "Americana",
                                  "state": "SP",
                                  "country": "BRA",
                                  "street": "Rua da casa",
                                  "number": "31187",
                                  "neighborhood": "Grande circo",
                                  "complement": null,
                                  "reference": "Bairro do foca / Posto de Saúde 65",
                                  "geoCoordinates": []
                                }
                              ],
                              "logisticsInfo": [
                                {
                                  "itemIndex": 0,
                                  "selectedSla": "Correios",
                                  "addressId": "Casa",
                                  "selectedDeliveryChannel": "delivery",
                                  "deliveryIds": [
                                    {
                                      "warehouseId": "1_1",
                                      "dockId": "1"
                                    }
                                  ],
                                  "lockTTL": "8d",
                                  "shippingEstimate": "7d",
                                  "price": 1090,
                                  "deliveryWindow": null
                                }
                              ],
                              "trackingHints": []
                            },
                            "paymentData":null,
                            "customData": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": false
          }
        },
        "/{accountName}.{environment}.com.br/api/fulfillment/pvt/orders/{orderId}/fulfill": {
            "post": {
              "tags": ["External Marketplace"],
              "summary": "Authorize dispatch for fulfillment order",
              "description": "Creates fulfillment order, meaning that it is an order for the seller's side in a sale made through a marketplace. This order assumes the transaction itself has already happened on the marketplace's side and, therfore, cares only about the fulfillment side.",
              "operationId": "AuthorizeDispatchForFulfillmentOrder",
              "parameters": [
                {
                  "name": "accountName",
                  "in": "path",
                  "required": true,
                  "description": "Name of the VTEX account. Used as part of the URL.",
                  "schema": {
                    "type": "string",
                    "default": "apiexamples"
                  }
                },
                {
                  "name": "environment",
                  "in": "path",
                  "required": true,
                  "description": "Environment to be used. It is passed as part of the URL.",
                  "schema": {
                    "type": "string",
                    "default": "vtexcommercestable"
                  }
                },
                {
                  "name": "orderId",
                  "in": "path",
                  "required": true,
                  "description": "ID of the order that is to be authorized. It is composed of the `afilliateId` and the `marketplaceOrderId` joined with a `-`. For instance, an order with an ID `\"123\"` coming from the marketplace `\"MKP\"` has an `orderId` of `\"MKP-123\"`.",
                  "schema": {
                    "type": "string",
                    "default": "MKP-123"
                  }
                },
                {
                  "name": "Content-Type",
                  "in": "header",
                  "description": "Type of the content being sent.",
                  "required": true,
                  "style": "simple",
                  "schema": {
                    "type": "string",
                    "default": "application/json"
                  }
                },
                {
                  "name": "Accept",
                  "in": "header",
                  "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "required": true,
                  "style": "simple",
                  "schema": {
                    "type": "string",
                    "default": "application/json"
                  }
                },
                {
                  "name": "sc",
                  "in": "query",
                  "description": "Sales channel.",
                  "required": false,
                  "style": "form",
                  "schema": {
                    "type": "string",
                    "example": "1"
                  }
                },
                {
                  "name": "affiliateId",
                  "in": "query",
                  "description": "Id of the marketplace where the order originates.",
                  "required": true,
                  "style": "form",
                  "schema": {
                    "type": "string",
                    "example": "MKP"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                          "marketplaceOrderId": {
                              "type": "string",
                              "description": "ID of the order in the marketplace. It is the same as the `orderId` without the `afilliateId` at the beginning. For instance, if the `orderId` is `\"MKP-123\"`, the `marketplaceOrderId` is `\"123\"`.",
                              "default": "123"
                          }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "headers": {},
                  "content": {
                    "application/json": {
                      "examples": {
                        "response": {
                          "value": {
                            "marketplaceOrderId": "123"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false
            }
          }
    },
	"security": [
		{
			"appKey": [],
			"appToken": []
		}
    ],
    "components": {
        "schemas": {
            "fulfillmentItem":{
                "required": [
                    "id",
                    "quantity",
                    "seller"
                ],
                "type": "array",
                "items": {
                "type": "object",    
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID.",
                        "example": "6"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of items of the SKU in the cart.",
                        "example": 1
                    },
                    "seller": {
                        "type": "string",
                        "description": "ID of the seller registered in VTEX.",
                        "example": "01"
                    }
                }
            }
            },
            "orderPlacement":{
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "Identifies the order in the marketplace.",
                        "example": "1138342255777-01"
                    },
                    "marketplaceServicesEndpoint": {
                        "type": "string",
                        "description": "Endpoint sent by VTEX to the seller, that will be used to send the invoice and tracking data to the marketplace.",
                        "example": "https://marketplaceservicesendpoint.myvtex.com/"
                    },
                    "marketplacePaymentValue": {
                        "type": "integer",
                        "description": "Amount that the marketplace agrees to pay to the seller. The last two digits are the cents. For example, $24.99 is represented 2499.",
                        "example": 2499
                    },
                    "items": {
                        "type": "array",
                        "description": "Array of objects containing data about each SKU in the cart.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "SKU ID.",
                                    "example": "123456789abc"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "description": "Quantity of the item.",
                                    "example": 1
                                },
                                "seller": {
                                    "type": "string",
                                    "description": "ID of the seller registered in VTEX.",
                                    "example": "seller-example"
                                },
                                "commission": {
                                    "type": "integer",
                                    "description": "Comission.",
                                    "example": 0
                                },
                                "freightCommission": {
                                    "type": "integer",
                                    "description": "Freight comission.",
                                    "example": 0
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "SKU price. The last two digits are the cents. For example, $24.99 is represented 2499.",
                                    "example": 2499
                                },
                                "bundleItems": {
                                    "type": "array",
                                    "description": "Information on services sold along with the SKU. Example: a gift package.",
                                    "items": {
                                        "$ref": "#/components/schemas/bundleItemsItem"
                                    }
                                },
                                "itemsAttachment": {
                                    "type": "array",
                                    "description": "Attachments sold with the SKU.",
                                    "items": {
                                        "$ref": "#/components/schemas/itemAttachment"
                                    }
                                },
                                "attachments": {
                                    "type": "array",
                                    "description": "Array containing information on attachments.",
                                    "items": {}
                                },
                                "priceTags": {
                                    "type": "array",
                                    "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "identifier": {
                                          "type": "string",
                                          "description": "Price tag identifier.",
                                          "example": "1234abc-5678b-1234c"
                                        },
                                        "isPercentual": {
                                          "type": "boolean",
                                          "description": "`true` if price tag value is applied through a percentage.",
                                          "example": false
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Price tag name.",
                                          "example": "discount@name-1234abc-5678b-1234c"
                                        },
                                        "rawValue": {
                                          "type": "integer",
                                          "description": "Price tag value.",
                                          "example": -12
                                        },
                                        "value": {
                                          "type": "integer",
                                          "description": "Price tag raw value.",
                                          "example": -1200
                                        }
                                      }
                                    }
                                },
                                "measurementUnit": {
                                    "type": "string",
                                    "description": "SKU measurement unit.",
                                    "example": "g"
                                },
                                "unitMultiplier": {
                                    "type": "integer",
                                    "description": "SKU unit multiplier.",
                                    "example": 1
                                },
                                "isGift": {
                                    "type": "boolean",
                                    "description": "`true` if the item is a gift."
                                }
                            }
                        }
                    },
                    "paymentData": {
                        "type": "object",
                        "description": "In other contexts, this field tipically holds an object with payment information. However, since the payment is processed by the marketplace, it will be sent to the seller as `null` in this context.",
                        "default": null
                    },
                    "clientProfileData": {
                        "type": "object",
                        "description": "Customer's profile information.",
                        "required": [
                          "email",
                          "firstName",
                          "lastName",
                          "documentType",
                          "document",
                          "isCorporate"
                        ],
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Customer's email address.",
                            "example": "customer@examplemail.com"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Customer's first name.",
                            "example": "first-name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Customer's last name.",
                            "example": "last-name"
                          },
                          "documentType": {
                            "type": "string",
                            "description": "Type of the document informed by the customer.",
                            "example": "cpf"
                          },
                          "document": {
                            "type": "string",
                            "description": "Document number informed by the customer.",
                            "example": "123456789"
                          },
                          "phone": {
                            "type": "string",
                            "description": "Customer's phone number.",
                            "example": "+55110988887777"
                          },
                          "corporateName": {
                            "type": "string",
                            "description": "Company name, if the customer is a legal entity.",
                            "example": "company-name"
                          },
                          "tradeName": {
                            "type": "string",
                            "description": "Trade name, if the customer is a legal entity.",
                            "example": "trade-name"
                          },
                          "corporateDocument": {
                            "type": "string",
                            "description": "Corporate document, if the customer is a legal entity.",
                            "example": "12345678000100"
                          },
                          "stateInscription": {
                            "type": "string",
                            "description": "State inscription, if the customer is a legal entity.",
                            "example": "12345678"
                          },
                          "corporatePhone": {
                            "type": "string",
                            "description": "Corporate phone number, if the customer is a legal entity.",
                            "example": "+551100988887777"
                          },
                          "isCorporate": {
                            "type": "boolean",
                            "description": "`true` if the customer is a legal entity.",
                            "default": false
                          }
                        }
                    },
                    "shippingData": {
                        "type": "object",
                        "description": "Shipping information.",
                        "properties": {
                          "address": {
                            "type": "object",
                            "description": "Shipping address.",
                            "required": [
                              "addressType",
                              "receiverName",
                              "postalCode",
                              "city",
                              "state",
                              "country",
                              "street",
                              "neighborhood",
                              "number"
                            ],
                            "properties": {
                              "addressType": {
                                "type": "string",
                                "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                                "example": "residential"
                              },
                              "receiverName": {
                                "type": "string",
                                "description": "Name of the person who is going to receive the order.",
                                "example": "receiver-name"
                              },
                              "addressId": {
                                "type": "string",
                                "description": "Address ID.",
                                "example": "Home"
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "Postal Code.",
                                "example": "12345-000"
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the shipping address.",
                                "example": "Rio de Janeiro"
                              },
                              "state": {
                                "type": "string",
                                "description": "State of the shipping address.",
                                "example": "Rio de Janeiro"
                              },
                              "country": {
                                "type": "string",
                                "description": "Three letter ISO code of the country of the shipping address.",
                                "example": "BRA"
                              },
                              "street": {
                                "type": "string",
                                "description": "Street of the shipping address.",
                                "example": "Praia de Botafogo"
                              },
                              "number": {
                                "type": "string",
                                "description": "Number of the building, house or apartment in the shipping address.",
                                "example": "300"
                              },
                              "neighborhood": {
                                "type": "string",
                                "description": "Neighborhood of the shipping address.",
                                "example": "Botafogo"
                              },
                              "complement": {
                                "type": "string",
                                "description": "Complement to the shipping address in case it applies.",
                                "example": "3rd floor"
                              },
                              "reference": {
                                "type": "string",
                                "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                                "example": "Grey building"
                              },
                              "geoCoordinates": {
                                "type": "array",
                                "description": "Array with two strings with geocoordinates, first latitude, then longitude.",
                                "items": {
                                  "type": "string",
                                  "example": "00.00000"
                                }
                              }
                            }                       
                          },
                          "logisticsInfo": {
                            "type": "array",
                            "description": "Array of objects containing logistics information of each item.",
                            "items": {
                              "type": "object",
                              "required": [
                                "itemIndex",
                                "selectedSla",
                                "price"
                              ],
                              "properties": {
                                "itemIndex": {
                                  "type": "integer",
                                  "description": "Index of the item in the `items` array, starting from 0.",
                                  "example": 0
                                },
                                "selectedSla": {
                                  "type": "string",
                                  "description": "Selected shipping option",
                                  "example": "Express"
                                },
                                "lockTTL": {
                                  "type": "string",
                                  "description": "Logistics reservation waiting time.",
                                  "example": "8d"
                                },
                                "shippingEstimate": {
                                  "type": "string",
                                  "description": "Estimated time until delivery for the item.",
                                  "example": "7d"
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                                  "example": 1099
                                },
                                "deliveryWindow": {
                                  "type": "object",
                                  "description": "Scheduled delivery window information, in case it applies to the item.",
                                  "properties": {}
                                }
                              }
                            }
                          },
                          "updateStatus": {
                            "type": "string",
                            "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                            "example": "updated"
                          }
                        }
                    },
                    "marketingData": {
                        "type": "object",
                        "description": "Marketing tracking data. If the order has no tracking data, the value will be `null`.",
                        "properties": {
                            "utmSource": {
                                "type": "string",
                                "description": "UTM source.",
                                "example": "Facebook"
                            },
                            "utmMedium": {
                                "type": "string",
                                "description": "UTM medium.",
                                "example": "CPC"
                            },
                            "utmCampaign": {
                                "type": "string",
                                "description": "UTM campaign",
                                "example": "Black friday"
                            },
                            "utmiPage": {
                                "type": "string",
                                "description": "utmi_page (internal utm)",
                                "example": "utmi_page-example"
                            },
                            "utmiPart": {
                                "type": "string",
                                "description": "utmi_part (internal utm)",
                                "example": "utmi_part-exmaple"
                            },
                            "utmiCampaign": {
                                "type": "string",
                                "description": "utmi_campaign (internal utm)",
                                "example": "utmi_campaign-exmaple"
                            }
                        }
                    },
                    "openTextField": {
                        "type": "string",
                        "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `json` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
                        "example": "open-text-example"
                    }
                }
            },
            "bundleItemsItem":{
                "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Service type.",
                            "example": "type"
                        },
                        "id": {
                            "type": "integer",
                            "description": "Service identifier.",
                            "example": "id"
                        },
                        "name": {
                            "type": "string",
                            "description": "Service name.",
                            "example": "name"
                        },
                        "price": {
                            "type": "integer",
                            "description": "Service price. The last two digits are the cents.",
                            "example": 10
                        }
                    }
            },
            "itemAttachment":{
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Attachment name.",
                        "example": "name-example"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content referring to the customization requested by the customer.",
                        "example": "content-example"
                    }
                }
            },
            "marketingData":{
                "type": "object",
                "properties": {
                    "utmSource": {
                        "type": "string",
                        "description": "UTM source.",
                        "example": "Facebook"
                    },
                    "utmMedium": {
                        "type": "string",
                        "description": "UTM medium.",
                        "example": "CPC"
                    },
                    "utmCampaign": {
                        "type": "string",
                        "description": "UTM campaign",
                        "example": "Black friday"
                    },
                    "utmiPage": {
                        "type": "string",
                        "description": "utmi_page (internal utm)",
                        "example": "utmi_page-example"
                    },
                    "utmiPart": {
                        "type": "string",
                        "description": "utmi_part (internal utm)",
                        "example": "utmi_part-exmaple"
                    },
                    "utmiCampaign": {
                        "type": "string",
                        "description": "utmi_campaign (internal utm)",
                        "example": "utmi_campaign-exmaple"
                    }
                }
            },
            "VtexMapperRegistration":{
                "required": [
                    "displayName",
                    "categoryTreeEndPoint",
                    "mappingEndPoint",
                    "properties"
                ],
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Marketplace Name, that will be displayed in VTEX Mapper.",
                        "example": "Marketplace A"
                    },
                    "categoryTreeEndPoint": {
                        "type": "string",
                        "description": "Endpoint that returns categories and attributes according to VTEX  Mapper specifications.",
                        "example": "http://api.vtexinternal.com.br/api/{{marketplaceName}}/mapper/categories"
                    },
                    "mappingEndPoint": {
                        "type": "string",
                        "description": "Secure endpoint that will receive the category mapping sent by VTEX Mapper.",
                        "example": "http://api.vtexinternal.com.br/api/{{marketplaceName}}/mapper/mapping"
                    },
                    "properties": {
                        "required": [
                            "allowsRemap"
                        ],
                        "type": "array",
                        "description": "",
                        "items": {     
                            "type": "object",                  
                            "properties": {
                                "allowsRemap": {
                                "type": "boolean",
                                "description": "Allows rempaping categories in case the marketplace or seller tree is altered. If marked as `true`, all trees will be remapped.",
                                "example": "false"
                                },
                                "allowsRemapParent": {
                                "type": "boolean",
                                "description": "Allows rempaping parent categories in case the marketplace or seller tree is altered. If marked as `true`, all trees will be remapped",
                                "example": "false"
                                }
                            }
                        }  
                    }
                }                
            },
            "sendCategoryMappingToVtexMapper": {
                "required": [
                    "categories",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "categories": {
                        "required": [
                            "id",
                            "name",
                            "children"
                        ],
                        "type": "array",
                        "title": "",
                        "description": "Array with Marketplace parent categories and their information.",
                        "default": [],
                        "items": 
                        {
                            "type": "object",
                            "title": "",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "title": "id",
                                    "description": "ID of the parent category in the marketplace.",
                                    "default": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "name",
                                    "description": "Name of the parent category in the marketplace.",
                                    "default": "Appliances"
                                },
                                "children": {
                                    "type": "array",
                                    "title": "chidren",
                                    "description": "Array with children categories in the marketplace, and their information.",
                                    "default": [],
                                    "items": 
                                    {
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "name",
                                            "children",
                                            "specifications"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "title": "id",
                                                "description": "ID of the child  category in the marketplace.",
                                                "default": "1a"
                                            },
                                            "name": {
                                                "type": "string",
                                                "title": "name",
                                                "description": "Name of the child  category in the marketplace.",
                                                "default": "Kitchen"
                                            },
                                            "children": {
                                                "type": "array",
                                                "title": "",
                                                "description": "Grandchildren categories in the marketplace. Send as array of `id`, `name` and `specifications`.",
                                                "default": [],
                                                "items": {
                                                }
                                            },
                                            "specifications": {
                                                "type": "array",
                                                "title": "specifications",
                                                "description": "",
                                                "default": [],
                                                "items": 
                                                {
                                                    "type": "object",
                                                    "description": "Specifications of children categories.",
                                                    "default": {},
                                                    "required": [
                                                        "attributeName",
                                                        "required",
                                                        "attributeValues"
                                                    ],
                                                    "properties": {
                                                        "attributeName": {
                                                            "type": "string",
                                                            "title": "attributeName",
                                                            "description": "Name of the attribute sent as a specification.",
                                                            "default": "Color"
                                                        },
                                                        "required": {
                                                            "type": "boolean",
                                                            "title": "required",
                                                            "description": "If the specification is required, mark this flag as `true`. If not, mark it as `false`.",
                                                            "default": false
                                                        },
                                                        "attributeValues": {
                                                            "type": "array",
                                                            "title": "attributeValues",
                                                            "description": "Values of the atttribute specified.",
                                                            "default": [],
                                                            "items": 
                                                            {
                                                                "type": "object",
                                                                "title": "",
                                                                "description": "Array of the multi´ple `valueNames` for the attribute specificied.",
                                                                "default": {},
                                                                "required": [
                                                                    "valueName"
                                                                ],
                                                                "properties": {
                                                                    "valueName": {
                                                                        "type": "string",
                                                                        "title": "valueName",
                                                                        "description": "",
                                                                        "default": "Red"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }                
            }
        },
        "securitySchemes": {
            "appKey": {
              "type": "apiKey",
              "in": "header",
              "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
              "type": "apiKey",
              "in": "header",
              "name": "X-VTEX-API-AppToken"
            }
        }
    },
	"tags": [
		{
			"name": "External Seller"
		},
		{
			"name": "External Marketplace"
		}
	]
}